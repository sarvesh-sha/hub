# coding: utf-8

"""
Copyright (C) 2017-2018, Optio3, Inc. All Rights Reserved.

Proprietary & Confidential Information.

Optio3 Hub APIs
APIs and Definitions for the Optio3 Hub product.

OpenAPI spec version: 1.0.0


NOTE: This class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
Do not edit the class manually.
"""


from pprint import pformat
from six import iteritems
import re

class TimeSeriesDisplayConfiguration(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, title=None, size=None, fill_area=None, hide_decimation=None, automatic_aggregation=None, panel_spacing=None, show_alerts=None, hide_sources=None):
        """
        TimeSeriesDisplayConfiguration - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'title': 'str',
            'size': 'int',
            'fill_area': 'bool',
            'hide_decimation': 'bool',
            'automatic_aggregation': 'bool',
            'panel_spacing': 'int',
            'show_alerts': 'bool',
            'hide_sources': 'bool'
        }

        self.attribute_map = {
            'title': 'title',
            'size': 'size',
            'fill_area': 'fillArea',
            'hide_decimation': 'hideDecimation',
            'automatic_aggregation': 'automaticAggregation',
            'panel_spacing': 'panelSpacing',
            'show_alerts': 'showAlerts',
            'hide_sources': 'hideSources'
        }

        self._title = title
        self._size = size
        self._fill_area = fill_area
        self._hide_decimation = hide_decimation
        self._automatic_aggregation = automatic_aggregation
        self._panel_spacing = panel_spacing
        self._show_alerts = show_alerts
        self._hide_sources = hide_sources


    @property
    def title(self):
        """
        Gets the title of this TimeSeriesDisplayConfiguration.

        :return: The title of this TimeSeriesDisplayConfiguration.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """
        Sets the title of this TimeSeriesDisplayConfiguration.

        :param title: The title of this TimeSeriesDisplayConfiguration.
        :type: str
        """

        self._title = title

    @property
    def size(self):
        """
        Gets the size of this TimeSeriesDisplayConfiguration.

        :return: The size of this TimeSeriesDisplayConfiguration.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """
        Sets the size of this TimeSeriesDisplayConfiguration.

        :param size: The size of this TimeSeriesDisplayConfiguration.
        :type: int
        """

        self._size = size

    @property
    def fill_area(self):
        """
        Gets the fill_area of this TimeSeriesDisplayConfiguration.

        :return: The fill_area of this TimeSeriesDisplayConfiguration.
        :rtype: bool
        """
        return self._fill_area

    @fill_area.setter
    def fill_area(self, fill_area):
        """
        Sets the fill_area of this TimeSeriesDisplayConfiguration.

        :param fill_area: The fill_area of this TimeSeriesDisplayConfiguration.
        :type: bool
        """

        self._fill_area = fill_area

    @property
    def hide_decimation(self):
        """
        Gets the hide_decimation of this TimeSeriesDisplayConfiguration.

        :return: The hide_decimation of this TimeSeriesDisplayConfiguration.
        :rtype: bool
        """
        return self._hide_decimation

    @hide_decimation.setter
    def hide_decimation(self, hide_decimation):
        """
        Sets the hide_decimation of this TimeSeriesDisplayConfiguration.

        :param hide_decimation: The hide_decimation of this TimeSeriesDisplayConfiguration.
        :type: bool
        """

        self._hide_decimation = hide_decimation

    @property
    def automatic_aggregation(self):
        """
        Gets the automatic_aggregation of this TimeSeriesDisplayConfiguration.

        :return: The automatic_aggregation of this TimeSeriesDisplayConfiguration.
        :rtype: bool
        """
        return self._automatic_aggregation

    @automatic_aggregation.setter
    def automatic_aggregation(self, automatic_aggregation):
        """
        Sets the automatic_aggregation of this TimeSeriesDisplayConfiguration.

        :param automatic_aggregation: The automatic_aggregation of this TimeSeriesDisplayConfiguration.
        :type: bool
        """

        self._automatic_aggregation = automatic_aggregation

    @property
    def panel_spacing(self):
        """
        Gets the panel_spacing of this TimeSeriesDisplayConfiguration.

        :return: The panel_spacing of this TimeSeriesDisplayConfiguration.
        :rtype: int
        """
        return self._panel_spacing

    @panel_spacing.setter
    def panel_spacing(self, panel_spacing):
        """
        Sets the panel_spacing of this TimeSeriesDisplayConfiguration.

        :param panel_spacing: The panel_spacing of this TimeSeriesDisplayConfiguration.
        :type: int
        """

        self._panel_spacing = panel_spacing

    @property
    def show_alerts(self):
        """
        Gets the show_alerts of this TimeSeriesDisplayConfiguration.

        :return: The show_alerts of this TimeSeriesDisplayConfiguration.
        :rtype: bool
        """
        return self._show_alerts

    @show_alerts.setter
    def show_alerts(self, show_alerts):
        """
        Sets the show_alerts of this TimeSeriesDisplayConfiguration.

        :param show_alerts: The show_alerts of this TimeSeriesDisplayConfiguration.
        :type: bool
        """

        self._show_alerts = show_alerts

    @property
    def hide_sources(self):
        """
        Gets the hide_sources of this TimeSeriesDisplayConfiguration.

        :return: The hide_sources of this TimeSeriesDisplayConfiguration.
        :rtype: bool
        """
        return self._hide_sources

    @hide_sources.setter
    def hide_sources(self, hide_sources):
        """
        Sets the hide_sources of this TimeSeriesDisplayConfiguration.

        :param hide_sources: The hide_sources of this TimeSeriesDisplayConfiguration.
        :type: bool
        """

        self._hide_sources = hide_sources

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, TimeSeriesDisplayConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
