# coding: utf-8

"""
Copyright (C) 2017-2018, Optio3, Inc. All Rights Reserved.

Proprietary & Confidential Information.

Optio3 Hub APIs
APIs and Definitions for the Optio3 Hub product.

OpenAPI spec version: 1.0.0


NOTE: This class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
Do not edit the class manually.
"""


from pprint import pformat
from six import iteritems
import re

class UsageFilterResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, user_preference_hits=None, user_preference_items=None, system_preference_hits=None, system_preference_items=None, dashboard_hits=None, dashboard_items=None, alert_definition_version_hits=None, alert_definition_version_items=None, metrics_definition_version_hits=None, metrics_definition_version_items=None, normalization_version_hits=None, normalization_version_items=None, report_definition_version_hits=None, report_definition_version_items=None, workflow_hits=None, workflow_items=None):
        """
        UsageFilterResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'user_preference_hits': 'int',
            'user_preference_items': 'list[RecordIdentity]',
            'system_preference_hits': 'int',
            'system_preference_items': 'list[RecordIdentity]',
            'dashboard_hits': 'int',
            'dashboard_items': 'list[RecordIdentity]',
            'alert_definition_version_hits': 'int',
            'alert_definition_version_items': 'list[RecordIdentity]',
            'metrics_definition_version_hits': 'int',
            'metrics_definition_version_items': 'list[RecordIdentity]',
            'normalization_version_hits': 'int',
            'normalization_version_items': 'list[RecordIdentity]',
            'report_definition_version_hits': 'int',
            'report_definition_version_items': 'list[RecordIdentity]',
            'workflow_hits': 'int',
            'workflow_items': 'list[RecordIdentity]'
        }

        self.attribute_map = {
            'user_preference_hits': 'userPreferenceHits',
            'user_preference_items': 'userPreferenceItems',
            'system_preference_hits': 'systemPreferenceHits',
            'system_preference_items': 'systemPreferenceItems',
            'dashboard_hits': 'dashboardHits',
            'dashboard_items': 'dashboardItems',
            'alert_definition_version_hits': 'alertDefinitionVersionHits',
            'alert_definition_version_items': 'alertDefinitionVersionItems',
            'metrics_definition_version_hits': 'metricsDefinitionVersionHits',
            'metrics_definition_version_items': 'metricsDefinitionVersionItems',
            'normalization_version_hits': 'normalizationVersionHits',
            'normalization_version_items': 'normalizationVersionItems',
            'report_definition_version_hits': 'reportDefinitionVersionHits',
            'report_definition_version_items': 'reportDefinitionVersionItems',
            'workflow_hits': 'workflowHits',
            'workflow_items': 'workflowItems'
        }

        self._user_preference_hits = user_preference_hits
        self._user_preference_items = user_preference_items
        self._system_preference_hits = system_preference_hits
        self._system_preference_items = system_preference_items
        self._dashboard_hits = dashboard_hits
        self._dashboard_items = dashboard_items
        self._alert_definition_version_hits = alert_definition_version_hits
        self._alert_definition_version_items = alert_definition_version_items
        self._metrics_definition_version_hits = metrics_definition_version_hits
        self._metrics_definition_version_items = metrics_definition_version_items
        self._normalization_version_hits = normalization_version_hits
        self._normalization_version_items = normalization_version_items
        self._report_definition_version_hits = report_definition_version_hits
        self._report_definition_version_items = report_definition_version_items
        self._workflow_hits = workflow_hits
        self._workflow_items = workflow_items


    @property
    def user_preference_hits(self):
        """
        Gets the user_preference_hits of this UsageFilterResponse.

        :return: The user_preference_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._user_preference_hits

    @user_preference_hits.setter
    def user_preference_hits(self, user_preference_hits):
        """
        Sets the user_preference_hits of this UsageFilterResponse.

        :param user_preference_hits: The user_preference_hits of this UsageFilterResponse.
        :type: int
        """

        self._user_preference_hits = user_preference_hits

    @property
    def user_preference_items(self):
        """
        Gets the user_preference_items of this UsageFilterResponse.

        :return: The user_preference_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._user_preference_items

    @user_preference_items.setter
    def user_preference_items(self, user_preference_items):
        """
        Sets the user_preference_items of this UsageFilterResponse.

        :param user_preference_items: The user_preference_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._user_preference_items = user_preference_items

    @property
    def system_preference_hits(self):
        """
        Gets the system_preference_hits of this UsageFilterResponse.

        :return: The system_preference_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._system_preference_hits

    @system_preference_hits.setter
    def system_preference_hits(self, system_preference_hits):
        """
        Sets the system_preference_hits of this UsageFilterResponse.

        :param system_preference_hits: The system_preference_hits of this UsageFilterResponse.
        :type: int
        """

        self._system_preference_hits = system_preference_hits

    @property
    def system_preference_items(self):
        """
        Gets the system_preference_items of this UsageFilterResponse.

        :return: The system_preference_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._system_preference_items

    @system_preference_items.setter
    def system_preference_items(self, system_preference_items):
        """
        Sets the system_preference_items of this UsageFilterResponse.

        :param system_preference_items: The system_preference_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._system_preference_items = system_preference_items

    @property
    def dashboard_hits(self):
        """
        Gets the dashboard_hits of this UsageFilterResponse.

        :return: The dashboard_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._dashboard_hits

    @dashboard_hits.setter
    def dashboard_hits(self, dashboard_hits):
        """
        Sets the dashboard_hits of this UsageFilterResponse.

        :param dashboard_hits: The dashboard_hits of this UsageFilterResponse.
        :type: int
        """

        self._dashboard_hits = dashboard_hits

    @property
    def dashboard_items(self):
        """
        Gets the dashboard_items of this UsageFilterResponse.

        :return: The dashboard_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._dashboard_items

    @dashboard_items.setter
    def dashboard_items(self, dashboard_items):
        """
        Sets the dashboard_items of this UsageFilterResponse.

        :param dashboard_items: The dashboard_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._dashboard_items = dashboard_items

    @property
    def alert_definition_version_hits(self):
        """
        Gets the alert_definition_version_hits of this UsageFilterResponse.

        :return: The alert_definition_version_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._alert_definition_version_hits

    @alert_definition_version_hits.setter
    def alert_definition_version_hits(self, alert_definition_version_hits):
        """
        Sets the alert_definition_version_hits of this UsageFilterResponse.

        :param alert_definition_version_hits: The alert_definition_version_hits of this UsageFilterResponse.
        :type: int
        """

        self._alert_definition_version_hits = alert_definition_version_hits

    @property
    def alert_definition_version_items(self):
        """
        Gets the alert_definition_version_items of this UsageFilterResponse.

        :return: The alert_definition_version_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._alert_definition_version_items

    @alert_definition_version_items.setter
    def alert_definition_version_items(self, alert_definition_version_items):
        """
        Sets the alert_definition_version_items of this UsageFilterResponse.

        :param alert_definition_version_items: The alert_definition_version_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._alert_definition_version_items = alert_definition_version_items

    @property
    def metrics_definition_version_hits(self):
        """
        Gets the metrics_definition_version_hits of this UsageFilterResponse.

        :return: The metrics_definition_version_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._metrics_definition_version_hits

    @metrics_definition_version_hits.setter
    def metrics_definition_version_hits(self, metrics_definition_version_hits):
        """
        Sets the metrics_definition_version_hits of this UsageFilterResponse.

        :param metrics_definition_version_hits: The metrics_definition_version_hits of this UsageFilterResponse.
        :type: int
        """

        self._metrics_definition_version_hits = metrics_definition_version_hits

    @property
    def metrics_definition_version_items(self):
        """
        Gets the metrics_definition_version_items of this UsageFilterResponse.

        :return: The metrics_definition_version_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._metrics_definition_version_items

    @metrics_definition_version_items.setter
    def metrics_definition_version_items(self, metrics_definition_version_items):
        """
        Sets the metrics_definition_version_items of this UsageFilterResponse.

        :param metrics_definition_version_items: The metrics_definition_version_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._metrics_definition_version_items = metrics_definition_version_items

    @property
    def normalization_version_hits(self):
        """
        Gets the normalization_version_hits of this UsageFilterResponse.

        :return: The normalization_version_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._normalization_version_hits

    @normalization_version_hits.setter
    def normalization_version_hits(self, normalization_version_hits):
        """
        Sets the normalization_version_hits of this UsageFilterResponse.

        :param normalization_version_hits: The normalization_version_hits of this UsageFilterResponse.
        :type: int
        """

        self._normalization_version_hits = normalization_version_hits

    @property
    def normalization_version_items(self):
        """
        Gets the normalization_version_items of this UsageFilterResponse.

        :return: The normalization_version_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._normalization_version_items

    @normalization_version_items.setter
    def normalization_version_items(self, normalization_version_items):
        """
        Sets the normalization_version_items of this UsageFilterResponse.

        :param normalization_version_items: The normalization_version_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._normalization_version_items = normalization_version_items

    @property
    def report_definition_version_hits(self):
        """
        Gets the report_definition_version_hits of this UsageFilterResponse.

        :return: The report_definition_version_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._report_definition_version_hits

    @report_definition_version_hits.setter
    def report_definition_version_hits(self, report_definition_version_hits):
        """
        Sets the report_definition_version_hits of this UsageFilterResponse.

        :param report_definition_version_hits: The report_definition_version_hits of this UsageFilterResponse.
        :type: int
        """

        self._report_definition_version_hits = report_definition_version_hits

    @property
    def report_definition_version_items(self):
        """
        Gets the report_definition_version_items of this UsageFilterResponse.

        :return: The report_definition_version_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._report_definition_version_items

    @report_definition_version_items.setter
    def report_definition_version_items(self, report_definition_version_items):
        """
        Sets the report_definition_version_items of this UsageFilterResponse.

        :param report_definition_version_items: The report_definition_version_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._report_definition_version_items = report_definition_version_items

    @property
    def workflow_hits(self):
        """
        Gets the workflow_hits of this UsageFilterResponse.

        :return: The workflow_hits of this UsageFilterResponse.
        :rtype: int
        """
        return self._workflow_hits

    @workflow_hits.setter
    def workflow_hits(self, workflow_hits):
        """
        Sets the workflow_hits of this UsageFilterResponse.

        :param workflow_hits: The workflow_hits of this UsageFilterResponse.
        :type: int
        """

        self._workflow_hits = workflow_hits

    @property
    def workflow_items(self):
        """
        Gets the workflow_items of this UsageFilterResponse.

        :return: The workflow_items of this UsageFilterResponse.
        :rtype: list[RecordIdentity]
        """
        return self._workflow_items

    @workflow_items.setter
    def workflow_items(self, workflow_items):
        """
        Sets the workflow_items of this UsageFilterResponse.

        :param workflow_items: The workflow_items of this UsageFilterResponse.
        :type: list[RecordIdentity]
        """

        self._workflow_items = workflow_items

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, UsageFilterResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
