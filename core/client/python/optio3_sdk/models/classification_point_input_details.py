# coding: utf-8

"""
Copyright (C) 2017-2018, Optio3, Inc. All Rights Reserved.

Proprietary & Confidential Information.

Optio3 Hub APIs
APIs and Definitions for the Optio3 Hub product.

OpenAPI spec version: 1.0.0


NOTE: This class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
Do not edit the class manually.
"""


from pprint import pformat
from six import iteritems
import re

class ClassificationPointInputDetails(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, object_name=None, object_backup_name=None, object_backup_equipment_name=None, object_workflow_override_name=None, object_description=None, object_identifier=None, object_type=None, object_units=None, object_location=None, object_backup_structure=None, controller_name=None, controller_backup_name=None, controller_description=None, controller_identifier=None, controller_location=None, controller_model_name=None, controller_vendor_name=None, controller_transport_address=None):
        """
        ClassificationPointInputDetails - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'object_name': 'str',
            'object_backup_name': 'str',
            'object_backup_equipment_name': 'str',
            'object_workflow_override_name': 'str',
            'object_description': 'str',
            'object_identifier': 'str',
            'object_type': 'str',
            'object_units': 'str',
            'object_location': 'str',
            'object_backup_structure': 'list[str]',
            'controller_name': 'str',
            'controller_backup_name': 'str',
            'controller_description': 'str',
            'controller_identifier': 'str',
            'controller_location': 'str',
            'controller_model_name': 'str',
            'controller_vendor_name': 'str',
            'controller_transport_address': 'TransportAddress'
        }

        self.attribute_map = {
            'object_name': 'objectName',
            'object_backup_name': 'objectBackupName',
            'object_backup_equipment_name': 'objectBackupEquipmentName',
            'object_workflow_override_name': 'objectWorkflowOverrideName',
            'object_description': 'objectDescription',
            'object_identifier': 'objectIdentifier',
            'object_type': 'objectType',
            'object_units': 'objectUnits',
            'object_location': 'objectLocation',
            'object_backup_structure': 'objectBackupStructure',
            'controller_name': 'controllerName',
            'controller_backup_name': 'controllerBackupName',
            'controller_description': 'controllerDescription',
            'controller_identifier': 'controllerIdentifier',
            'controller_location': 'controllerLocation',
            'controller_model_name': 'controllerModelName',
            'controller_vendor_name': 'controllerVendorName',
            'controller_transport_address': 'controllerTransportAddress'
        }

        self._object_name = object_name
        self._object_backup_name = object_backup_name
        self._object_backup_equipment_name = object_backup_equipment_name
        self._object_workflow_override_name = object_workflow_override_name
        self._object_description = object_description
        self._object_identifier = object_identifier
        self._object_type = object_type
        self._object_units = object_units
        self._object_location = object_location
        self._object_backup_structure = object_backup_structure
        self._controller_name = controller_name
        self._controller_backup_name = controller_backup_name
        self._controller_description = controller_description
        self._controller_identifier = controller_identifier
        self._controller_location = controller_location
        self._controller_model_name = controller_model_name
        self._controller_vendor_name = controller_vendor_name
        self._controller_transport_address = controller_transport_address


    @property
    def object_name(self):
        """
        Gets the object_name of this ClassificationPointInputDetails.

        :return: The object_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """
        Sets the object_name of this ClassificationPointInputDetails.

        :param object_name: The object_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_name = object_name

    @property
    def object_backup_name(self):
        """
        Gets the object_backup_name of this ClassificationPointInputDetails.

        :return: The object_backup_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_backup_name

    @object_backup_name.setter
    def object_backup_name(self, object_backup_name):
        """
        Sets the object_backup_name of this ClassificationPointInputDetails.

        :param object_backup_name: The object_backup_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_backup_name = object_backup_name

    @property
    def object_backup_equipment_name(self):
        """
        Gets the object_backup_equipment_name of this ClassificationPointInputDetails.

        :return: The object_backup_equipment_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_backup_equipment_name

    @object_backup_equipment_name.setter
    def object_backup_equipment_name(self, object_backup_equipment_name):
        """
        Sets the object_backup_equipment_name of this ClassificationPointInputDetails.

        :param object_backup_equipment_name: The object_backup_equipment_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_backup_equipment_name = object_backup_equipment_name

    @property
    def object_workflow_override_name(self):
        """
        Gets the object_workflow_override_name of this ClassificationPointInputDetails.

        :return: The object_workflow_override_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_workflow_override_name

    @object_workflow_override_name.setter
    def object_workflow_override_name(self, object_workflow_override_name):
        """
        Sets the object_workflow_override_name of this ClassificationPointInputDetails.

        :param object_workflow_override_name: The object_workflow_override_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_workflow_override_name = object_workflow_override_name

    @property
    def object_description(self):
        """
        Gets the object_description of this ClassificationPointInputDetails.

        :return: The object_description of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_description

    @object_description.setter
    def object_description(self, object_description):
        """
        Sets the object_description of this ClassificationPointInputDetails.

        :param object_description: The object_description of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_description = object_description

    @property
    def object_identifier(self):
        """
        Gets the object_identifier of this ClassificationPointInputDetails.

        :return: The object_identifier of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_identifier

    @object_identifier.setter
    def object_identifier(self, object_identifier):
        """
        Sets the object_identifier of this ClassificationPointInputDetails.

        :param object_identifier: The object_identifier of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_identifier = object_identifier

    @property
    def object_type(self):
        """
        Gets the object_type of this ClassificationPointInputDetails.

        :return: The object_type of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """
        Sets the object_type of this ClassificationPointInputDetails.

        :param object_type: The object_type of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_type = object_type

    @property
    def object_units(self):
        """
        Gets the object_units of this ClassificationPointInputDetails.

        :return: The object_units of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_units

    @object_units.setter
    def object_units(self, object_units):
        """
        Sets the object_units of this ClassificationPointInputDetails.

        :param object_units: The object_units of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_units = object_units

    @property
    def object_location(self):
        """
        Gets the object_location of this ClassificationPointInputDetails.

        :return: The object_location of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._object_location

    @object_location.setter
    def object_location(self, object_location):
        """
        Sets the object_location of this ClassificationPointInputDetails.

        :param object_location: The object_location of this ClassificationPointInputDetails.
        :type: str
        """

        self._object_location = object_location

    @property
    def object_backup_structure(self):
        """
        Gets the object_backup_structure of this ClassificationPointInputDetails.

        :return: The object_backup_structure of this ClassificationPointInputDetails.
        :rtype: list[str]
        """
        return self._object_backup_structure

    @object_backup_structure.setter
    def object_backup_structure(self, object_backup_structure):
        """
        Sets the object_backup_structure of this ClassificationPointInputDetails.

        :param object_backup_structure: The object_backup_structure of this ClassificationPointInputDetails.
        :type: list[str]
        """

        self._object_backup_structure = object_backup_structure

    @property
    def controller_name(self):
        """
        Gets the controller_name of this ClassificationPointInputDetails.

        :return: The controller_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._controller_name

    @controller_name.setter
    def controller_name(self, controller_name):
        """
        Sets the controller_name of this ClassificationPointInputDetails.

        :param controller_name: The controller_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._controller_name = controller_name

    @property
    def controller_backup_name(self):
        """
        Gets the controller_backup_name of this ClassificationPointInputDetails.

        :return: The controller_backup_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._controller_backup_name

    @controller_backup_name.setter
    def controller_backup_name(self, controller_backup_name):
        """
        Sets the controller_backup_name of this ClassificationPointInputDetails.

        :param controller_backup_name: The controller_backup_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._controller_backup_name = controller_backup_name

    @property
    def controller_description(self):
        """
        Gets the controller_description of this ClassificationPointInputDetails.

        :return: The controller_description of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._controller_description

    @controller_description.setter
    def controller_description(self, controller_description):
        """
        Sets the controller_description of this ClassificationPointInputDetails.

        :param controller_description: The controller_description of this ClassificationPointInputDetails.
        :type: str
        """

        self._controller_description = controller_description

    @property
    def controller_identifier(self):
        """
        Gets the controller_identifier of this ClassificationPointInputDetails.

        :return: The controller_identifier of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._controller_identifier

    @controller_identifier.setter
    def controller_identifier(self, controller_identifier):
        """
        Sets the controller_identifier of this ClassificationPointInputDetails.

        :param controller_identifier: The controller_identifier of this ClassificationPointInputDetails.
        :type: str
        """

        self._controller_identifier = controller_identifier

    @property
    def controller_location(self):
        """
        Gets the controller_location of this ClassificationPointInputDetails.

        :return: The controller_location of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._controller_location

    @controller_location.setter
    def controller_location(self, controller_location):
        """
        Sets the controller_location of this ClassificationPointInputDetails.

        :param controller_location: The controller_location of this ClassificationPointInputDetails.
        :type: str
        """

        self._controller_location = controller_location

    @property
    def controller_model_name(self):
        """
        Gets the controller_model_name of this ClassificationPointInputDetails.

        :return: The controller_model_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._controller_model_name

    @controller_model_name.setter
    def controller_model_name(self, controller_model_name):
        """
        Sets the controller_model_name of this ClassificationPointInputDetails.

        :param controller_model_name: The controller_model_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._controller_model_name = controller_model_name

    @property
    def controller_vendor_name(self):
        """
        Gets the controller_vendor_name of this ClassificationPointInputDetails.

        :return: The controller_vendor_name of this ClassificationPointInputDetails.
        :rtype: str
        """
        return self._controller_vendor_name

    @controller_vendor_name.setter
    def controller_vendor_name(self, controller_vendor_name):
        """
        Sets the controller_vendor_name of this ClassificationPointInputDetails.

        :param controller_vendor_name: The controller_vendor_name of this ClassificationPointInputDetails.
        :type: str
        """

        self._controller_vendor_name = controller_vendor_name

    @property
    def controller_transport_address(self):
        """
        Gets the controller_transport_address of this ClassificationPointInputDetails.

        :return: The controller_transport_address of this ClassificationPointInputDetails.
        :rtype: TransportAddress
        """
        return self._controller_transport_address

    @controller_transport_address.setter
    def controller_transport_address(self, controller_transport_address):
        """
        Sets the controller_transport_address of this ClassificationPointInputDetails.

        :param controller_transport_address: The controller_transport_address of this ClassificationPointInputDetails.
        :type: TransportAddress
        """

        self._controller_transport_address = controller_transport_address

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ClassificationPointInputDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
