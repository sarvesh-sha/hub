# coding: utf-8

"""
Copyright (C) 2017-2018, Optio3, Inc. All Rights Reserved.

Proprietary & Confidential Information.

Optio3 Hub APIs
APIs and Definitions for the Optio3 Hub product.

OpenAPI spec version: 1.0.0


NOTE: This class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
Do not edit the class manually.
"""


from pprint import pformat
from six import iteritems
import re

class PaneFieldConfigurationCurrentValue(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, label=None, units_factors=None, suffix=None, point_input=None):
        """
        PaneFieldConfigurationCurrentValue - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'label': 'str',
            'units_factors': 'EngineeringUnitsFactors',
            'suffix': 'str',
            'point_input': 'AssetGraphBinding',
            'discriminator___type': 'str'
        }

        self.attribute_map = {
            'label': 'label',
            'units_factors': 'unitsFactors',
            'suffix': 'suffix',
            'point_input': 'pointInput',
            'discriminator___type': '__type'
        }

        self._label = label
        self._units_factors = units_factors
        self._suffix = suffix
        self._point_input = point_input

    @property
    def discriminator___type(self):
        return "PaneFieldConfigurationCurrentValue"

    @discriminator___type.setter
    def discriminator___type(self, discriminator):
        # Don't need to do anything
        return

    @property
    def label(self):
        """
        Gets the label of this PaneFieldConfigurationCurrentValue.

        :return: The label of this PaneFieldConfigurationCurrentValue.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """
        Sets the label of this PaneFieldConfigurationCurrentValue.

        :param label: The label of this PaneFieldConfigurationCurrentValue.
        :type: str
        """

        self._label = label

    @property
    def units_factors(self):
        """
        Gets the units_factors of this PaneFieldConfigurationCurrentValue.

        :return: The units_factors of this PaneFieldConfigurationCurrentValue.
        :rtype: EngineeringUnitsFactors
        """
        return self._units_factors

    @units_factors.setter
    def units_factors(self, units_factors):
        """
        Sets the units_factors of this PaneFieldConfigurationCurrentValue.

        :param units_factors: The units_factors of this PaneFieldConfigurationCurrentValue.
        :type: EngineeringUnitsFactors
        """

        self._units_factors = units_factors

    @property
    def suffix(self):
        """
        Gets the suffix of this PaneFieldConfigurationCurrentValue.

        :return: The suffix of this PaneFieldConfigurationCurrentValue.
        :rtype: str
        """
        return self._suffix

    @suffix.setter
    def suffix(self, suffix):
        """
        Sets the suffix of this PaneFieldConfigurationCurrentValue.

        :param suffix: The suffix of this PaneFieldConfigurationCurrentValue.
        :type: str
        """

        self._suffix = suffix

    @property
    def point_input(self):
        """
        Gets the point_input of this PaneFieldConfigurationCurrentValue.

        :return: The point_input of this PaneFieldConfigurationCurrentValue.
        :rtype: AssetGraphBinding
        """
        return self._point_input

    @point_input.setter
    def point_input(self, point_input):
        """
        Sets the point_input of this PaneFieldConfigurationCurrentValue.

        :param point_input: The point_input of this PaneFieldConfigurationCurrentValue.
        :type: AssetGraphBinding
        """

        self._point_input = point_input

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, PaneFieldConfigurationCurrentValue):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
