/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.builder.model;

import com.optio3.cloud.client.builder.model.DeployerShutdownConfiguration;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

public class DeploymentAgentDetails
{


  public List<String> supportedFeatures = new ArrayList<String>();
  public DockerImageArchitecture architecture = null;
  public Integer availableProcessors = null;
  public Long freeMemory = null;
  public Long totalMemory = null;
  public Long maxMemory = null;
  public Long diskTotal = null;
  public Long diskFree = null;
  public Double cpuUsageUser = null;
  public Double cpuUsageSystem = null;
  public Float batteryVoltage = null;
  public Float cpuTemperature = null;
  public DeployerShutdownConfiguration shutdownConfiguration = null;
  public Map<String, String> networkInterfaces = new HashMap<String, String>();

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentAgentDetails {\n");

    sb.append("    supportedFeatures: ").append(toIndentedString(supportedFeatures)).append("\n");
    sb.append("    architecture: ").append(toIndentedString(architecture)).append("\n");
    sb.append("    availableProcessors: ").append(toIndentedString(availableProcessors)).append("\n");
    sb.append("    freeMemory: ").append(toIndentedString(freeMemory)).append("\n");
    sb.append("    totalMemory: ").append(toIndentedString(totalMemory)).append("\n");
    sb.append("    maxMemory: ").append(toIndentedString(maxMemory)).append("\n");
    sb.append("    diskTotal: ").append(toIndentedString(diskTotal)).append("\n");
    sb.append("    diskFree: ").append(toIndentedString(diskFree)).append("\n");
    sb.append("    cpuUsageUser: ").append(toIndentedString(cpuUsageUser)).append("\n");
    sb.append("    cpuUsageSystem: ").append(toIndentedString(cpuUsageSystem)).append("\n");
    sb.append("    batteryVoltage: ").append(toIndentedString(batteryVoltage)).append("\n");
    sb.append("    cpuTemperature: ").append(toIndentedString(cpuTemperature)).append("\n");
    sb.append("    shutdownConfiguration: ").append(toIndentedString(shutdownConfiguration)).append("\n");
    sb.append("    networkInterfaces: ").append(toIndentedString(networkInterfaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
