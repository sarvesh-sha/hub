/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.builder.api;

import com.optio3.cloud.client.builder.model.RecordIdentity;
import com.optio3.cloud.client.builder.model.Repository;
import com.optio3.cloud.client.builder.model.RepositoryCommit;
import com.optio3.cloud.client.builder.model.RepositoryRefresh;
import com.optio3.cloud.client.builder.model.ValidationResults;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;
import org.apache.cxf.jaxrs.ext.multipart.*;
import org.apache.cxf.jaxrs.ext.PATCH;

@Path("/")
public interface RepositoriesApi
{
    @GET
    @Path("/repositories/refresh/check/{id}")
    @Produces(
    {
        "application/json"
    })
    public RepositoryRefresh checkRefresh(@PathParam("id") String id, @QueryParam("detailed") Boolean detailed);

    @POST
    @Path("/repositories/create")
    @Produces(
    {
        "application/json"
    })
    public Repository create(Repository body);

    @GET
    @Path("/repositories/item/{id}")
    @Produces(
    {
        "application/json"
    })
    public Repository get(@PathParam("id") String id);

    @GET
    @Path("/repositories/all")
    @Produces(
    {
        "application/json"
    })
    public List<RecordIdentity> getAll();

    @POST
    @Path("/repositories/batch")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public List<Repository> getBatch(List<String> body);

    @GET
    @Path("/repositories/item/{id}/{hash}")
    @Produces(
    {
        "application/json"
    })
    public RepositoryCommit getCommit(@PathParam("id") String id, @PathParam("hash") String hash);

    @DELETE
    @Path("/repositories/item/{id}")
    @Produces(
    {
        "application/json"
    })
    public ValidationResults remove(@PathParam("id") String id, @QueryParam("dryRun") Boolean dryRun);

    @GET
    @Path("/repositories/refresh/start")
    @Produces(
    {
        "text/plain"
    })
    public String startRefresh();

    @POST
    @Path("/repositories/item/{id}")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public ValidationResults update(@PathParam("id") String id, @QueryParam("dryRun") Boolean dryRun, Repository body);

}
