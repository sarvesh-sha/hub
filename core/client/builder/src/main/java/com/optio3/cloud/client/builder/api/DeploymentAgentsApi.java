/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.builder.api;

import com.optio3.cloud.client.builder.model.DeploymentAgent;
import com.optio3.cloud.client.builder.model.LoggerConfiguration;
import com.optio3.cloud.client.builder.model.RecordIdentity;
import com.optio3.cloud.client.builder.model.ShellInput;
import com.optio3.cloud.client.builder.model.ShellOutput;
import com.optio3.cloud.client.builder.model.ShellToken;
import com.optio3.cloud.client.builder.model.ValidationResults;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;
import org.apache.cxf.jaxrs.ext.multipart.*;
import org.apache.cxf.jaxrs.ext.PATCH;

@Path("/")
public interface DeploymentAgentsApi
{
    @GET
    @Path("/deployment-agents/item/{id}/check-online")
    @Produces(
    {
        "application/json"
    })
    public Boolean checkOnline(@PathParam("id") String id);

    @GET
    @Path("/deployment-agents/item/{id}/shell/close/{session}")
    @Produces(
    {
        "application/json"
    })
    public Boolean closeShell(@PathParam("id") String id, @PathParam("session") String session);

    @POST
    @Path("/deployment-agents/item/{id}/loggers/config")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public LoggerConfiguration configLogger(@PathParam("id") String id, LoggerConfiguration body);

    @GET
    @Path("/deployment-agents/item/{id}/threads")
    @Produces(
    {
        "text/plain"
    })
    public String dumpThreads(@PathParam("id") String id, @QueryParam("includeMemInfo") Boolean includeMemInfo);

    @GET
    @Path("/deployment-agents/item/{id}/flush")
    @Produces(
    {
        "application/json"
    })
    public Boolean flush(@PathParam("id") String id);

    @GET
    @Path("/deployment-agents/item/{id}")
    @Produces(
    {
        "application/json"
    })
    public DeploymentAgent get(@PathParam("id") String id);

    @GET
    @Path("/deployment-agents/all/{id}")
    @Produces(
    {
        "application/json"
    })
    public List<RecordIdentity> getAll(@PathParam("id") String id);

    @GET
    @Path("/deployment-agents/item/{id}/shell/all")
    @Produces(
    {
        "application/json"
    })
    public List<ShellToken> getAllShells(@PathParam("id") String id);

    @POST
    @Path("/deployment-agents/batch")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public List<DeploymentAgent> getBatch(List<String> body);

    @GET
    @Path("/deployment-agents/item/{id}/loggers/list")
    @Produces(
    {
        "application/json"
    })
    public List<LoggerConfiguration> getLoggers(@PathParam("id") String id);

    @GET
    @Path("/deployment-agents/item/{id}/make-active")
    @Produces(
    {
        "application/json"
    })
    public Boolean makeActive(@PathParam("id") String id);

    @GET
    @Path("/deployment-agents/item/{id}/shell/new")
    @Produces(
    {
        "application/json"
    })
    public ShellToken openShell(@PathParam("id") String id, @QueryParam("cmd") String cmd);

    @GET
    @Path("/deployment-agents/item/{id}/shell/read/{session}")
    @Produces(
    {
        "application/json"
    })
    public List<ShellOutput> readFromShell(@PathParam("id") String id, @PathParam("session") String session);

    @DELETE
    @Path("/deployment-agents/item/{id}")
    @Produces(
    {
        "application/json"
    })
    public ValidationResults remove(@PathParam("id") String id, @QueryParam("dryRun") Boolean dryRun);

    @GET
    @Path("/deployment-agents/item/{id}/restart")
    @Produces(
    {
        "application/json"
    })
    public Boolean restart(@PathParam("id") String id);

    @GET
    @Path("/deployment-agents/item/{id}/terminate")
    @Produces(
    {
        "application/json"
    })
    public ValidationResults terminate(@PathParam("id") String id, @QueryParam("dryRun") Boolean dryRun);

    @POST
    @Path("/deployment-agents/item/{id}/shell/write/{session}")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public Boolean writeToShell(@PathParam("id") String id, @PathParam("session") String session, ShellInput body);

}
