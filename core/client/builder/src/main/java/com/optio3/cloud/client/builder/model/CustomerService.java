/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.builder.model;

import com.optio3.cloud.client.builder.model.CustomerServiceAlertThresholds;
import com.optio3.cloud.client.builder.model.CustomerServiceUpgradeBlockers;
import com.optio3.cloud.client.builder.model.DeployerShutdownConfiguration;
import com.optio3.cloud.client.builder.model.RecordIdentity;
import com.optio3.cloud.client.builder.model.RoleAndArchitectureWithImage;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

public class CustomerService
{
  public static final String RECORD_IDENTITY = "CustomerService";







  public String sysId = null;
  public ZonedDateTime createdOn = null;
  public ZonedDateTime updatedOn = null;
  public RecordIdentity customer = null;
  public String name = null;
  public String url = null;
  public DeploymentOperationalStatus operationalStatus = null;
  public String instanceAccount = null;
  public DeploymentInstance instanceType = null;
  public String instanceRegion = null;
  public CustomerVertical vertical = null;
  public Integer diskSize = null;
  public Boolean useDemoData = null;
  public Boolean relaunchAlways = null;
  public Boolean disableServiceWorker = null;
  public Boolean disableEmails = null;
  public Boolean disableTexts = null;
  public Boolean useTestReporter = null;
  public Boolean certificateWarning = null;
  public String extraConfigLines = null;
  public List<DeploymentRole> purposes = new ArrayList<DeploymentRole>();
  public DatabaseMode dbMode = null;
  public Boolean heapStatusAbnormal = null;
  public DeployerShutdownConfiguration batteryThresholds = null;
  public List<CustomerServiceAlertThresholds> alertThresholds = new ArrayList<CustomerServiceAlertThresholds>();
  public RecordIdentity currentActivity = null;
  public CustomerServiceUpgradeBlockers upgradeBlockers = null;
  public List<RecordIdentity> backups = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> secrets = new ArrayList<RecordIdentity>();
  public List<RoleAndArchitectureWithImage> roleImages = new ArrayList<RoleAndArchitectureWithImage>();
  public String roleOrigin = null;
  public ZonedDateTime lastOutput = null;
  public Integer lastOffset = null;

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerService {\n");

    sb.append("    sysId: ").append(toIndentedString(sysId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    updatedOn: ").append(toIndentedString(updatedOn)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    operationalStatus: ").append(toIndentedString(operationalStatus)).append("\n");
    sb.append("    instanceAccount: ").append(toIndentedString(instanceAccount)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    instanceRegion: ").append(toIndentedString(instanceRegion)).append("\n");
    sb.append("    vertical: ").append(toIndentedString(vertical)).append("\n");
    sb.append("    diskSize: ").append(toIndentedString(diskSize)).append("\n");
    sb.append("    useDemoData: ").append(toIndentedString(useDemoData)).append("\n");
    sb.append("    relaunchAlways: ").append(toIndentedString(relaunchAlways)).append("\n");
    sb.append("    disableServiceWorker: ").append(toIndentedString(disableServiceWorker)).append("\n");
    sb.append("    disableEmails: ").append(toIndentedString(disableEmails)).append("\n");
    sb.append("    disableTexts: ").append(toIndentedString(disableTexts)).append("\n");
    sb.append("    useTestReporter: ").append(toIndentedString(useTestReporter)).append("\n");
    sb.append("    certificateWarning: ").append(toIndentedString(certificateWarning)).append("\n");
    sb.append("    extraConfigLines: ").append(toIndentedString(extraConfigLines)).append("\n");
    sb.append("    purposes: ").append(toIndentedString(purposes)).append("\n");
    sb.append("    dbMode: ").append(toIndentedString(dbMode)).append("\n");
    sb.append("    heapStatusAbnormal: ").append(toIndentedString(heapStatusAbnormal)).append("\n");
    sb.append("    batteryThresholds: ").append(toIndentedString(batteryThresholds)).append("\n");
    sb.append("    alertThresholds: ").append(toIndentedString(alertThresholds)).append("\n");
    sb.append("    currentActivity: ").append(toIndentedString(currentActivity)).append("\n");
    sb.append("    upgradeBlockers: ").append(toIndentedString(upgradeBlockers)).append("\n");
    sb.append("    backups: ").append(toIndentedString(backups)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("    roleImages: ").append(toIndentedString(roleImages)).append("\n");
    sb.append("    roleOrigin: ").append(toIndentedString(roleOrigin)).append("\n");
    sb.append("    lastOutput: ").append(toIndentedString(lastOutput)).append("\n");
    sb.append("    lastOffset: ").append(toIndentedString(lastOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
