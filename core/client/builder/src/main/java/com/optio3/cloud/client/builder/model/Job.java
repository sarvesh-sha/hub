/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.builder.model;

import com.optio3.cloud.client.builder.model.RecordIdentity;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

public class Job
{
  public static final String RECORD_IDENTITY = "Job";



  public String sysId = null;
  public ZonedDateTime createdOn = null;
  public ZonedDateTime updatedOn = null;
  public String name = null;
  public String idPrefix = null;
  public JobStatus status = null;
  public String branch = null;
  public String commit = null;
  public String triggeredBy = null;
  public List<RecordIdentity> sources = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> steps = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> generatedImages = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> acquiredContainers = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> acquiredVolumes = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> acquiredTemporaryImages = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> acquiredDirectories = new ArrayList<RecordIdentity>();
  public List<RecordIdentity> acquiredCheckouts = new ArrayList<RecordIdentity>();

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");

    sb.append("    sysId: ").append(toIndentedString(sysId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    updatedOn: ").append(toIndentedString(updatedOn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    idPrefix: ").append(toIndentedString(idPrefix)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    commit: ").append(toIndentedString(commit)).append("\n");
    sb.append("    triggeredBy: ").append(toIndentedString(triggeredBy)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    generatedImages: ").append(toIndentedString(generatedImages)).append("\n");
    sb.append("    acquiredContainers: ").append(toIndentedString(acquiredContainers)).append("\n");
    sb.append("    acquiredVolumes: ").append(toIndentedString(acquiredVolumes)).append("\n");
    sb.append("    acquiredTemporaryImages: ").append(toIndentedString(acquiredTemporaryImages)).append("\n");
    sb.append("    acquiredDirectories: ").append(toIndentedString(acquiredDirectories)).append("\n");
    sb.append("    acquiredCheckouts: ").append(toIndentedString(acquiredCheckouts)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
