/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import com.optio3.cloud.client.hub.model.AssetGraphBinding;
import com.optio3.cloud.client.hub.model.ColorConfiguration;
import com.optio3.cloud.client.hub.model.EngineeringUnitsFactors;
import com.optio3.cloud.client.hub.model.WidgetConfiguration;
import java.util.List;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

@JsonTypeName("ControlPointWidgetConfiguration")
public class ControlPointWidgetConfiguration extends WidgetConfiguration
{





  public String pointId = null;
  public AssetGraphBinding pointInput = null;
  public Boolean nameEnabled = null;
  public ControlPointDisplayType nameDisplay = null;
  public HorizontalAlignment nameAlignment = null;
  public Boolean valueEnabled = null;
  public EngineeringUnitsFactors valueUnits = null;
  public Boolean valueUnitsEnabled = null;
  public Integer valuePrecision = null;
  public HorizontalAlignment valueAlignment = null;
  public Boolean timestampEnabled = null;
  public String timestampFormat = null;
  public HorizontalAlignment timestampAlignment = null;
  public ColorConfiguration color = null;

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ControlPointWidgetConfiguration {\n");
    sb.append("    ").append(super.toString().replace("\n", "\n    ")).append("\n");
    sb.append("    pointId: ").append(toIndentedString(pointId)).append("\n");
    sb.append("    pointInput: ").append(toIndentedString(pointInput)).append("\n");
    sb.append("    nameEnabled: ").append(toIndentedString(nameEnabled)).append("\n");
    sb.append("    nameDisplay: ").append(toIndentedString(nameDisplay)).append("\n");
    sb.append("    nameAlignment: ").append(toIndentedString(nameAlignment)).append("\n");
    sb.append("    valueEnabled: ").append(toIndentedString(valueEnabled)).append("\n");
    sb.append("    valueUnits: ").append(toIndentedString(valueUnits)).append("\n");
    sb.append("    valueUnitsEnabled: ").append(toIndentedString(valueUnitsEnabled)).append("\n");
    sb.append("    valuePrecision: ").append(toIndentedString(valuePrecision)).append("\n");
    sb.append("    valueAlignment: ").append(toIndentedString(valueAlignment)).append("\n");
    sb.append("    timestampEnabled: ").append(toIndentedString(timestampEnabled)).append("\n");
    sb.append("    timestampFormat: ").append(toIndentedString(timestampFormat)).append("\n");
    sb.append("    timestampAlignment: ").append(toIndentedString(timestampAlignment)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
