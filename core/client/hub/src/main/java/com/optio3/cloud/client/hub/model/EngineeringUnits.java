/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonCreator;

public enum EngineeringUnits
{
    enumerated(String.valueOf("enumerated")),
    onOff(String.valueOf("onOff")),
    activeInactive(String.valueOf("activeInactive")),
    constant(String.valueOf("constant")),
    log(String.valueOf("log")),
    meters(String.valueOf("meters")),
    nanometers(String.valueOf("nanometers")),
    micrometers(String.valueOf("micrometers")),
    millimeters(String.valueOf("millimeters")),
    centimeters(String.valueOf("centimeters")),
    kilometers(String.valueOf("kilometers")),
    inches(String.valueOf("inches")),
    feet(String.valueOf("feet")),
    miles(String.valueOf("miles")),
    seconds(String.valueOf("seconds")),
    hundredths_seconds(String.valueOf("hundredths_seconds")),
    milliseconds(String.valueOf("milliseconds")),
    minutes(String.valueOf("minutes")),
    hours(String.valueOf("hours")),
    days(String.valueOf("days")),
    weeks(String.valueOf("weeks")),
    months(String.valueOf("months")),
    years(String.valueOf("years")),
    grams(String.valueOf("grams")),
    nanograms(String.valueOf("nanograms")),
    micrograms(String.valueOf("micrograms")),
    milligrams(String.valueOf("milligrams")),
    kilograms(String.valueOf("kilograms")),
    pounds_mass(String.valueOf("pounds_mass")),
    tons(String.valueOf("tons")),
    meters_per_second(String.valueOf("meters_per_second")),
    meters_per_minute(String.valueOf("meters_per_minute")),
    meters_per_hour(String.valueOf("meters_per_hour")),
    millimeters_per_second(String.valueOf("millimeters_per_second")),
    millimeters_per_minute(String.valueOf("millimeters_per_minute")),
    millimeters_per_hour(String.valueOf("millimeters_per_hour")),
    kilometers_per_hour(String.valueOf("kilometers_per_hour")),
    feet_per_second(String.valueOf("feet_per_second")),
    feet_per_minute(String.valueOf("feet_per_minute")),
    miles_per_hour(String.valueOf("miles_per_hour")),
    knots(String.valueOf("knots")),
    longitude(String.valueOf("longitude")),
    latitude(String.valueOf("latitude")),
    meters_per_second_per_second(String.valueOf("meters_per_second_per_second")),
    millig(String.valueOf("millig")),
    cubic_meters(String.valueOf("cubic_meters")),
    cubic_feet(String.valueOf("cubic_feet")),
    liters(String.valueOf("liters")),
    milliliters(String.valueOf("milliliters")),
    imperial_gallons(String.valueOf("imperial_gallons")),
    us_gallons(String.valueOf("us_gallons")),
    cubic_feet_per_minute(String.valueOf("cubic_feet_per_minute")),
    cubic_feet_per_second(String.valueOf("cubic_feet_per_second")),
    cubic_feet_per_hour(String.valueOf("cubic_feet_per_hour")),
    cubic_feet_per_day(String.valueOf("cubic_feet_per_day")),
    thousand_cubic_feet_per_day(String.valueOf("thousand_cubic_feet_per_day")),
    standard_cubic_feet_per_day(String.valueOf("standard_cubic_feet_per_day")),
    million_standard_cubic_feet_per_minute(String.valueOf("million_standard_cubic_feet_per_minute")),
    million_standard_cubic_feet_per_day(String.valueOf("million_standard_cubic_feet_per_day")),
    thousand_standard_cubic_feet_per_day(String.valueOf("thousand_standard_cubic_feet_per_day")),
    cubic_meters_per_minute(String.valueOf("cubic_meters_per_minute")),
    cubic_meters_per_second(String.valueOf("cubic_meters_per_second")),
    cubic_meters_per_hour(String.valueOf("cubic_meters_per_hour")),
    cubic_meters_per_day(String.valueOf("cubic_meters_per_day")),
    liters_per_second(String.valueOf("liters_per_second")),
    liters_per_minute(String.valueOf("liters_per_minute")),
    liters_per_hour(String.valueOf("liters_per_hour")),
    milliliters_per_second(String.valueOf("milliliters_per_second")),
    pounds_mass_per_day(String.valueOf("pounds_mass_per_day")),
    imperial_gallons_per_minute(String.valueOf("imperial_gallons_per_minute")),
    us_gallons_per_minute(String.valueOf("us_gallons_per_minute")),
    us_gallons_per_hour(String.valueOf("us_gallons_per_hour")),
    square_meters(String.valueOf("square_meters")),
    square_centimeters(String.valueOf("square_centimeters")),
    square_feet(String.valueOf("square_feet")),
    square_inches(String.valueOf("square_inches")),
    currency_dollar_US(String.valueOf("currency_dollar_US")),
    currency_dollar_Canadian(String.valueOf("currency_dollar_Canadian")),
    currency_euro(String.valueOf("currency_euro")),
    currency_generic(String.valueOf("currency_generic")),
    amperes(String.valueOf("amperes")),
    milliamperes(String.valueOf("milliamperes")),
    kiloamperes(String.valueOf("kiloamperes")),
    megaamperes(String.valueOf("megaamperes")),
    volts(String.valueOf("volts")),
    millivolts(String.valueOf("millivolts")),
    kilovolts(String.valueOf("kilovolts")),
    megavolts(String.valueOf("megavolts")),
    watts(String.valueOf("watts")),
    milliwatts(String.valueOf("milliwatts")),
    kilowatts(String.valueOf("kilowatts")),
    megawatts(String.valueOf("megawatts")),
    amperes_per_meter(String.valueOf("amperes_per_meter")),
    amperes_per_square_meter(String.valueOf("amperes_per_square_meter")),
    ampere_square_meters(String.valueOf("ampere_square_meters")),
    ohms(String.valueOf("ohms")),
    milliohms(String.valueOf("milliohms")),
    kilohms(String.valueOf("kilohms")),
    megohms(String.valueOf("megohms")),
    ohm_meters(String.valueOf("ohm_meters")),
    ohm_meter_squared_per_meter(String.valueOf("ohm_meter_squared_per_meter")),
    siemens(String.valueOf("siemens")),
    millisiemens(String.valueOf("millisiemens")),
    microsiemens(String.valueOf("microsiemens")),
    siemens_per_meter(String.valueOf("siemens_per_meter")),
    microsiemens_per_millimeter(String.valueOf("microsiemens_per_millimeter")),
    decibels(String.valueOf("decibels")),
    decibels_milliwatts(String.valueOf("decibels_milliwatts")),
    decibels_millivolt(String.valueOf("decibels_millivolt")),
    decibels_volt(String.valueOf("decibels_volt")),
    farads(String.valueOf("farads")),
    henrys(String.valueOf("henrys")),
    teslas(String.valueOf("teslas")),
    webers(String.valueOf("webers")),
    power_factor(String.valueOf("power_factor")),
    volt_amperes(String.valueOf("volt_amperes")),
    kilovolt_amperes(String.valueOf("kilovolt_amperes")),
    megavolt_amperes(String.valueOf("megavolt_amperes")),
    volt_amperes_reactive(String.valueOf("volt_amperes_reactive")),
    kilovolt_amperes_reactive(String.valueOf("kilovolt_amperes_reactive")),
    megavolt_amperes_reactive(String.valueOf("megavolt_amperes_reactive")),
    volts_per_meter(String.valueOf("volts_per_meter")),
    volts_per_degree_kelvin(String.valueOf("volts_per_degree_kelvin")),
    degrees_phase(String.valueOf("degrees_phase")),
    ampere_seconds(String.valueOf("ampere_seconds")),
    ampere_hours(String.valueOf("ampere_hours")),
    volt_ampere_hours(String.valueOf("volt_ampere_hours")),
    kilovolt_ampere_hours(String.valueOf("kilovolt_ampere_hours")),
    megavolt_ampere_hours(String.valueOf("megavolt_ampere_hours")),
    volt_ampere_hours_reactive(String.valueOf("volt_ampere_hours_reactive")),
    kilovolt_ampere_hours_reactive(String.valueOf("kilovolt_ampere_hours_reactive")),
    megavolt_ampere_hours_reactive(String.valueOf("megavolt_ampere_hours_reactive")),
    volt_square_hours(String.valueOf("volt_square_hours")),
    ampere_square_hours(String.valueOf("ampere_square_hours")),
    joules(String.valueOf("joules")),
    kilojoules(String.valueOf("kilojoules")),
    megajoules(String.valueOf("megajoules")),
    kilojoules_per_kilogram(String.valueOf("kilojoules_per_kilogram")),
    watt_hours(String.valueOf("watt_hours")),
    kilowatt_hours(String.valueOf("kilowatt_hours")),
    megawatt_hours(String.valueOf("megawatt_hours")),
    watt_hours_reactive(String.valueOf("watt_hours_reactive")),
    kilowatt_hours_reactive(String.valueOf("kilowatt_hours_reactive")),
    megawatt_hours_reactive(String.valueOf("megawatt_hours_reactive")),
    btus(String.valueOf("btus")),
    kilo_btus(String.valueOf("kilo_btus")),
    mega_btus(String.valueOf("mega_btus")),
    therms(String.valueOf("therms")),
    ton_hours(String.valueOf("ton_hours")),
    joules_per_kilogram_dry_air(String.valueOf("joules_per_kilogram_dry_air")),
    kilojoules_per_kilogram_dry_air(String.valueOf("kilojoules_per_kilogram_dry_air")),
    megajoules_per_kilogram_dry_air(String.valueOf("megajoules_per_kilogram_dry_air")),
    btus_per_pound_dry_air(String.valueOf("btus_per_pound_dry_air")),
    btus_per_pound(String.valueOf("btus_per_pound")),
    joules_per_degree_kelvin(String.valueOf("joules_per_degree_kelvin")),
    kilojoules_per_degree_kelvin(String.valueOf("kilojoules_per_degree_kelvin")),
    megajoules_per_degree_kelvin(String.valueOf("megajoules_per_degree_kelvin")),
    joules_per_kilogram_degree_kelvin(String.valueOf("joules_per_kilogram_degree_kelvin")),
    newton(String.valueOf("newton")),
    newton_meters(String.valueOf("newton_meters")),
    hertz(String.valueOf("hertz")),
    kilohertz(String.valueOf("kilohertz")),
    megahertz(String.valueOf("megahertz")),
    cycles_per_minute(String.valueOf("cycles_per_minute")),
    cycles_per_hour(String.valueOf("cycles_per_hour")),
    per_hour(String.valueOf("per_hour")),
    per_minute(String.valueOf("per_minute")),
    per_second(String.valueOf("per_second")),
    grams_of_water_per_kilogram_dry_air(String.valueOf("grams_of_water_per_kilogram_dry_air")),
    percent_relative_humidity(String.valueOf("percent_relative_humidity")),
    watts_per_square_foot(String.valueOf("watts_per_square_foot")),
    watts_per_square_meter(String.valueOf("watts_per_square_meter")),
    milliwatts_per_square_centimeter(String.valueOf("milliwatts_per_square_centimeter")),
    candelas(String.valueOf("candelas")),
    candelas_per_square_meter(String.valueOf("candelas_per_square_meter")),
    lumens(String.valueOf("lumens")),
    luxes(String.valueOf("luxes")),
    foot_candles(String.valueOf("foot_candles")),
    grams_per_second(String.valueOf("grams_per_second")),
    grams_per_minute(String.valueOf("grams_per_minute")),
    kilograms_per_second(String.valueOf("kilograms_per_second")),
    kilograms_per_minute(String.valueOf("kilograms_per_minute")),
    kilograms_per_hour(String.valueOf("kilograms_per_hour")),
    pounds_mass_per_second(String.valueOf("pounds_mass_per_second")),
    pounds_mass_per_minute(String.valueOf("pounds_mass_per_minute")),
    pounds_mass_per_hour(String.valueOf("pounds_mass_per_hour")),
    tons_per_hour(String.valueOf("tons_per_hour")),
    btus_per_hour(String.valueOf("btus_per_hour")),
    kilo_btus_per_hour(String.valueOf("kilo_btus_per_hour")),
    joule_per_hours(String.valueOf("joule_per_hours")),
    horsepower(String.valueOf("horsepower")),
    tons_refrigeration(String.valueOf("tons_refrigeration")),
    pascals(String.valueOf("pascals")),
    hectopascals(String.valueOf("hectopascals")),
    kilopascals(String.valueOf("kilopascals")),
    megapascals(String.valueOf("megapascals")),
    millibars(String.valueOf("millibars")),
    bars(String.valueOf("bars")),
    pounds_force_per_square_inch(String.valueOf("pounds_force_per_square_inch")),
    millimeters_of_water(String.valueOf("millimeters_of_water")),
    centimeters_of_water(String.valueOf("centimeters_of_water")),
    inches_of_water(String.valueOf("inches_of_water")),
    millimeters_of_mercury(String.valueOf("millimeters_of_mercury")),
    centimeters_of_mercury(String.valueOf("centimeters_of_mercury")),
    inches_of_mercury(String.valueOf("inches_of_mercury")),
    degrees_celsius(String.valueOf("degrees_celsius")),
    degrees_kelvin(String.valueOf("degrees_kelvin")),
    degrees_fahrenheit(String.valueOf("degrees_fahrenheit")),
    degrees_kelvin_per_hour(String.valueOf("degrees_kelvin_per_hour")),
    degrees_kelvin_per_minute(String.valueOf("degrees_kelvin_per_minute")),
    degrees_celsius_per_hour(String.valueOf("degrees_celsius_per_hour")),
    degrees_celsius_per_minute(String.valueOf("degrees_celsius_per_minute")),
    degrees_fahrenheit_per_hour(String.valueOf("degrees_fahrenheit_per_hour")),
    degrees_fahrenheit_per_minute(String.valueOf("degrees_fahrenheit_per_minute")),
    degree_days_celsius(String.valueOf("degree_days_celsius")),
    degree_days_fahrenheit(String.valueOf("degree_days_fahrenheit")),
    delta_degrees_kelvin(String.valueOf("delta_degrees_kelvin")),
    delta_degrees_fahrenheit(String.valueOf("delta_degrees_fahrenheit")),
    no_units(String.valueOf("no_units")),
    ticks(String.valueOf("ticks")),
    counts(String.valueOf("counts")),
    bytes(String.valueOf("bytes")),
    kilo_bytes(String.valueOf("kilo_bytes")),
    mega_bytes(String.valueOf("mega_bytes")),
    giga_bytes(String.valueOf("giga_bytes")),
    tera_bytes(String.valueOf("tera_bytes")),
    degrees_angular(String.valueOf("degrees_angular")),
    radians(String.valueOf("radians")),
    degrees_angular_per_second(String.valueOf("degrees_angular_per_second")),
    radians_per_second(String.valueOf("radians_per_second")),
    mole_percent(String.valueOf("mole_percent")),
    percent(String.valueOf("percent")),
    per_mille(String.valueOf("per_mille")),
    percent_per_second(String.valueOf("percent_per_second")),
    percent_obscuration_per_meter(String.valueOf("percent_obscuration_per_meter")),
    percent_obscuration_per_foot(String.valueOf("percent_obscuration_per_foot")),
    parts_per_million(String.valueOf("parts_per_million")),
    parts_per_billion(String.valueOf("parts_per_billion")),
    revolutions_per_minute(String.valueOf("revolutions_per_minute")),
    joule_seconds(String.valueOf("joule_seconds")),
    newton_seconds(String.valueOf("newton_seconds")),
    newtons_per_meter(String.valueOf("newtons_per_meter")),
    pascal_seconds(String.valueOf("pascal_seconds")),
    psi_per_degree_fahrenheit(String.valueOf("psi_per_degree_fahrenheit")),
    kilograms_per_cubic_meter(String.valueOf("kilograms_per_cubic_meter")),
    kilometers_per_liter(String.valueOf("kilometers_per_liter")),
    miles_per_us_gallon(String.valueOf("miles_per_us_gallon")),
    kilowatts_per_ton(String.valueOf("kilowatts_per_ton")),
    kilowatt_hours_per_square_meter(String.valueOf("kilowatt_hours_per_square_meter")),
    kilowatt_hours_per_square_foot(String.valueOf("kilowatt_hours_per_square_foot")),
    watt_hours_per_cubic_meter(String.valueOf("watt_hours_per_cubic_meter")),
    joules_per_cubic_meter(String.valueOf("joules_per_cubic_meter")),
    megajoules_per_square_meter(String.valueOf("megajoules_per_square_meter")),
    megajoules_per_square_foot(String.valueOf("megajoules_per_square_foot")),
    square_meters_per_newton(String.valueOf("square_meters_per_newton")),
    watts_per_meter_per_degree_kelvin(String.valueOf("watts_per_meter_per_degree_kelvin")),
    watts_per_square_meter_degree_kelvin(String.valueOf("watts_per_square_meter_degree_kelvin")),
    grams_per_gram(String.valueOf("grams_per_gram")),
    kilograms_per_kilogram(String.valueOf("kilograms_per_kilogram")),
    grams_per_kilogram(String.valueOf("grams_per_kilogram")),
    milligrams_per_gram(String.valueOf("milligrams_per_gram")),
    milligrams_per_kilogram(String.valueOf("milligrams_per_kilogram")),
    grams_per_milliliter(String.valueOf("grams_per_milliliter")),
    grams_per_liter(String.valueOf("grams_per_liter")),
    grams_per_square_meter(String.valueOf("grams_per_square_meter")),
    milligrams_per_liter(String.valueOf("milligrams_per_liter")),
    micrograms_per_liter(String.valueOf("micrograms_per_liter")),
    grams_per_cubic_meter(String.valueOf("grams_per_cubic_meter")),
    milligrams_per_cubic_meter(String.valueOf("milligrams_per_cubic_meter")),
    micrograms_per_cubic_meter(String.valueOf("micrograms_per_cubic_meter")),
    nanograms_per_cubic_meter(String.valueOf("nanograms_per_cubic_meter")),
    grams_per_cubic_centimeter(String.valueOf("grams_per_cubic_centimeter")),
    becquerels(String.valueOf("becquerels")),
    kilobecquerels(String.valueOf("kilobecquerels")),
    megabecquerels(String.valueOf("megabecquerels")),
    gray(String.valueOf("gray")),
    milligray(String.valueOf("milligray")),
    microgray(String.valueOf("microgray")),
    sieverts(String.valueOf("sieverts")),
    millisieverts(String.valueOf("millisieverts")),
    microsieverts(String.valueOf("microsieverts")),
    microsieverts_per_hour(String.valueOf("microsieverts_per_hour")),
    millirems(String.valueOf("millirems")),
    millirems_per_hour(String.valueOf("millirems_per_hour")),
    decibels_a(String.valueOf("decibels_a")),
    nephelometric_turbidity_unit(String.valueOf("nephelometric_turbidity_unit")),
    pH(String.valueOf("pH")),
    minutes_per_degree_kelvin(String.valueOf("minutes_per_degree_kelvin"));

    private String value;

    EngineeringUnits(String v)
    {
        value = v;
    }

    public String value()
    {
        return value;
    }

    @Override
    public String toString()
    {
        return String.valueOf(value);
    }

    @JsonCreator
    public static EngineeringUnits fromValue(String v)
    {
        for (EngineeringUnits b : EngineeringUnits.values())
        {
            if (String.valueOf(b.value).equals(v))
                return b;
        }

        throw new IllegalArgumentException(String.format("'%s' is not one of the values accepted for %s class: %s", v, EngineeringUnits.class.getSimpleName(), Arrays.toString(EngineeringUnits.values())));
    }
}
