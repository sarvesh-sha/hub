/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import com.optio3.cloud.client.hub.model.SortCriteria;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "__type")
@JsonSubTypes(
{
    @JsonSubTypes.Type(value = AlertFilterRequest.class),
    @JsonSubTypes.Type(value = AuditFilterRequest.class),
    @JsonSubTypes.Type(value = WorkflowFilterRequest.class)
})
@JsonTypeName("EventFilterRequest")
public class EventFilterRequest
{

  public Integer version = null;
  public Integer startOffset = null;
  public Integer maxResults = null;
  public List<String> assetIDs = new ArrayList<String>();
  public List<String> locationIDs = new ArrayList<String>();
  public Boolean locationInclusive = null;
  public String likeDeviceManufacturerName = null;
  public String likeDeviceProductName = null;
  public String likeDeviceModelName = null;
  public List<SortCriteria> sortBy = new ArrayList<SortCriteria>();
  public Boolean evaluateUpdatedOn = null;
  public ZonedDateTime rangeStart = null;
  public ZonedDateTime rangeEnd = null;

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventFilterRequest {\n");

    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    startOffset: ").append(toIndentedString(startOffset)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    assetIDs: ").append(toIndentedString(assetIDs)).append("\n");
    sb.append("    locationIDs: ").append(toIndentedString(locationIDs)).append("\n");
    sb.append("    locationInclusive: ").append(toIndentedString(locationInclusive)).append("\n");
    sb.append("    likeDeviceManufacturerName: ").append(toIndentedString(likeDeviceManufacturerName)).append("\n");
    sb.append("    likeDeviceProductName: ").append(toIndentedString(likeDeviceProductName)).append("\n");
    sb.append("    likeDeviceModelName: ").append(toIndentedString(likeDeviceModelName)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    evaluateUpdatedOn: ").append(toIndentedString(evaluateUpdatedOn)).append("\n");
    sb.append("    rangeStart: ").append(toIndentedString(rangeStart)).append("\n");
    sb.append("    rangeEnd: ").append(toIndentedString(rangeEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
