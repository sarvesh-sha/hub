/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.api;

import com.optio3.cloud.client.hub.model.AzureDigitalTwinSyncProgress;
import com.optio3.cloud.client.hub.model.AzureDigitalTwinsHelperCredentials;
import com.optio3.cloud.client.hub.model.AzureIotHubHelperCredentials;
import com.optio3.cloud.client.hub.model.DevicesSamplingTemplate;
import com.optio3.cloud.client.hub.model.DevicesTemplate;
import com.optio3.cloud.client.hub.model.DiscoveryReportProgress;
import com.optio3.cloud.client.hub.model.DiscoveryReportRun;
import java.io.InputStream;
import com.optio3.cloud.client.hub.model.RecordIdentity;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;
import org.apache.cxf.jaxrs.ext.multipart.*;
import org.apache.cxf.jaxrs.ext.PATCH;

@Path("/")
public interface DiscoveryApi
{
    @GET
    @Path("/discovery/auto-config/{networkId}")
    @Produces(
    {
        "application/json"
    })
    public Boolean autoConfig(@PathParam("networkId") String networkId);

    @POST
    @Path("/discovery/bindings/{gatewayId}/add/{networkId}")
    @Consumes(
    {
        "application/x-www-form-urlencoded"
    })
    @Produces(
    {
        "application/json"
    })
    public Boolean bind(@PathParam("gatewayId") String gatewayId, @PathParam("networkId") String networkId, @FormParam(value = "forceDiscovery") Boolean forceDiscovery, @FormParam(value = "forceListObjects") Boolean forceListObjects, @FormParam(value = "forceReadObjects") Boolean forceReadObjects);

    @GET
    @Path("/discovery/azure-digital-twin/publish-check/{id}")
    @Produces(
    {
        "application/json"
    })
    public AzureDigitalTwinSyncProgress checkPushToAzureDigitalTwin(@PathParam("id") String id, @QueryParam("detailed") Boolean detailed);

    @GET
    @Path("/discovery/report/check/{id}")
    @Produces(
    {
        "application/json"
    })
    public DiscoveryReportProgress checkReport(@PathParam("id") String id, @QueryParam("detailed") Boolean detailed);

    @GET
    @Path("/discovery/device-templates/describe")
    @Produces(
    {
        "application/json"
    })
    public DevicesTemplate describeDeviceTemplates();

    @POST
    @Path("/discovery/bindings/{gatewayId}/flush")
    @Produces(
    {
        "application/json"
    })
    public RecordIdentity flushEntities(@PathParam("gatewayId") String gatewayId);

    @POST
    @Path("/discovery/bindings/{gatewayId}/flush-hb")
    @Produces(
    {
        "application/json"
    })
    public RecordIdentity flushHeartbeat(@PathParam("gatewayId") String gatewayId);

    @GET
    @Path("/discovery/azure-digital-twin/cred")
    @Produces(
    {
        "application/json"
    })
    public AzureDigitalTwinsHelperCredentials getAzureDigitalTwinCredentials();

    @GET
    @Path("/discovery/azure-iot-hub/cred")
    @Produces(
    {
        "application/json"
    })
    public AzureIotHubHelperCredentials getAzureIoTHubCredentials();

    @GET
    @Path("/discovery/bindings/{gatewayId}")
    @Produces(
    {
        "application/json"
    })
    public List<RecordIdentity> getBindings(@PathParam("gatewayId") String gatewayId);

    @GET
    @Path("/discovery/device-templates/config")
    @Produces(
    {
        "application/json"
    })
    public DevicesSamplingTemplate getDeviceSamplingTemplate();

    @GET
    @Path("/discovery/reverse-bindings/{networkId}")
    @Produces(
    {
        "application/json"
    })
    public RecordIdentity getReverseBindings(@PathParam("networkId") String networkId);

    @GET
    @Path("/discovery/azure-digital-twin/publish")
    @Produces(
    {
        "text/plain"
    })
    public String pushToAzureDigitalTwin();

    @PUT
    @Path("/discovery/device-templates/reclassify")
    public void reclassify();

    @POST
    @Path("/discovery/azure-digital-twin/cred")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public AzureDigitalTwinsHelperCredentials setAzureDigitalTwinCredentials(AzureDigitalTwinsHelperCredentials body);

    @POST
    @Path("/discovery/azure-iot-hub/cred")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public AzureIotHubHelperCredentials setAzureIoTHubCredentials(AzureIotHubHelperCredentials body);

    @POST
    @Path("/discovery/device-templates/config")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public DevicesSamplingTemplate setDeviceSamplingTemplate(DevicesSamplingTemplate body);

    @POST
    @Path("/discovery/report/start")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "text/plain"
    })
    public String startReport(DiscoveryReportRun body);

    @GET
    @Path("/discovery/report/excel/{id}/{fileName}")
    @Produces(
    {
        "application/octet-stream"
    })
    public InputStream streamReport(@PathParam("id") String id, @PathParam("fileName") String fileName);

    @POST
    @Path("/discovery/bindings/{gatewayId}/remove/{networkId}")
    @Produces(
    {
        "application/json"
    })
    public Boolean unbind(@PathParam("gatewayId") String gatewayId, @PathParam("networkId") String networkId);

    @POST
    @Path("/discovery/sampling/{networkId}/refresh")
    @Produces(
    {
        "application/json"
    })
    public RecordIdentity updateSampling(@PathParam("networkId") String networkId, @QueryParam("dryRun") Boolean dryRun, @QueryParam("startWithClassId") Boolean startWithClassId, @QueryParam("stopWithoutClassId") Boolean stopWithoutClassId, @QueryParam("triggerConfiguration") Boolean triggerConfiguration);

}
