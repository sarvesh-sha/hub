/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonCreator;

public enum LocationType
{
    ADMITTING(String.valueOf("ADMITTING")),
    APARTMENT(String.valueOf("APARTMENT")),
    ATRIUM(String.valueOf("ATRIUM")),
    AUDITORIUM(String.valueOf("AUDITORIUM")),
    BACKOFFICE(String.valueOf("BACKOFFICE")),
    BALCONY(String.valueOf("BALCONY")),
    BAR_ROOM(String.valueOf("BAR_ROOM")),
    BATHROOM(String.valueOf("BATHROOM")),
    BEDROOM(String.valueOf("BEDROOM")),
    BREAK_ROOM(String.valueOf("BREAK_ROOM")),
    BUILDING(String.valueOf("BUILDING")),
    CABLE_ROOM(String.valueOf("CABLE_ROOM")),
    CAFETERIA_ROOM(String.valueOf("CAFETERIA_ROOM")),
    CAMPUS(String.valueOf("CAMPUS")),
    CINEMA(String.valueOf("CINEMA")),
    CLASSROOM(String.valueOf("CLASSROOM")),
    CLEANING_ROOM(String.valueOf("CLEANING_ROOM")),
    CLIMATE_CONTROL_ROOM(String.valueOf("CLIMATE_CONTROL_ROOM")),
    CLOAK_ROOM(String.valueOf("CLOAK_ROOM")),
    CONFERENCE_ROOM(String.valueOf("CONFERENCE_ROOM")),
    CONVERSATION_ROOM(String.valueOf("CONVERSATION_ROOM")),
    COOKING_ROOM(String.valueOf("COOKING_ROOM")),
    COPYING_ROOM(String.valueOf("COPYING_ROOM")),
    COPY_ROOM(String.valueOf("COPY_ROOM")),
    DATAS_ERVER_ROOM(String.valueOf("DATAS_ERVER_ROOM")),
    DELIVERY_ROOM(String.valueOf("DELIVERY_ROOM")),
    DINING_ROOM(String.valueOf("DINING_ROOM")),
    DISTRIBUTION_CENTER(String.valueOf("DISTRIBUTION_CENTER")),
    DRESSING_ROOM(String.valueOf("DRESSING_ROOM")),
    EDUCATIONAL_ROOM(String.valueOf("EDUCATIONAL_ROOM")),
    ELECTRICAL_ROOM(String.valueOf("ELECTRICAL_ROOM")),
    ELEVATOR(String.valueOf("ELEVATOR")),
    ELEVATOR_ROOM(String.valueOf("ELEVATOR_ROOM")),
    ELEVATOR_SHAFT(String.valueOf("ELEVATOR_SHAFT")),
    ENTRANCE(String.valueOf("ENTRANCE")),
    EXERCISE_ROOM(String.valueOf("EXERCISE_ROOM")),
    EXHIBITION_ROOM(String.valueOf("EXHIBITION_ROOM")),
    FACADE(String.valueOf("FACADE")),
    FACTORY(String.valueOf("FACTORY")),
    FITTING_ROOM(String.valueOf("FITTING_ROOM")),
    FLOOR(String.valueOf("FLOOR")),
    FOOD_HANDLING_ROOM(String.valueOf("FOOD_HANDLING_ROOM")),
    FRONT_DESK(String.valueOf("FRONT_DESK")),
    GARAGE(String.valueOf("GARAGE")),
    GROUP_ROOM(String.valueOf("GROUP_ROOM")),
    HALLWAY(String.valueOf("HALLWAY")),
    HOME(String.valueOf("HOME")),
    HOSPITAL(String.valueOf("HOSPITAL")),
    ICU(String.valueOf("ICU")),
    INPATIENT_SERVICES(String.valueOf("INPATIENT_SERVICES")),
    KITCHEN(String.valueOf("KITCHEN")),
    LABORATORY(String.valueOf("LABORATORY")),
    LAB_SERVICES(String.valueOf("LAB_SERVICES")),
    LAND(String.valueOf("LAND")),
    LAUNDRY_ROOM(String.valueOf("LAUNDRY_ROOM")),
    LEVEL(String.valueOf("LEVEL")),
    LIBRARY(String.valueOf("LIBRARY")),
    LIVING_ROOM(String.valueOf("LIVING_ROOM")),
    LOADING_RECEIVING_ROOM(String.valueOf("LOADING_RECEIVING_ROOM")),
    LOBBY(String.valueOf("LOBBY")),
    LOCKER_ROOM(String.valueOf("LOCKER_ROOM")),
    LOUNGE(String.valueOf("LOUNGE")),
    MEDITATION_ROOM(String.valueOf("MEDITATION_ROOM")),
    MORGUE(String.valueOf("MORGUE")),
    MOTHERS_ROOM(String.valueOf("MOTHERS_ROOM")),
    MULTI_PURPOSE_ROOM(String.valueOf("MULTI_PURPOSE_ROOM")),
    NURSERY(String.valueOf("NURSERY")),
    NURSING_FACILITY(String.valueOf("NURSING_FACILITY")),
    OFFICE(String.valueOf("OFFICE")),
    OFFICE_ROOM(String.valueOf("OFFICE_ROOM")),
    OPERATING_ROOM(String.valueOf("OPERATING_ROOM")),
    OUTPATIENT_SERVICES(String.valueOf("OUTPATIENT_SERVICES")),
    PANTRY(String.valueOf("PANTRY")),
    PARKING(String.valueOf("PARKING")),
    PERSONAL_HYGIENE(String.valueOf("PERSONAL_HYGIENE")),
    PHARMACY(String.valueOf("PHARMACY")),
    RADIOLOGY(String.valueOf("RADIOLOGY")),
    RECEPTION(String.valueOf("RECEPTION")),
    RECORDING_ROOM(String.valueOf("RECORDING_ROOM")),
    RECOVERY_ROOM(String.valueOf("RECOVERY_ROOM")),
    RECREATIONAL_ROOM(String.valueOf("RECREATIONAL_ROOM")),
    REGION(String.valueOf("REGION")),
    REGIONAL_CENTER(String.valueOf("REGIONAL_CENTER")),
    RESTROOM(String.valueOf("RESTROOM")),
    RESTING_ROOM(String.valueOf("RESTING_ROOM")),
    RETAIL_ROOM(String.valueOf("RETAIL_ROOM")),
    ROOF_INNER(String.valueOf("ROOF_INNER")),
    ROOF_OUTER(String.valueOf("ROOF_OUTER")),
    ROOF_TOP(String.valueOf("ROOF_TOP")),
    ROOM(String.valueOf("ROOM")),
    SCHOOL(String.valueOf("SCHOOL")),
    SECTION(String.valueOf("SECTION")),
    SECURITY_ROOM(String.valueOf("SECURITY_ROOM")),
    SERVER_ROOM(String.valueOf("SERVER_ROOM")),
    SERVICE_SHAFT(String.valueOf("SERVICE_SHAFT")),
    SHELTER(String.valueOf("SHELTER")),
    SHIP(String.valueOf("SHIP")),
    SHOPPING_MALL(String.valueOf("SHOPPING_MALL")),
    SLAB(String.valueOf("SLAB")),
    SMALL_STUDY_ROOM(String.valueOf("SMALL_STUDY_ROOM")),
    SPRINKLER_ROOM(String.valueOf("SPRINKLER_ROOM")),
    STADIUM(String.valueOf("STADIUM")),
    STAFF_ROOM(String.valueOf("STAFF_ROOM")),
    STAIRWELL(String.valueOf("STAIRWELL")),
    STAIRS(String.valueOf("STAIRS")),
    STORAGE(String.valueOf("STORAGE")),
    STORAGE_ROOM(String.valueOf("STORAGE_ROOM")),
    SUB_BUILDING(String.valueOf("SUB_BUILDING")),
    SUPPLY_ROOM(String.valueOf("SUPPLY_ROOM")),
    TELECOMMUNICATION_ROOM(String.valueOf("TELECOMMUNICATION_ROOM")),
    TENANT_UNIT(String.valueOf("TENANT_UNIT")),
    TERRACE(String.valueOf("TERRACE")),
    THEATER(String.valueOf("THEATER")),
    THERAPY(String.valueOf("THERAPY")),
    TRAILER(String.valueOf("TRAILER")),
    TREATMENT_ROOM(String.valueOf("TREATMENT_ROOM")),
    TREATMENT_WAITING_ROOM(String.valueOf("TREATMENT_WAITING_ROOM")),
    TRUCK(String.valueOf("TRUCK")),
    UTILITIES_ROOM(String.valueOf("UTILITIES_ROOM")),
    WARD(String.valueOf("WARD")),
    WASTE_MANAGEMENT_ROOM(String.valueOf("WASTE_MANAGEMENT_ROOM")),
    WORKSHOP(String.valueOf("WORKSHOP")),
    ZONE(String.valueOf("ZONE")),
    OTHER(String.valueOf("OTHER"));

    private String value;

    LocationType(String v)
    {
        value = v;
    }

    public String value()
    {
        return value;
    }

    @Override
    public String toString()
    {
        return String.valueOf(value);
    }

    @JsonCreator
    public static LocationType fromValue(String v)
    {
        for (LocationType b : LocationType.values())
        {
            if (String.valueOf(b.value).equals(v))
                return b;
        }

        throw new IllegalArgumentException(String.format("'%s' is not one of the values accepted for %s class: %s", v, LocationType.class.getSimpleName(), Arrays.toString(LocationType.values())));
    }
}
