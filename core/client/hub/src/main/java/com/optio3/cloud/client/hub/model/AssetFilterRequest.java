/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import com.optio3.cloud.client.hub.model.SortCriteria;
import com.optio3.cloud.client.hub.model.TagsCondition;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "__type")
@JsonSubTypes(
{
    @JsonSubTypes.Type(value = DeviceElementFilterRequest.class),
    @JsonSubTypes.Type(value = DeviceFilterRequest.class),
    @JsonSubTypes.Type(value = GatewayFilterRequest.class),
    @JsonSubTypes.Type(value = HostFilterRequest.class),
    @JsonSubTypes.Type(value = LocationFilterRequest.class),
    @JsonSubTypes.Type(value = NetworkFilterRequest.class)
})
@JsonTypeName("AssetFilterRequest")
public class AssetFilterRequest
{




  public Integer version = null;
  public Integer startOffset = null;
  public Integer maxResults = null;
  public List<String> locationIDs = new ArrayList<String>();
  public Boolean locationInclusive = null;
  public Boolean locationMissing = null;
  public List<String> sysIds = new ArrayList<String>();
  public List<String> parentIDs = new ArrayList<String>();
  public List<AssetRelationship> parentRelations = new ArrayList<AssetRelationship>();
  public TagsCondition parentTagsQuery = null;
  public String likeFilter = null;
  public List<String> childrenIDs = new ArrayList<String>();
  public List<AssetRelationship> childrenRelations = new ArrayList<AssetRelationship>();
  public List<AssetState> stateIDs = new ArrayList<AssetState>();
  public List<SortCriteria> sortBy = new ArrayList<SortCriteria>();
  public ZonedDateTime discoveryRangeStart = null;
  public ZonedDateTime discoveryRangeEnd = null;
  public Boolean hasNoMetadata = null;
  public Boolean hasMetadata = null;
  public TagsCondition tagsQuery = null;
  public Boolean isHidden = null;
  public Boolean isNotHidden = null;

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetFilterRequest {\n");

    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    startOffset: ").append(toIndentedString(startOffset)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    locationIDs: ").append(toIndentedString(locationIDs)).append("\n");
    sb.append("    locationInclusive: ").append(toIndentedString(locationInclusive)).append("\n");
    sb.append("    locationMissing: ").append(toIndentedString(locationMissing)).append("\n");
    sb.append("    sysIds: ").append(toIndentedString(sysIds)).append("\n");
    sb.append("    parentIDs: ").append(toIndentedString(parentIDs)).append("\n");
    sb.append("    parentRelations: ").append(toIndentedString(parentRelations)).append("\n");
    sb.append("    parentTagsQuery: ").append(toIndentedString(parentTagsQuery)).append("\n");
    sb.append("    likeFilter: ").append(toIndentedString(likeFilter)).append("\n");
    sb.append("    childrenIDs: ").append(toIndentedString(childrenIDs)).append("\n");
    sb.append("    childrenRelations: ").append(toIndentedString(childrenRelations)).append("\n");
    sb.append("    stateIDs: ").append(toIndentedString(stateIDs)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    discoveryRangeStart: ").append(toIndentedString(discoveryRangeStart)).append("\n");
    sb.append("    discoveryRangeEnd: ").append(toIndentedString(discoveryRangeEnd)).append("\n");
    sb.append("    hasNoMetadata: ").append(toIndentedString(hasNoMetadata)).append("\n");
    sb.append("    hasMetadata: ").append(toIndentedString(hasMetadata)).append("\n");
    sb.append("    tagsQuery: ").append(toIndentedString(tagsQuery)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    isNotHidden: ").append(toIndentedString(isNotHidden)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
