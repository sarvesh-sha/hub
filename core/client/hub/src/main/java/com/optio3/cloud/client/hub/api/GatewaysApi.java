/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.api;

import com.optio3.cloud.client.hub.model.GatewayAsset;
import com.optio3.cloud.client.hub.model.GatewayProberOperation;
import java.io.InputStream;
import com.optio3.cloud.client.hub.model.LogEntryFilterRequest;
import com.optio3.cloud.client.hub.model.LogLine;
import com.optio3.cloud.client.hub.model.LogRange;
import com.optio3.cloud.client.hub.model.ProberNetworkStatus;
import com.optio3.cloud.client.hub.model.ProberOperation;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;
import org.apache.cxf.jaxrs.ext.multipart.*;
import org.apache.cxf.jaxrs.ext.PATCH;

@Path("/")
public interface GatewaysApi
{
    @GET
    @Path("/gateways/item/{gatewayId}/check-network-status")
    @Produces(
    {
        "application/json"
    })
    public ProberNetworkStatus checkNetworkStatus(@PathParam("gatewayId") String gatewayId);

    @DELETE
    @Path("/gateways/item/{gatewayId}/log")
    @Produces(
    {
        "application/json"
    })
    public Integer deleteLog(@PathParam("gatewayId") String gatewayId, @QueryParam("olderThanXMinutes") Integer olderThanXMinutes);

    @GET
    @Path("/gateways/item/{gatewayId}/threads")
    @Produces(
    {
        "text/plain"
    })
    public String dumpThreads(@PathParam("gatewayId") String gatewayId, @QueryParam("includeMemInfo") Boolean includeMemInfo);

    @POST
    @Path("/gateways/item/{gatewayId}/log/filter")
    @Consumes(
    {
        "application/json"
    })
    @Produces(
    {
        "application/json"
    })
    public List<LogRange> filterLog(@PathParam("gatewayId") String gatewayId, LogEntryFilterRequest body);

    @GET
    @Path("/gateways/all-logs/stream/{fileName}")
    @Produces(
    {
        "application/zip"
    })
    public InputStream getAllLogs(@PathParam("fileName") String fileName);

    @GET
    @Path("/gateways/item/{gatewayId}/log")
    @Produces(
    {
        "application/json"
    })
    public List<LogLine> getLog(@PathParam("gatewayId") String gatewayId, @QueryParam("fromOffset") Integer fromOffset, @QueryParam("toOffset") Integer toOffset, @QueryParam("limit") Integer limit);

    @GET
    @Path("/gateways/item/{gatewayId}/lookup")
    @Produces(
    {
        "application/json"
    })
    public GatewayAsset lookup(@PathParam("gatewayId") String gatewayId);

    @POST
    @Path("/gateways/item/{gatewayId}/start-op")
    @Produces(
    {
        "application/json"
    })
    public GatewayProberOperation startOperation(@PathParam("gatewayId") String gatewayId, ProberOperation body);

}
