/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonCreator;

public enum WellKnownEquipmentClass
{
    None(String.valueOf("None")),
    Deployment(String.valueOf("Deployment")),
    Tractor(String.valueOf("Tractor")),
    Trailer(String.valueOf("Trailer")),
    Microgrid(String.valueOf("Microgrid")),
    Substation(String.valueOf("Substation")),
    Machine(String.valueOf("Machine")),
    RTU(String.valueOf("RTU")),
    GPS(String.valueOf("GPS")),
    ChargeController(String.valueOf("ChargeController")),
    Liftgate(String.valueOf("Liftgate")),
    HVAC(String.valueOf("HVAC")),
    OnBoardDiagnostics(String.valueOf("OnBoardDiagnostics")),
    NoIdle(String.valueOf("NoIdle")),
    Sensor(String.valueOf("Sensor")),
    SensorDiagnostics(String.valueOf("SensorDiagnostics")),
    SensorAlerts(String.valueOf("SensorAlerts")),
    SensorEvents(String.valueOf("SensorEvents")),
    LevelSensor(String.valueOf("LevelSensor")),
    Accelerometer(String.valueOf("Accelerometer")),
    Vibration(String.valueOf("Vibration")),
    SensorSecondary(String.valueOf("SensorSecondary")),
    SensorTertiary(String.valueOf("SensorTertiary")),
    TireSensor(String.valueOf("TireSensor")),
    TemperatureSensor(String.valueOf("TemperatureSensor")),
    HumiditySensor(String.valueOf("HumiditySensor")),
    VoltageSensor(String.valueOf("VoltageSensor")),
    CurrentSensor(String.valueOf("CurrentSensor")),
    SensorCluster(String.valueOf("SensorCluster")),
    SmartLock(String.valueOf("SmartLock")),
    AssetTag(String.valueOf("AssetTag"));

    private String value;

    WellKnownEquipmentClass(String v)
    {
        value = v;
    }

    public String value()
    {
        return value;
    }

    @Override
    public String toString()
    {
        return String.valueOf(value);
    }

    @JsonCreator
    public static WellKnownEquipmentClass fromValue(String v)
    {
        for (WellKnownEquipmentClass b : WellKnownEquipmentClass.values())
        {
            if (String.valueOf(b.value).equals(v))
                return b;
        }

        throw new IllegalArgumentException(String.format("'%s' is not one of the values accepted for %s class: %s", v, WellKnownEquipmentClass.class.getSimpleName(), Arrays.toString(WellKnownEquipmentClass.values())));
    }
}
