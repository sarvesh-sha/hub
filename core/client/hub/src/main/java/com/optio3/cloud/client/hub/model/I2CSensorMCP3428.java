/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import com.optio3.cloud.client.hub.model.I2CSensor;
import com.optio3.cloud.client.hub.model.WellKnownEquipmentClassOrCustom;
import com.optio3.cloud.client.hub.model.WellKnownPointClassOrCustom;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

@JsonTypeName("I2CSensor_MCP3428")
public class I2CSensorMCP3428 extends I2CSensor
{

  public Integer channel = null;
  public Integer gain = null;
  public Float conversionScale = null;
  public Float conversionOffsetPre = null;
  public Float conversionOffsetPost = null;
  public WellKnownPointClassOrCustom pointClass = null;

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class I2CSensorMCP3428 {\n");
    sb.append("    ").append(super.toString().replace("\n", "\n    ")).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    gain: ").append(toIndentedString(gain)).append("\n");
    sb.append("    conversionScale: ").append(toIndentedString(conversionScale)).append("\n");
    sb.append("    conversionOffsetPre: ").append(toIndentedString(conversionOffsetPre)).append("\n");
    sb.append("    conversionOffsetPost: ").append(toIndentedString(conversionOffsetPost)).append("\n");
    sb.append("    pointClass: ").append(toIndentedString(pointClass)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
