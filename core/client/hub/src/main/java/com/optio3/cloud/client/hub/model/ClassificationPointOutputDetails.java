/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

public class ClassificationPointOutputDetails
{



  public String id = null;
  public Double positiveScore = null;
  public Double negativeScore = null;
  public Double threshold = null;
  public Boolean ignored = null;
  public EngineeringUnits assignedUnits = null;
  public String azureDigitalTwinModel = null;
  public Integer samplingPeriod = null;
  public Boolean noSampling = null;
  public ClassificationReason reason = null;
  public List<String> matchingDimensions = new ArrayList<String>();

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationPointOutputDetails {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    positiveScore: ").append(toIndentedString(positiveScore)).append("\n");
    sb.append("    negativeScore: ").append(toIndentedString(negativeScore)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    ignored: ").append(toIndentedString(ignored)).append("\n");
    sb.append("    assignedUnits: ").append(toIndentedString(assignedUnits)).append("\n");
    sb.append("    azureDigitalTwinModel: ").append(toIndentedString(azureDigitalTwinModel)).append("\n");
    sb.append("    samplingPeriod: ").append(toIndentedString(samplingPeriod)).append("\n");
    sb.append("    noSampling: ").append(toIndentedString(noSampling)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    matchingDimensions: ").append(toIndentedString(matchingDimensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
