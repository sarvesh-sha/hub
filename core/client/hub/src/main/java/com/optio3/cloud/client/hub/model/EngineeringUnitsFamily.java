/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.hub.model;

import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonCreator;

public enum EngineeringUnitsFamily
{
    Acceleration(String.valueOf("Acceleration")),
    Area(String.valueOf("Area")),
    Currency(String.valueOf("Currency")),
    Electrical(String.valueOf("Electrical")),
    Energy(String.valueOf("Energy")),
    Enthalpy(String.valueOf("Enthalpy")),
    Entropy(String.valueOf("Entropy")),
    Force(String.valueOf("Force")),
    Frequency(String.valueOf("Frequency")),
    Humidity(String.valueOf("Humidity")),
    Length(String.valueOf("Length")),
    Light(String.valueOf("Light")),
    Mass(String.valueOf("Mass")),
    MassFlow(String.valueOf("MassFlow")),
    Power(String.valueOf("Power")),
    Pressure(String.valueOf("Pressure")),
    Temperature(String.valueOf("Temperature")),
    Time(String.valueOf("Time")),
    Torque(String.valueOf("Torque")),
    Velocity(String.valueOf("Velocity")),
    Volume(String.valueOf("Volume")),
    VolumetricFlow(String.valueOf("VolumetricFlow")),
    Other(String.valueOf("Other")),
    Constant(String.valueOf("Constant")),
    Enumerated(String.valueOf("Enumerated")),
    Binary(String.valueOf("Binary"));

    private String value;

    EngineeringUnitsFamily(String v)
    {
        value = v;
    }

    public String value()
    {
        return value;
    }

    @Override
    public String toString()
    {
        return String.valueOf(value);
    }

    @JsonCreator
    public static EngineeringUnitsFamily fromValue(String v)
    {
        for (EngineeringUnitsFamily b : EngineeringUnitsFamily.values())
        {
            if (String.valueOf(b.value).equals(v))
                return b;
        }

        throw new IllegalArgumentException(String.format("'%s' is not one of the values accepted for %s class: %s", v, EngineeringUnitsFamily.class.getSimpleName(), Arrays.toString(EngineeringUnitsFamily.values())));
    }
}
