/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Waypoint APIs
 * APIs and Definitions for the Optio3 Waypoint product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.cloud.client.waypoint.model;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "__type")
@JsonSubTypes(
{
    @JsonSubTypes.Type(value = SensorResultForArgoHytos.class),
    @JsonSubTypes.Type(value = SensorResultForBergstrom.class),
    @JsonSubTypes.Type(value = SensorResultForBluesky.class),
    @JsonSubTypes.Type(value = SensorResultForEpSolar.class),
    @JsonSubTypes.Type(value = SensorResultForGps.class),
    @JsonSubTypes.Type(value = SensorResultForHendricksonWatchman.class),
    @JsonSubTypes.Type(value = SensorResultForHolykell.class),
    @JsonSubTypes.Type(value = SensorResultForI2CHub.class),
    @JsonSubTypes.Type(value = SensorResultForJ1939.class),
    @JsonSubTypes.Type(value = SensorResultForMontageBluetoothGateway.class),
    @JsonSubTypes.Type(value = SensorResultForPalfinger.class),
    @JsonSubTypes.Type(value = SensorResultForRawCANbus.class),
    @JsonSubTypes.Type(value = SensorResultForStealthPower.class),
    @JsonSubTypes.Type(value = SensorResultForTriStar.class),
    @JsonSubTypes.Type(value = SensorResultForVictron.class),
    @JsonSubTypes.Type(value = SensorResultForZeroRPM.class)
})
public class SensorResult
{

  public Boolean success = null;
  public Boolean portDetected = null;
  public String failure = null;

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SensorResult {\n");

    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    portDetected: ").append(toIndentedString(portDetected)).append("\n");
    sb.append("    failure: ").append(toIndentedString(failure)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o)
  {
    if (o == null)
      return "null";
    return o.toString().replace("\n", "\n    ");
  }
}
