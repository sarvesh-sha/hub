{
    "swagger": "2.0",
    "info": {
        "description": "APIs and Definitions for the Optio3 Builder product.",
        "version": "1.0.0",
        "title": "Optio3 Builder APIs"
    },
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "AdminTasks"
        },
        {
            "name": "BackgroundActivities"
        },
        {
            "name": "CustomerCommunications"
        },
        {
            "name": "CustomerServiceBackups"
        },
        {
            "name": "CustomerServiceSecrets"
        },
        {
            "name": "CustomerServices"
        },
        {
            "name": "CustomerSharedSecrets"
        },
        {
            "name": "CustomerSharedUsers"
        },
        {
            "name": "Customers"
        },
        {
            "name": "DataConnection"
        },
        {
            "name": "DeploymentAgents"
        },
        {
            "name": "DeploymentHostFiles"
        },
        {
            "name": "DeploymentHostImagePulls"
        },
        {
            "name": "DeploymentHostProvisioning"
        },
        {
            "name": "DeploymentHosts"
        },
        {
            "name": "DeploymentTasks"
        },
        {
            "name": "DockerContainers"
        },
        {
            "name": "DockerVolumes"
        },
        {
            "name": "Enums"
        },
        {
            "name": "Exports"
        },
        {
            "name": "GitHubWebHooks"
        },
        {
            "name": "Hosts"
        },
        {
            "name": "JobDefinitionSteps"
        },
        {
            "name": "JobDefinitions"
        },
        {
            "name": "JobSources"
        },
        {
            "name": "JobSteps"
        },
        {
            "name": "Jobs"
        },
        {
            "name": "ManagedDirectories"
        },
        {
            "name": "RegistryImages"
        },
        {
            "name": "RegistryTaggedImages"
        },
        {
            "name": "Repositories"
        },
        {
            "name": "RepositoryBranches"
        },
        {
            "name": "RepositoryCheckouts"
        },
        {
            "name": "RepositoryCommits"
        },
        {
            "name": "Roles"
        },
        {
            "name": "Search"
        },
        {
            "name": "SystemPreferences"
        },
        {
            "name": "UserPreferences"
        },
        {
            "name": "Users"
        }
    ],
    "paths": {
        "/admin-tasks/app-version": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getAppVersion",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/datagram-sessions": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getDatagramSessions",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MessageBusDatagramSession"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/db-connections": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpDbConnections",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/logger/flush": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "flushLogger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "toConsole",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/logger/pending": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "pendingLogEntries",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/loggers/config": {
            "post": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "configLogger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/loggers/list": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getLoggers",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoggerConfiguration"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/message-bus-stats": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpMessageBusStatistics",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/request-stats": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpRequestStatistics",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/rpc-stats": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpRpcStatistics",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/threads": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpThreads",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/upgrade/list": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "checkUpgradeLevel",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/upgrade/list/services": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "checkUpgradeLevelForServices",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerUpgradeLevel"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/batch": {
            "post": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackgroundActivity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/filtered": {
            "post": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "getFiltered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivityFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/item/{id}": {
            "get": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/item/{id}/cancel": {
            "get": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "cancel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/item/{id}/details": {
            "get": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivityDetails"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-communications/register-device": {
            "post": {
                "tags": [
                    "CustomerCommunications"
                ],
                "operationId": "registerDevice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerAccessKey",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-communications/report-crash": {
            "post": {
                "tags": [
                    "CustomerCommunications"
                ],
                "operationId": "reportCrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerAccessKey",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CrashReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-communications/send-email": {
            "post": {
                "tags": [
                    "CustomerCommunications"
                ],
                "operationId": "sendEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerAccessKey",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmailMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-communications/send-text": {
            "post": {
                "tags": [
                    "CustomerCommunications"
                ],
                "operationId": "sendText",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerAccessKey",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TextMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-service-backups/batch": {
            "post": {
                "tags": [
                    "CustomerServiceBackups"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerServiceBackup"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-service-backups/item/{id}": {
            "get": {
                "tags": [
                    "CustomerServiceBackups"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerServiceBackup"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CustomerServiceBackups"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-service-backups/item/{id}/stream/{fileName}": {
            "get": {
                "tags": [
                    "CustomerServiceBackups"
                ],
                "operationId": "stream",
                "produces": [
                    "application/gzip"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-service-secrets/all/{serviceId}": {
            "get": {
                "tags": [
                    "CustomerServiceSecrets"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-service-secrets/batch": {
            "post": {
                "tags": [
                    "CustomerServiceSecrets"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerServiceSecret"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-service-secrets/create/{serviceId}": {
            "post": {
                "tags": [
                    "CustomerServiceSecrets"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerServiceSecret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerServiceSecret"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-service-secrets/item/{id}": {
            "get": {
                "tags": [
                    "CustomerServiceSecrets"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerServiceSecret"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CustomerServiceSecrets"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerServiceSecret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CustomerServiceSecrets"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/accounts/{instanceType}": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getAvailableAccounts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "instanceType",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AWS_T2_Micro",
                            "AWS_T2_Small",
                            "AWS_T2_Medium",
                            "AWS_T3_Small",
                            "AWS_T3_Medium",
                            "AWS_T3_Large",
                            "AWS_T3_XLarge",
                            "AWS_T4G_Small",
                            "AWS_T4G_Medium",
                            "AWS_T4G_Large",
                            "AWS_T4G_XLarge",
                            "AZURE_B1S",
                            "AZURE_B1MS",
                            "AZURE_B2S",
                            "AZURE_B2MS",
                            "AZURE_B4MS",
                            "Edge",
                            "AZURE_EDGE",
                            "DigitalMatter"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/all/{customerId}": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/batch": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerService"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/check-usages/progress/{id}": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "checkUsagesProgress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CheckUsagesProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/create/{customerId}": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerService"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerService"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/add-image": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "addImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RoleAndArchitectureWithImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/alert-thresholds": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "setAlertThresholds",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ]
                    },
                    {
                        "name": "warningThreshold",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "alertThreshold",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/backup": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "backup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/battery-thresholds": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "setBatteryThresholds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeployerShutdownConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/charges": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getCharges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "maxTopHosts",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCellularChargesSummary"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/charges-report/{fileName}": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getChargesReport",
                "produces": [
                    "application/csv"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/check-usages": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "checkUsages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UsageFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/compact-time-series": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "compactTimeSeries",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/deploy": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "deploy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHost"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/desired-state": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "desiredState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerServiceDesiredState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/heap-status-history": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getHeapStatusHistory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HubHeapAndThreads"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/log": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "deleteLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderThanXMinutes",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/log/filter": {
            "post": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/migrate": {
            "patch": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "migrate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/refresh-accounts": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "refreshAccounts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/refresh-certificate": {
            "patch": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "refreshCertificate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/refresh-secrets": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "refreshSecrets",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/item/{id}/upgrade-blocker": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "manageUpgradeBlocker",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-services/regions/{instanceType}": {
            "get": {
                "tags": [
                    "CustomerServices"
                ],
                "operationId": "getAvailableRegions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "instanceType",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AWS_T2_Micro",
                            "AWS_T2_Small",
                            "AWS_T2_Medium",
                            "AWS_T3_Small",
                            "AWS_T3_Medium",
                            "AWS_T3_Large",
                            "AWS_T3_XLarge",
                            "AWS_T4G_Small",
                            "AWS_T4G_Medium",
                            "AWS_T4G_Large",
                            "AWS_T4G_XLarge",
                            "AZURE_B1S",
                            "AZURE_B1MS",
                            "AZURE_B2S",
                            "AZURE_B2MS",
                            "AZURE_B4MS",
                            "Edge",
                            "AZURE_EDGE",
                            "DigitalMatter"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-secrets/all/{customerId}": {
            "get": {
                "tags": [
                    "CustomerSharedSecrets"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-secrets/batch": {
            "post": {
                "tags": [
                    "CustomerSharedSecrets"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerSharedSecret"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-secrets/create/{customerId}": {
            "post": {
                "tags": [
                    "CustomerSharedSecrets"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerSharedSecret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerSharedSecret"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-secrets/item/{id}": {
            "get": {
                "tags": [
                    "CustomerSharedSecrets"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerSharedSecret"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CustomerSharedSecrets"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerSharedSecret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CustomerSharedSecrets"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-users/all/{customerId}": {
            "get": {
                "tags": [
                    "CustomerSharedUsers"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-users/batch": {
            "post": {
                "tags": [
                    "CustomerSharedUsers"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerSharedUser"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-users/create/{customerId}": {
            "post": {
                "tags": [
                    "CustomerSharedUsers"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerSharedUser"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customer-shared-users/item/{id}": {
            "get": {
                "tags": [
                    "CustomerSharedUsers"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerSharedUser"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CustomerSharedUsers"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerSharedUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CustomerSharedUsers"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/all": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/batch": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customer"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/charges": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "operationId": "getAllCharges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maxTopHosts",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCellularChargesSummary"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/charges-report/{fileName}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "operationId": "getAllChargesReport",
                "produces": [
                    "application/csv"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/create": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/item/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/item/{id}/charges": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "operationId": "getCharges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "maxTopHosts",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCellularChargesSummary"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/customers/item/{id}/charges-report/{fileName}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "operationId": "getChargesReport",
                "produces": [
                    "application/csv"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/endpoint/AWS/SNS": {
            "post": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "receiveRaw",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "x-amz-sns-message-type",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "x-amz-sns-topic-arn",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/endpoint/pelion/authcode": {
            "get": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "pelionAuthCode",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/all/{id}": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/batch": {
            "post": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentAgent"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentAgent"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/check-online": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "checkOnline",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/flush": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "flush",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/loggers/config": {
            "post": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "configLogger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/loggers/list": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "getLoggers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoggerConfiguration"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/make-active": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "makeActive",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/restart": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "restart",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/shell/all": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "getAllShells",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShellToken"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/shell/close/{session}": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "closeShell",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/shell/new": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "openShell",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cmd",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ShellToken"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/shell/read/{session}": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "readFromShell",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShellOutput"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/shell/write/{session}": {
            "post": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "writeToShell",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ShellInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/terminate": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "terminate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-agents/item/{id}/threads": {
            "get": {
                "tags": [
                    "DeploymentAgents"
                ],
                "operationId": "dumpThreads",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeMemInfo",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/all/{id}": {
            "get": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/batch": {
            "post": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentHostFile"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/create/{hostId}": {
            "post": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFile"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}": {
            "get": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFile"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}/contents-get-as-binary": {
            "get": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "getAsBinary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFileContents"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}/contents-get-as-text": {
            "get": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "getAsText",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFileContents"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}/contents-set": {
            "post": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "setContents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFileContents"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFile"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}/start-download": {
            "get": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "startDownload",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFile"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}/start-upload": {
            "get": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "startUpload",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFile"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}/stream": {
            "post": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "setStream",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFile"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-files/item/{id}/stream/{fileName}": {
            "get": {
                "tags": [
                    "DeploymentHostFiles"
                ],
                "operationId": "getStream",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-image-pulls/batch": {
            "post": {
                "tags": [
                    "DeploymentHostImagePulls"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentHostImagePull"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-image-pulls/filter": {
            "post": {
                "tags": [
                    "DeploymentHostImagePulls"
                ],
                "operationId": "getFiltered",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostImagePullFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-image-pulls/item/{id}": {
            "get": {
                "tags": [
                    "DeploymentHostImagePulls"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostImagePull"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DeploymentHostImagePulls"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-image-pulls/item/{id}/log": {
            "get": {
                "tags": [
                    "DeploymentHostImagePulls"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-image-pulls/item/{id}/log/filter": {
            "post": {
                "tags": [
                    "DeploymentHostImagePulls"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-provisioning/checkin": {
            "post": {
                "tags": [
                    "DeploymentHostProvisioning"
                ],
                "operationId": "checkin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProvisionReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-provisioning/firmware/list": {
            "get": {
                "tags": [
                    "DeploymentHostProvisioning"
                ],
                "operationId": "listFirmwares",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "prefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvisionFirmware"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-provisioning/firmware/stream/{fileName}": {
            "get": {
                "tags": [
                    "DeploymentHostProvisioning"
                ],
                "operationId": "streamFirmware",
                "produces": [
                    "application/gzip"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-provisioning/item/{id}/add-notes": {
            "post": {
                "tags": [
                    "DeploymentHostProvisioning"
                ],
                "operationId": "addNotes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostProvisioningNotes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-provisioning/item/{id}/check-status": {
            "get": {
                "tags": [
                    "DeploymentHostProvisioning"
                ],
                "operationId": "checkStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostProvisioningStatus"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-host-provisioning/recentCheckins/{manufacturingLocation}": {
            "get": {
                "tags": [
                    "DeploymentHostProvisioning"
                ],
                "operationId": "recentCheckins",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manufacturingLocation",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvisionReport"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/batch": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentHost"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/describe-filtered": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "describeFiltered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentHostStatusDescriptor"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/inventory/{fileName}": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "reportInventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHost"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/add-notes": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "addNotes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostProvisioningNotes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/agents": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getAgents",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/alert-thresholds": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "setAlertThresholds",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ]
                    },
                    {
                        "name": "warningThreshold",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "alertThreshold",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/battery-thresholds": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "setBatteryThresholds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeployerShutdownConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/bind/{serviceId}/{role}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "bindToService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/boot-options": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getBootOptions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BootOptions"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "setBootOption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BootConfigOptionAndValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BootOptions"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/boot-options/fetch": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "fetchBootOptions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BootOptions"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/charges": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getCharges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "refresh",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCellularChargesSummary"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/data-connection-status": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getDataConnectionStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCellularStatus"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/data-exchanges": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getDataExchanges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCellularCommunications"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/data-sessions": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getDataSessions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentCellularSession"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/delayed-ops": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getDelayedOps",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DelayedOperations"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "removeDelayedOp",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DelayedOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DelayedOperations"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/files": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getFiles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/image-prune/{days}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "pruneImages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "days",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/images": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "listImages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentHostImage"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/label": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getProvisioningLabel",
                "produces": [
                    "image/jpeg"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/log": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "deleteLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderThanXMinutes",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/log-rpc": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "logRpc",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/log/filter": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/new-task/{imageId}": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "startTask",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentTaskConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHost"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/notify-me": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "notifyMe",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/prepare-for-customer/{customerId}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "prepareForCustomer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/prepare-for-offline-deployment": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "prepareForOfflineDeployment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentHostOffline"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/prepare-for-service/{serviceId}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "prepareForService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/provisioning": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getProvisioningInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostProvisioningInfo"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/provisioning/{sysId}": {
            "delete": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "removeProvisioningInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sysId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostProvisioningInfo"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/refresh-images": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "refreshImages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/remote": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getRemote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentHostServiceDetails"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/start-agent/{imageId}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "startAgent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/tasks": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "getTasks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/terminate": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "terminate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/unbind/{role}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "unbindFromService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/item/{id}/update-waypoint/{imageId}": {
            "get": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "updateWaypoint",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "imageId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-hosts/upgrade-agents": {
            "post": {
                "tags": [
                    "DeploymentHosts"
                ],
                "operationId": "upgradeAgents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeploymentAgentUpgrade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentAgentUpgradeDescriptor"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-tasks/all/{id}": {
            "get": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-tasks/batch": {
            "post": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentTask"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-tasks/item/{id}": {
            "get": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentTask"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-tasks/item/{id}/log": {
            "get": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-tasks/item/{id}/log/filter": {
            "post": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-tasks/item/{id}/restart": {
            "get": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "restart",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/deployment-tasks/item/{id}/terminate": {
            "get": {
                "tags": [
                    "DeploymentTasks"
                ],
                "operationId": "terminate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/docker-containers/all": {
            "get": {
                "tags": [
                    "DockerContainers"
                ],
                "operationId": "getContainers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "host",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/docker-containers/batch": {
            "post": {
                "tags": [
                    "DockerContainers"
                ],
                "operationId": "getContainerBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DockerContainer"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/docker-containers/fetch/{id}": {
            "get": {
                "tags": [
                    "DockerContainers"
                ],
                "operationId": "getContainerByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DockerContainer"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/docker-volumes/all": {
            "get": {
                "tags": [
                    "DockerVolumes"
                ],
                "operationId": "getVolumes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "host",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/docker-volumes/batch": {
            "post": {
                "tags": [
                    "DockerVolumes"
                ],
                "operationId": "getVolumeBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DockerVolume"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/docker-volumes/fetch/{id}": {
            "get": {
                "tags": [
                    "DockerVolumes"
                ],
                "operationId": "getVolumeByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DockerVolume"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/enums/describe/{id}": {
            "get": {
                "tags": [
                    "Enums"
                ],
                "operationId": "describe",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnumDescriptor"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/add/{id}": {
            "post": {
                "tags": [
                    "Exports"
                ],
                "operationId": "add",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/ExportCell"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/generate/{id}/excel": {
            "get": {
                "tags": [
                    "Exports"
                ],
                "operationId": "generateExcel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/start": {
            "post": {
                "tags": [
                    "Exports"
                ],
                "operationId": "start",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportHeader"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/stream/{id}/excel/{fileName}": {
            "get": {
                "tags": [
                    "Exports"
                ],
                "operationId": "streamExcel",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/github/webhooks": {
            "post": {
                "tags": [
                    "GitHubWebHooks"
                ],
                "operationId": "postToHook",
                "parameters": [
                    {
                        "name": "X-GitHub-Event",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-GitHub-Delivery",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Hub-Signature",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/hosts/all": {
            "get": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/hosts/batch": {
            "post": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Host"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/hosts/item/{hostId}/log": {
            "get": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "deleteLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderThanXMinutes",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/hosts/item/{hostId}/log/filter": {
            "post": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/hosts/item/{id}": {
            "get": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Host"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definition-steps/batch": {
            "post": {
                "tags": [
                    "JobDefinitionSteps"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobDefinitionStep"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definition-steps/create/{id}": {
            "post": {
                "tags": [
                    "JobDefinitionSteps"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JobDefinitionStep"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JobDefinitionStep"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definition-steps/item/{id}": {
            "get": {
                "tags": [
                    "JobDefinitionSteps"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JobDefinitionStep"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "JobDefinitionSteps"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JobDefinitionStep"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "JobDefinitionSteps"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definitions/all": {
            "get": {
                "tags": [
                    "JobDefinitions"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definitions/batch": {
            "post": {
                "tags": [
                    "JobDefinitions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobDefinition"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definitions/create": {
            "post": {
                "tags": [
                    "JobDefinitions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JobDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JobDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definitions/item/{id}": {
            "get": {
                "tags": [
                    "JobDefinitions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JobDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "JobDefinitions"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JobDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "JobDefinitions"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-definitions/trigger/{id}": {
            "get": {
                "tags": [
                    "JobDefinitions"
                ],
                "operationId": "trigger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "branch",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-sources/batch": {
            "post": {
                "tags": [
                    "JobSources"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobSource"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-sources/item/{id}": {
            "get": {
                "tags": [
                    "JobSources"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JobSource"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-steps/batch": {
            "post": {
                "tags": [
                    "JobSteps"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobStep"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-steps/item/{id}": {
            "get": {
                "tags": [
                    "JobSteps"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JobStep"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "JobSteps"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JobStep"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-steps/log/{id}": {
            "get": {
                "tags": [
                    "JobSteps"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/job-steps/log/{id}/filter": {
            "post": {
                "tags": [
                    "JobSteps"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/jobs/all": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/jobs/batch": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Job"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/jobs/filter": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "getFiltered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/JobFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/jobs/item/{id}": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/jobs/item/{id}/cancel": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "cancel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/jobs/item/{id}/usage": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "getUsage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JobUsage"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/managed-directories/all": {
            "get": {
                "tags": [
                    "ManagedDirectories"
                ],
                "operationId": "getContainers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "host",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/managed-directories/batch": {
            "post": {
                "tags": [
                    "ManagedDirectories"
                ],
                "operationId": "getContainerBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ManagedDirectory"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/managed-directories/fetch/{id}": {
            "get": {
                "tags": [
                    "ManagedDirectories"
                ],
                "operationId": "getContainerByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ManagedDirectory"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-images/all": {
            "get": {
                "tags": [
                    "RegistryImages"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-images/batch": {
            "post": {
                "tags": [
                    "RegistryImages"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RegistryImage"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-images/find/{imageSha}": {
            "get": {
                "tags": [
                    "RegistryImages"
                ],
                "operationId": "findBySha",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "imageSha",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RegistryImage"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-images/item/{id}": {
            "get": {
                "tags": [
                    "RegistryImages"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RegistryImage"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-images/refresh/check/{id}": {
            "get": {
                "tags": [
                    "RegistryImages"
                ],
                "operationId": "checkRefresh",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RegistryRefresh"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-images/refresh/start": {
            "get": {
                "tags": [
                    "RegistryImages"
                ],
                "operationId": "startRefresh",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-tagged-images/batch": {
            "post": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RegistryTaggedImage"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-tagged-images/item/{id}": {
            "get": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RegistryTaggedImage"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-tagged-images/item/{id}/distribute": {
            "get": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "distribute",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "factoryFloor",
                            "provisioned",
                            "installationPending",
                            "offline",
                            "idle",
                            "operational",
                            "maintenance",
                            "lostConnectivity",
                            "storageCorruption",
                            "RMA_warranty",
                            "RMA_nowarranty",
                            "retired"
                        ]
                    },
                    {
                        "name": "hostId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-tagged-images/item/{id}/mark/{status}": {
            "post": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "mark",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "None",
                            "ReleaseCandidate",
                            "Release",
                            "LastGoodKnown"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RegistryTaggedImage"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-tagged-images/item/{id}/usage": {
            "get": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "getUsage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RegistryTaggedImageUsage"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-tagged-images/lookup-tag": {
            "get": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "lookupTagForRole",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "None",
                            "ReleaseCandidate",
                            "Release",
                            "LastGoodKnown"
                        ]
                    },
                    {
                        "name": "arch",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "UNKNOWN",
                            "X86",
                            "ARM",
                            "ARMv6",
                            "ARMv7",
                            "ARMv8",
                            "ARM64v8"
                        ]
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/registry-tagged-images/report/{status}": {
            "get": {
                "tags": [
                    "RegistryTaggedImages"
                ],
                "operationId": "report",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "None",
                            "ReleaseCandidate",
                            "Release",
                            "LastGoodKnown"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReleaseStatusReport"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repositories/all": {
            "get": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repositories/batch": {
            "post": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Repository"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repositories/create": {
            "post": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "create",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repositories/item/{id}": {
            "get": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repositories/item/{id}/{hash}": {
            "get": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "getCommit",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RepositoryCommit"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repositories/refresh/check/{id}": {
            "get": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "checkRefresh",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RepositoryRefresh"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repositories/refresh/start": {
            "get": {
                "tags": [
                    "Repositories"
                ],
                "operationId": "startRefresh",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-branches/all/{id}": {
            "get": {
                "tags": [
                    "RepositoryBranches"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-branches/batch": {
            "post": {
                "tags": [
                    "RepositoryBranches"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepositoryBranch"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-branches/item/{id}": {
            "get": {
                "tags": [
                    "RepositoryBranches"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RepositoryBranch"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "RepositoryBranches"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-checkouts/all/{id}": {
            "get": {
                "tags": [
                    "RepositoryCheckouts"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-checkouts/batch": {
            "post": {
                "tags": [
                    "RepositoryCheckouts"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepositoryCheckout"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-checkouts/item/{id}": {
            "get": {
                "tags": [
                    "RepositoryCheckouts"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RepositoryCheckout"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "RepositoryCheckouts"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-commits/batch": {
            "post": {
                "tags": [
                    "RepositoryCommits"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepositoryCommit"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-commits/item/{id}": {
            "get": {
                "tags": [
                    "RepositoryCommits"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RepositoryCommit"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/repository-commits/item/{id}/parents": {
            "get": {
                "tags": [
                    "RepositoryCommits"
                ],
                "operationId": "getAncestors",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/roles/all": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/roles/batch": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/roles/item/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/search/query": {
            "post": {
                "tags": [
                    "Search"
                ],
                "operationId": "search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchRequest"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SearchResultSet"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/subkey/list": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "listSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/subkey/remove": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "removeSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/check": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "checkValueFormat",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/get": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "getValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SystemPreference"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/list": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "listValues",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/remove": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "removeValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/set": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "setValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/subkey/list": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "listSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/subkey/remove": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "removeSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/check": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "checkValueFormat",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/get": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "getValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserPreference"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/list": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "listValues",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/remove": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "removeValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/set": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "setValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/all": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/forgotPwd": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "forgotPassword",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailAddress",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/item/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/item/{id}/changePwd": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "changePassword",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "currentPassword",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    },
                    "412": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/DetailedApplicationExceptionErrorDetails"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "logout",
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/resetPwd": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "resetPassword",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "BackgroundActivity": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "title": {
                    "type": "string"
                },
                "context": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                },
                "nextActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastActivationStatus": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "lastActivationFailure": {
                    "type": "string"
                },
                "lastActivationFailureTrace": {
                    "type": "string"
                },
                "worker": {
                    "$ref": "#/definitions/Host"
                },
                "waitingActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "subActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "BackgroundActivity"
        },
        "BackgroundActivityDetails": {
            "type": "object",
            "properties": {
                "handlerState": {
                    "type": "object"
                }
            }
        },
        "BackgroundActivityFilterPair": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "string",
                    "enum": [
                        "all",
                        "hideCompleted",
                        "running",
                        "completed",
                        "matchingStatus"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.model.scheduler.BackgroundActivityFilter"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "ACTIVE_BUT_CANCELLING",
                            "PAUSED",
                            "PAUSED_BUT_CANCELLING",
                            "WAITING",
                            "WAITING_BUT_CANCELLING",
                            "SLEEPING",
                            "SLEEPING_BUT_CANCELLIN",
                            "EXECUTING",
                            "EXECUTING_BUT_CANCELLING",
                            "CANCELLED",
                            "COMPLETED",
                            "FAILED"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                    }
                }
            }
        },
        "BackgroundActivityFilterRequest": {
            "type": "object",
            "properties": {
                "onlyReadyToGo": {
                    "type": "boolean"
                },
                "likeFilter": {
                    "type": "string"
                },
                "statusFilter": {
                    "$ref": "#/definitions/BackgroundActivityFilterPair"
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "BootConfigOptionAndValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "enum": [
                        "RebootTime",
                        "DisableFrontend",
                        "DisableWifi",
                        "ForceReboot",
                        "StaticIp",
                        "Gateway",
                        "Firewall",
                        "Swapfile",
                        "ModemReset",
                        "ProductionSite",
                        "FactoryFloor",
                        "APN"
                    ],
                    "x-optio3-enum-type": "com.optio3.infra.waypoint.BootConfig$Options"
                },
                "keyRaw": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "BootOptions": {
            "type": "object",
            "properties": {
                "lastUpdated": {
                    "type": "string",
                    "format": "date-time"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BootConfigOptionAndValue"
                    }
                }
            }
        },
        "CheckUsagesProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "results": {
                    "$ref": "#/definitions/UsageFilterResponse"
                }
            }
        },
        "CrashReport": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "site": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "stack": {
                    "type": "string"
                }
            }
        },
        "Customer": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "cloudId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "sharedUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "sharedSecrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "Customer"
        },
        "CustomerService": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "customer": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "operationalStatus": {
                    "type": "string",
                    "enum": [
                        "factoryFloor",
                        "provisioned",
                        "installationPending",
                        "offline",
                        "idle",
                        "operational",
                        "maintenance",
                        "lostConnectivity",
                        "storageCorruption",
                        "RMA_warranty",
                        "RMA_nowarranty",
                        "retired"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentOperationalStatus"
                },
                "instanceAccount": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string",
                    "enum": [
                        "AWS_T2_Micro",
                        "AWS_T2_Small",
                        "AWS_T2_Medium",
                        "AWS_T3_Small",
                        "AWS_T3_Medium",
                        "AWS_T3_Large",
                        "AWS_T3_XLarge",
                        "AWS_T4G_Small",
                        "AWS_T4G_Medium",
                        "AWS_T4G_Large",
                        "AWS_T4G_XLarge",
                        "AZURE_B1S",
                        "AZURE_B1MS",
                        "AZURE_B2S",
                        "AZURE_B2MS",
                        "AZURE_B4MS",
                        "Edge",
                        "AZURE_EDGE",
                        "DigitalMatter"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentInstance"
                },
                "instanceRegion": {
                    "type": "string"
                },
                "vertical": {
                    "type": "string",
                    "enum": [
                        "None",
                        "CRE",
                        "Digineous",
                        "MontageWalmart",
                        "MerlinSolar",
                        "Palfinger",
                        "StealthPower",
                        "EPowerAmazon",
                        "DigitalMatter"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.customer.CustomerVertical"
                },
                "diskSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "useDemoData": {
                    "type": "boolean"
                },
                "relaunchAlways": {
                    "type": "boolean"
                },
                "disableServiceWorker": {
                    "type": "boolean"
                },
                "disableEmails": {
                    "type": "boolean"
                },
                "disableTexts": {
                    "type": "boolean"
                },
                "useTestReporter": {
                    "type": "boolean"
                },
                "certificateWarning": {
                    "type": "boolean"
                },
                "extraConfigLines": {
                    "type": "string"
                },
                "purposes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                    }
                },
                "dbMode": {
                    "type": "string",
                    "enum": [
                        "None",
                        "H2InMemory",
                        "H2OnDisk",
                        "MariaDB"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.persistence.customer.DatabaseMode"
                },
                "heapStatusAbnormal": {
                    "type": "boolean"
                },
                "batteryThresholds": {
                    "$ref": "#/definitions/DeployerShutdownConfiguration"
                },
                "alertThresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerServiceAlertThresholds"
                    }
                },
                "currentActivity": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "upgradeBlockers": {
                    "$ref": "#/definitions/CustomerServiceUpgradeBlockers"
                },
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "roleImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleAndArchitectureWithImage"
                    }
                },
                "roleOrigin": {
                    "type": "string"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-external-record-id": "CustomerService"
        },
        "CustomerServiceAlertThresholds": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "warningThreshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "alertThreshold": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CustomerServiceBackup": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "customerService": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "fileId": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "integer",
                    "format": "int64"
                },
                "fileIdOnAgent": {
                    "type": "string"
                },
                "pendingTransfer": {
                    "type": "boolean"
                },
                "trigger": {
                    "type": "string",
                    "enum": [
                        "HostMigration",
                        "OnDemand",
                        "Upgrade",
                        "Hourly",
                        "Daily"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.persistence.customer.BackupKind"
                },
                "extraConfigLines": {
                    "type": "string"
                },
                "roleImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleAndArchitectureWithImage"
                    }
                }
            },
            "x-optio3-external-record-id": "CustomerServiceBackup"
        },
        "CustomerServiceDesiredState": {
            "type": "object",
            "properties": {
                "fromBackup": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "createBackup": {
                    "type": "string",
                    "enum": [
                        "HostMigration",
                        "OnDemand",
                        "Upgrade",
                        "Hourly",
                        "Daily"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.persistence.customer.BackupKind"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerServiceDesiredStateRole"
                    }
                }
            }
        },
        "CustomerServiceDesiredStateRole": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "image": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "shutdown": {
                    "type": "boolean"
                },
                "shutdownIfDifferent": {
                    "type": "boolean"
                },
                "launch": {
                    "type": "boolean"
                },
                "launchIfMissing": {
                    "type": "boolean"
                },
                "launchIfMissingAndIdle": {
                    "type": "boolean"
                }
            }
        },
        "CustomerServiceSecret": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "service": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "CustomerServiceSecret"
        },
        "CustomerServiceUpgradeBlocker": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "until": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CustomerServiceUpgradeBlockers": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerServiceUpgradeBlocker"
                    }
                }
            }
        },
        "CustomerSharedSecret": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "customer": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "CustomerSharedSecret"
        },
        "CustomerSharedUser": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "customer": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-optio3-external-record-id": "CustomerSharedUser"
        },
        "CustomerUpgradeLevel": {
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceUpgradeLevel"
                    }
                }
            }
        },
        "DatatableColumnConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "DatatableConfiguration": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatatableColumnConfiguration"
                    }
                }
            }
        },
        "DbEvent": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "UPDATE_INDIRECT",
                        "UPDATE_DIRECT",
                        "INSERT",
                        "DELETE"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.persistence.DbAction"
                },
                "context": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            }
        },
        "DbMessage": {
            "type": "object",
            "discriminator": "type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "DbMessageConfig",
                    "subtype_model": "DbMessage_Config"
                },
                {
                    "subtype_name": "DbMessageConfigReply",
                    "subtype_model": "DbMessage_Config_Reply"
                },
                {
                    "subtype_name": "DbMessageEvent",
                    "subtype_model": "DbMessage_Event"
                }
            ]
        },
        "DbMessageReply": {
            "type": "object"
        },
        "DbMessage_Config": {
            "allOf": [
                {
                    "$ref": "#/definitions/DbMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "table": {
                            "type": "string"
                        },
                        "active": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DbMessageConfig"
        },
        "DbMessage_Config_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/DbMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "success": {
                            "type": "boolean"
                        },
                        "lastUpdate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DbMessageConfigReply"
        },
        "DbMessage_Event": {
            "allOf": [
                {
                    "$ref": "#/definitions/DbMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "events": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DbEvent"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DbMessageEvent"
        },
        "DelayedAgentBatteryConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "DelayedAgentBatteryConfiguration"
        },
        "DelayedAgentCreation": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "loc_image": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "raw_image": {
                            "type": "string"
                        },
                        "activate": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedAgentCreation"
        },
        "DelayedAgentTermination": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "loc_agent": {
                            "$ref": "#/definitions/RecordLocator"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedAgentTermination"
        },
        "DelayedBootOptionsPull": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "DelayedBootOptionsPull"
        },
        "DelayedBootOptionsPush": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "optValue": {
                            "$ref": "#/definitions/BootConfigOptionAndValue"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedBootOptionsPush"
        },
        "DelayedFileTransfer": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "loc_file": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "upload": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedFileTransfer"
        },
        "DelayedImagePruning": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "daysToKeep": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedImagePruning"
        },
        "DelayedImagePull": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "loc_image": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "targetTag": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedImagePull"
        },
        "DelayedOperation": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "loc_activity": {
                    "$ref": "#/definitions/RecordLocator"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "retries": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "DelayedAgentBatteryConfiguration",
                    "subtype_model": "DelayedAgentBatteryConfiguration"
                },
                {
                    "subtype_name": "DelayedAgentCreation",
                    "subtype_model": "DelayedAgentCreation"
                },
                {
                    "subtype_name": "DelayedAgentTermination",
                    "subtype_model": "DelayedAgentTermination"
                },
                {
                    "subtype_name": "DelayedBootOptionsPull",
                    "subtype_model": "DelayedBootOptionsPull"
                },
                {
                    "subtype_name": "DelayedBootOptionsPush",
                    "subtype_model": "DelayedBootOptionsPush"
                },
                {
                    "subtype_name": "DelayedFileTransfer",
                    "subtype_model": "DelayedFileTransfer"
                },
                {
                    "subtype_name": "DelayedImagePruning",
                    "subtype_model": "DelayedImagePruning"
                },
                {
                    "subtype_name": "DelayedImagePull",
                    "subtype_model": "DelayedImagePull"
                },
                {
                    "subtype_name": "DelayedTaskCreation",
                    "subtype_model": "DelayedTaskCreation"
                },
                {
                    "subtype_name": "DelayedTaskRestartSingle",
                    "subtype_model": "DelayedTaskRestartSingle"
                },
                {
                    "subtype_name": "DelayedTaskTermination",
                    "subtype_model": "DelayedTaskTermination"
                },
                {
                    "subtype_name": "DelayedWaypointUpdate",
                    "subtype_model": "DelayedWaypointUpdate"
                }
            ]
        },
        "DelayedOperations": {
            "type": "object",
            "properties": {
                "ops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DelayedOperation"
                    }
                }
            }
        },
        "DelayedTaskCreation": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "role": {
                            "type": "string",
                            "enum": [
                                "test",
                                "builder",
                                "deployer",
                                "database",
                                "database_backup",
                                "hub",
                                "gateway",
                                "prober",
                                "waypoint",
                                "tracker",
                                "reporter",
                                "provisioner",
                                "bridge_BACnetP2"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                        },
                        "loc_image": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "loc_context": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "loc_tasksToStop": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordLocator"
                            }
                        },
                        "ignoreOfflineDelay": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedTaskCreation"
        },
        "DelayedTaskRestartSingle": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "loc_task": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "stopFirst": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedTaskRestartSingle"
        },
        "DelayedTaskTermination": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "loc_task": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "ignoreOfflineDelay": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedTaskTermination"
        },
        "DelayedWaypointUpdate": {
            "allOf": [
                {
                    "$ref": "#/definitions/DelayedOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "loc_image": {
                            "$ref": "#/definitions/RecordLocator"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DelayedWaypointUpdate"
        },
        "DeployerCellularInfo": {
            "type": "object",
            "properties": {
                "modemIMSI": {
                    "type": "string"
                },
                "modemIMEI": {
                    "type": "string"
                },
                "modemICCID": {
                    "type": "string"
                }
            }
        },
        "DeployerShutdownConfiguration": {
            "type": "object",
            "properties": {
                "turnOffVoltage": {
                    "type": "number",
                    "format": "float"
                },
                "turnOnVoltage": {
                    "type": "number",
                    "format": "float"
                },
                "turnOffDelaySeconds": {
                    "type": "number",
                    "format": "float"
                },
                "turnOnDelaySeconds": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "DeploymentAgent": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastHeartbeat": {
                    "type": "string",
                    "format": "date-time"
                },
                "deployment": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "instanceId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Initialized",
                        "LoadingImage",
                        "LoadedImage",
                        "Booting",
                        "Booted",
                        "BootFailed",
                        "Ready",
                        "Stopped",
                        "Terminating",
                        "Terminated",
                        "Cancelling",
                        "Cancelled"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentStatus"
                },
                "active": {
                    "type": "boolean"
                },
                "dockerId": {
                    "type": "string"
                },
                "details": {
                    "$ref": "#/definitions/DeploymentAgentDetails"
                }
            },
            "x-optio3-external-record-id": "DeploymentAgent"
        },
        "DeploymentAgentDetails": {
            "type": "object",
            "properties": {
                "supportedFeatures": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "availableProcessors": {
                    "type": "integer",
                    "format": "int32"
                },
                "freeMemory": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalMemory": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxMemory": {
                    "type": "integer",
                    "format": "int64"
                },
                "diskTotal": {
                    "type": "integer",
                    "format": "int64"
                },
                "diskFree": {
                    "type": "integer",
                    "format": "int64"
                },
                "cpuUsageUser": {
                    "type": "number",
                    "format": "double"
                },
                "cpuUsageSystem": {
                    "type": "number",
                    "format": "double"
                },
                "batteryVoltage": {
                    "type": "number",
                    "format": "float"
                },
                "cpuTemperature": {
                    "type": "number",
                    "format": "float"
                },
                "shutdownConfiguration": {
                    "$ref": "#/definitions/DeployerShutdownConfiguration"
                },
                "networkInterfaces": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "DeploymentAgentUpgrade": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "StartAgentsWithReleaseCandidate",
                        "StartAgentsWithRelease",
                        "StartOperationalAgentsWithReleaseCandidate",
                        "StartOperationalAgentsWithRelease",
                        "ActivateAgentsWithReleaseCandidate",
                        "ActivateAgentsWithRelease",
                        "TerminateNonActiveAgents",
                        "DeleteTerminatedAgents"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentAgentUpgradeAction"
                },
                "customer": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "service": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "DeploymentAgentUpgradeDescriptor": {
            "type": "object",
            "properties": {
                "host": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "lastHeartbeat": {
                    "type": "string",
                    "format": "date-time"
                },
                "displayName": {
                    "type": "string"
                },
                "processed": {
                    "type": "integer",
                    "format": "int32"
                },
                "positiveReasonForSkipping": {
                    "type": "string"
                },
                "negativeReasonForSkipping": {
                    "type": "string"
                }
            }
        },
        "DeploymentCellularCharge": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "upload": {
                    "type": "integer",
                    "format": "int64"
                },
                "download": {
                    "type": "integer",
                    "format": "int64"
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "billed": {
                    "type": "number",
                    "format": "double"
                },
                "fees": {
                    "type": "number",
                    "format": "double"
                },
                "feesOverage": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DeploymentCellularChargePerHost": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "charges": {
                    "$ref": "#/definitions/DeploymentCellularCharge"
                }
            }
        },
        "DeploymentCellularChargesSummary": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "last24Hours": {
                    "$ref": "#/definitions/DeploymentCellularCharge"
                },
                "last7Days": {
                    "$ref": "#/definitions/DeploymentCellularCharge"
                },
                "last14Days": {
                    "$ref": "#/definitions/DeploymentCellularCharge"
                },
                "last21Days": {
                    "$ref": "#/definitions/DeploymentCellularCharge"
                },
                "last30Days": {
                    "$ref": "#/definitions/DeploymentCellularCharge"
                },
                "last24HoursPerHost": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentCellularChargePerHost"
                    }
                },
                "last7DaysPerHost": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentCellularChargePerHost"
                    }
                },
                "last14DaysPerHost": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentCellularChargePerHost"
                    }
                },
                "last21DaysPerHost": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentCellularChargePerHost"
                    }
                },
                "last30DaysPerHost": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentCellularChargePerHost"
                    }
                }
            }
        },
        "DeploymentCellularCommunications": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeploymentCellularCommunicationsDetails"
                    }
                }
            }
        },
        "DeploymentCellularCommunicationsDetails": {
            "type": "object",
            "properties": {
                "totalBytes": {
                    "type": "integer",
                    "format": "int32"
                },
                "bytesByDay": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "DeploymentCellularSession": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "end": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastUpdated": {
                    "type": "string",
                    "format": "date-time"
                },
                "packetsDownloaded": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetsUploaded": {
                    "type": "integer",
                    "format": "int32"
                },
                "cellId": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "operatorCountry": {
                    "type": "string"
                },
                "radioLink": {
                    "type": "string"
                },
                "estimatedLongitude": {
                    "type": "number",
                    "format": "double"
                },
                "estimatedLatitude": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DeploymentCellularStatus": {
            "type": "object",
            "properties": {
                "isOnline": {
                    "type": "boolean"
                },
                "isTransferring": {
                    "type": "boolean"
                }
            }
        },
        "DeploymentHost": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "customerService": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "roles": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                    }
                },
                "hostId": {
                    "type": "string"
                },
                "hostName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "remoteName": {
                    "type": "string"
                },
                "dnsName": {
                    "type": "string"
                },
                "warningThreshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Initialized",
                        "LoadingImage",
                        "LoadedImage",
                        "Booting",
                        "Booted",
                        "BootFailed",
                        "Ready",
                        "Stopped",
                        "Terminating",
                        "Terminated",
                        "Cancelling",
                        "Cancelled"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentStatus"
                },
                "operationalResponsiveness": {
                    "type": "string",
                    "enum": [
                        "Responsive",
                        "UnresponsiveHalfThreshold",
                        "UnresponsiveFullThreshold",
                        "Unresponsive"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentOperationalResponsiveness"
                },
                "operationalStatus": {
                    "type": "string",
                    "enum": [
                        "factoryFloor",
                        "provisioned",
                        "installationPending",
                        "offline",
                        "idle",
                        "operational",
                        "maintenance",
                        "lostConnectivity",
                        "storageCorruption",
                        "RMA_warranty",
                        "RMA_nowarranty",
                        "retired"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentOperationalStatus"
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "instanceType": {
                    "type": "string",
                    "enum": [
                        "AWS_T2_Micro",
                        "AWS_T2_Small",
                        "AWS_T2_Medium",
                        "AWS_T3_Small",
                        "AWS_T3_Medium",
                        "AWS_T3_Large",
                        "AWS_T3_XLarge",
                        "AWS_T4G_Small",
                        "AWS_T4G_Medium",
                        "AWS_T4G_Large",
                        "AWS_T4G_XLarge",
                        "AZURE_B1S",
                        "AZURE_B1MS",
                        "AZURE_B2S",
                        "AZURE_B2MS",
                        "AZURE_B4MS",
                        "Edge",
                        "AZURE_EDGE",
                        "DigitalMatter"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentInstance"
                },
                "instanceRegion": {
                    "type": "string"
                },
                "lastHeartbeat": {
                    "type": "string",
                    "format": "date-time"
                },
                "onlineSessions": {
                    "$ref": "#/definitions/DeploymentHostOnlineSessions"
                },
                "details": {
                    "$ref": "#/definitions/DeploymentHostDetails"
                },
                "delayedOperations": {
                    "type": "boolean"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-external-record-id": "DeploymentHost"
        },
        "DeploymentHostConfig": {
            "type": "object",
            "properties": {
                "instanceType": {
                    "type": "string",
                    "enum": [
                        "AWS_T2_Micro",
                        "AWS_T2_Small",
                        "AWS_T2_Medium",
                        "AWS_T3_Small",
                        "AWS_T3_Medium",
                        "AWS_T3_Large",
                        "AWS_T3_XLarge",
                        "AWS_T4G_Small",
                        "AWS_T4G_Medium",
                        "AWS_T4G_Large",
                        "AWS_T4G_XLarge",
                        "AZURE_B1S",
                        "AZURE_B1MS",
                        "AZURE_B2S",
                        "AZURE_B2MS",
                        "AZURE_B4MS",
                        "Edge",
                        "AZURE_EDGE",
                        "DigitalMatter"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentInstance"
                },
                "imageId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                    }
                }
            }
        },
        "DeploymentHostDetails": {
            "type": "object",
            "properties": {
                "cellular": {
                    "$ref": "#/definitions/DeployerCellularInfo"
                },
                "provider": {
                    "type": "string",
                    "enum": [
                        "Twilio",
                        "TwilioSuperSim",
                        "Pelion",
                        "Aeris"
                    ],
                    "x-optio3-enum-type": "com.optio3.infra.cellular.CellularProvider"
                },
                "providerId": {
                    "type": "string"
                },
                "providerPlan": {
                    "type": "string"
                }
            }
        },
        "DeploymentHostFile": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "deployment": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "task": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "taskName": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "length": {
                    "type": "integer",
                    "format": "int64"
                },
                "downloadedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadedOn": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "x-optio3-external-record-id": "DeploymentHostFile"
        },
        "DeploymentHostFileContents": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "binary": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            }
        },
        "DeploymentHostFilterRequest": {
            "type": "object",
            "properties": {
                "includeFullDetails": {
                    "type": "boolean"
                },
                "serviceSysid": {
                    "type": "string"
                },
                "likeFilter": {
                    "type": "string"
                },
                "statusFilter": {
                    "$ref": "#/definitions/DeploymentHostFilterStatusPair"
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "DeploymentHostFilterStatusPair": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "string",
                    "enum": [
                        "all",
                        "recentlyCreated",
                        "delayedOps",
                        "nonActiveAgents",
                        "stoppedTasks",
                        "needAttention",
                        "onlyWaypoint",
                        "onlyBroken",
                        "matchingStatus"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentOperationalFilter"
                },
                "target": {
                    "type": "string",
                    "enum": [
                        "factoryFloor",
                        "provisioned",
                        "installationPending",
                        "offline",
                        "idle",
                        "operational",
                        "maintenance",
                        "lostConnectivity",
                        "storageCorruption",
                        "RMA_warranty",
                        "RMA_nowarranty",
                        "retired"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentOperationalStatus"
                }
            }
        },
        "DeploymentHostImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastRefreshed": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastUsed": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DeploymentHostImagePull": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "deployment": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "image": {
                    "type": "string"
                },
                "imageReference": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "CREATED",
                        "INITIALIZED",
                        "EXECUTING",
                        "UNKNOWNTOKEN",
                        "COMPLETED",
                        "FAILED",
                        "CANCELLING",
                        "CANCELLED",
                        "TIMEOUT"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.jobs.JobStatus"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-external-record-id": "DeploymentHostImagePull"
        },
        "DeploymentHostImagePullFilterRequest": {
            "type": "object",
            "properties": {
                "hostSysId": {
                    "type": "string"
                },
                "olderThan": {
                    "type": "string",
                    "format": "date-time"
                },
                "newerThan": {
                    "type": "string",
                    "format": "date-time"
                },
                "statusFilter": {
                    "type": "string",
                    "enum": [
                        "CREATED",
                        "INITIALIZED",
                        "EXECUTING",
                        "UNKNOWNTOKEN",
                        "COMPLETED",
                        "FAILED",
                        "CANCELLING",
                        "CANCELLED",
                        "TIMEOUT"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.jobs.JobStatus"
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "DeploymentHostOffline": {
            "type": "object",
            "properties": {
                "repoImage": {
                    "type": "string"
                },
                "repoAddress": {
                    "type": "string"
                },
                "repoUser": {
                    "type": "string"
                },
                "repoPassword": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "containerConfig": {
                    "type": "string"
                }
            }
        },
        "DeploymentHostOnlineSession": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "end": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DeploymentHostOnlineSessions": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentHostOnlineSession"
                    }
                }
            }
        },
        "DeploymentHostProvisioningInfo": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentHostProvisioningNotes"
                    }
                },
                "manufacturingInfo": {
                    "$ref": "#/definitions/ProvisionReport"
                }
            }
        },
        "DeploymentHostProvisioningNotes": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "customerInfo": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "readyForProduction": {
                    "type": "boolean"
                },
                "readyForShipping": {
                    "type": "boolean"
                },
                "deployed": {
                    "type": "boolean"
                }
            }
        },
        "DeploymentHostProvisioningStatus": {
            "type": "object",
            "properties": {
                "recentlyOnline": {
                    "type": "boolean"
                },
                "alreadyShipped": {
                    "type": "boolean"
                },
                "alreadyMarkedForProduction": {
                    "type": "boolean"
                },
                "alreadyAssociatedWithCustomer": {
                    "type": "boolean"
                }
            }
        },
        "DeploymentHostServiceDetails": {
            "type": "object",
            "properties": {
                "lastFetch": {
                    "type": "string",
                    "format": "date-time"
                },
                "remoteSysId": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "warningThreshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "alertThreshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastRefresh": {
                    "type": "string",
                    "format": "date-time"
                },
                "queueStatus": {
                    "$ref": "#/definitions/GatewayQueueStatus"
                }
            }
        },
        "DeploymentHostStatusDescriptor": {
            "type": "object",
            "properties": {
                "ri": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "customerSysId": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "serviceSysId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceVertical": {
                    "type": "string",
                    "enum": [
                        "None",
                        "CRE",
                        "Digineous",
                        "MontageWalmart",
                        "MerlinSolar",
                        "Palfinger",
                        "StealthPower",
                        "EPowerAmazon",
                        "DigitalMatter"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.customer.CustomerVertical"
                },
                "hostId": {
                    "type": "string"
                },
                "hostName": {
                    "type": "string"
                },
                "remoteName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "test",
                            "builder",
                            "deployer",
                            "database",
                            "database_backup",
                            "hub",
                            "gateway",
                            "prober",
                            "waypoint",
                            "tracker",
                            "reporter",
                            "provisioner",
                            "bridge_BACnetP2"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                    }
                },
                "rolesSummary": {
                    "type": "string"
                },
                "tasks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeploymentTask"
                    }
                },
                "agents": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeploymentAgent"
                    }
                },
                "images": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/RegistryImage"
                    }
                },
                "hostDetails": {
                    "$ref": "#/definitions/DeploymentHostDetails"
                },
                "provisioningInfo": {
                    "$ref": "#/definitions/DeploymentHostProvisioningInfo"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastHeartbeat": {
                    "type": "string",
                    "format": "date-time"
                },
                "agentBuildTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "batteryVoltage": {
                    "type": "number",
                    "format": "float"
                },
                "cpuTemperature": {
                    "type": "number",
                    "format": "float"
                },
                "diskTotal": {
                    "type": "integer",
                    "format": "int64"
                },
                "diskFree": {
                    "type": "integer",
                    "format": "int64"
                },
                "instanceType": {
                    "type": "string",
                    "enum": [
                        "AWS_T2_Micro",
                        "AWS_T2_Small",
                        "AWS_T2_Medium",
                        "AWS_T3_Small",
                        "AWS_T3_Medium",
                        "AWS_T3_Large",
                        "AWS_T3_XLarge",
                        "AWS_T4G_Small",
                        "AWS_T4G_Medium",
                        "AWS_T4G_Large",
                        "AWS_T4G_XLarge",
                        "AZURE_B1S",
                        "AZURE_B1MS",
                        "AZURE_B2S",
                        "AZURE_B2MS",
                        "AZURE_B4MS",
                        "Edge",
                        "AZURE_EDGE",
                        "DigitalMatter"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentInstance"
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Initialized",
                        "LoadingImage",
                        "LoadedImage",
                        "Booting",
                        "Booted",
                        "BootFailed",
                        "Ready",
                        "Stopped",
                        "Terminating",
                        "Terminated",
                        "Cancelling",
                        "Cancelled"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentStatus"
                },
                "operationalStatus": {
                    "type": "string",
                    "enum": [
                        "factoryFloor",
                        "provisioned",
                        "installationPending",
                        "offline",
                        "idle",
                        "operational",
                        "maintenance",
                        "lostConnectivity",
                        "storageCorruption",
                        "RMA_warranty",
                        "RMA_nowarranty",
                        "retired"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentOperationalStatus"
                },
                "responsiveness": {
                    "type": "string",
                    "enum": [
                        "Responsive",
                        "UnresponsiveHalfThreshold",
                        "UnresponsiveFullThreshold",
                        "Unresponsive"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentOperationalResponsiveness"
                },
                "delayedOps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DelayedOperation"
                    }
                },
                "flags": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "StoppedTasks",
                            "Waypoints",
                            "TerminatedAgents",
                            "DefaultAgent",
                            "AgentsRunningReleaseCandidate",
                            "AgentsRunningRelease",
                            "NonActiveAgents",
                            "NonActiveAgentsRunningReleaseCandidate",
                            "NonActiveAgentsRunningRelease"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentHostStatusDescriptorFlag"
                    }
                },
                "preparedForCustomer": {
                    "type": "string"
                },
                "preparedForService": {
                    "type": "string"
                }
            }
        },
        "DeploymentTask": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastHeartbeat": {
                    "type": "string",
                    "format": "date-time"
                },
                "deployment": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "dockerId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Initialized",
                        "LoadingImage",
                        "LoadedImage",
                        "Booting",
                        "Booted",
                        "BootFailed",
                        "Ready",
                        "Stopped",
                        "Terminating",
                        "Terminated",
                        "Cancelling",
                        "Cancelled"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.deployment.DeploymentStatus"
                },
                "image": {
                    "type": "string"
                },
                "imageReference": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mounts": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Mountpoint"
                    }
                },
                "restartCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-external-record-id": "DeploymentTask"
        },
        "DeploymentTaskConfiguration": {
            "type": "object",
            "properties": {
                "privileged": {
                    "type": "boolean"
                },
                "useHostNetwork": {
                    "type": "boolean"
                },
                "entrypoint": {
                    "type": "string"
                },
                "commandLine": {
                    "type": "string"
                }
            }
        },
        "DetailedApplicationExceptionErrorDetails": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "enum": [
                        "ALREADY_EXISTS",
                        "NOT_AUTHENTICATED",
                        "NOT_AUTHORIZED",
                        "NOT_FOUND",
                        "NOT_IMPLEMENTED",
                        "INVALID_ARGUMENT",
                        "INVALID_STATE"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.exception.DetailedApplicationException$Code"
                },
                "message": {
                    "type": "string"
                },
                "exceptionTrace": {
                    "type": "string"
                },
                "validationErrors": {
                    "$ref": "#/definitions/ValidationResults"
                }
            }
        },
        "DeviceDetails": {
            "type": "object",
            "properties": {
                "instanceType": {
                    "type": "string",
                    "enum": [
                        "AWS_T2_Micro",
                        "AWS_T2_Small",
                        "AWS_T2_Medium",
                        "AWS_T3_Small",
                        "AWS_T3_Medium",
                        "AWS_T3_Large",
                        "AWS_T3_XLarge",
                        "AWS_T4G_Small",
                        "AWS_T4G_Medium",
                        "AWS_T4G_Large",
                        "AWS_T4G_XLarge",
                        "AZURE_B1S",
                        "AZURE_B1MS",
                        "AZURE_B2S",
                        "AZURE_B2MS",
                        "AZURE_B4MS",
                        "Edge",
                        "AZURE_EDGE",
                        "DigitalMatter"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentInstance"
                },
                "hostId": {
                    "type": "string"
                },
                "imei": {
                    "type": "string"
                },
                "imsi": {
                    "type": "string"
                },
                "iccid": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "hardwareRevision": {
                    "type": "string"
                },
                "firmwareVersion": {
                    "type": "string"
                }
            }
        },
        "DockerContainer": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "owningHost": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "dockerId": {
                    "type": "string"
                },
                "startedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "mappedTo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "DockerContainer"
        },
        "DockerVolume": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "owningHost": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "dockerId": {
                    "type": "string"
                },
                "mappedAs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "DockerVolume"
        },
        "EmailMessage": {
            "type": "object",
            "properties": {
                "systemGenerated": {
                    "type": "boolean"
                },
                "from": {
                    "$ref": "#/definitions/EmailRecipient"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmailRecipient"
                    }
                },
                "subject": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "html": {
                    "type": "string"
                }
            }
        },
        "EmailRecipient": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "EnumDescriptor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ExportCell": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "decimal": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ExportColumn": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "dateFormatter": {
                    "type": "string"
                },
                "numberFormatter": {
                    "type": "string"
                }
            }
        },
        "ExportHeader": {
            "type": "object",
            "properties": {
                "sheetName": {
                    "type": "string"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExportColumn"
                    }
                }
            }
        },
        "GatewayQueueStatus": {
            "type": "object",
            "properties": {
                "oldestEntry": {
                    "type": "string",
                    "format": "date-time"
                },
                "numberOfUnbatchedEntries": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfBatchedEntries": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfBatches": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Host": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "domainName": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "temporaryImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "directories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "checkouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "Host"
        },
        "HubHeapAndThreads": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "memoryMax": {
                    "type": "integer",
                    "format": "int64"
                },
                "memoryTotal": {
                    "type": "integer",
                    "format": "int64"
                },
                "memoryUsed": {
                    "type": "integer",
                    "format": "int64"
                },
                "memoryFree": {
                    "type": "integer",
                    "format": "int64"
                },
                "heapWarning": {
                    "type": "boolean"
                },
                "uniqueStackTraces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HubUniqueStackTrace"
                    }
                }
            }
        },
        "HubUniqueStackTrace": {
            "type": "object",
            "properties": {
                "threads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "frames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "InputStream": {
            "type": "object"
        },
        "Job": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "idPrefix": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "CREATED",
                        "INITIALIZED",
                        "EXECUTING",
                        "UNKNOWNTOKEN",
                        "COMPLETED",
                        "FAILED",
                        "CANCELLING",
                        "CANCELLED",
                        "TIMEOUT"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.jobs.JobStatus"
                },
                "branch": {
                    "type": "string"
                },
                "commit": {
                    "type": "string"
                },
                "triggeredBy": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "generatedImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "acquiredContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "acquiredVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "acquiredTemporaryImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "acquiredDirectories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "acquiredCheckouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "Job"
        },
        "JobDefinition": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "idPrefix": {
                    "type": "string"
                },
                "totalTimeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "JobDefinition"
        },
        "JobDefinitionStep": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "buildId": {
                    "type": "string"
                },
                "owningJob": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "position": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "JobDefinitionStepForDockerBuild",
                    "subtype_model": "JobDefinitionStepForDockerBuild"
                },
                {
                    "subtype_name": "JobDefinitionStepForDockerPush",
                    "subtype_model": "JobDefinitionStepForDockerPush"
                },
                {
                    "subtype_name": "JobDefinitionStepForDockerRun",
                    "subtype_model": "JobDefinitionStepForDockerRun"
                },
                {
                    "subtype_name": "JobDefinitionStepForGit",
                    "subtype_model": "JobDefinitionStepForGit"
                },
                {
                    "subtype_name": "JobDefinitionStepForMaven",
                    "subtype_model": "JobDefinitionStepForMaven"
                },
                {
                    "subtype_name": "JobDefinitionStepForSshCommand",
                    "subtype_model": "JobDefinitionStepForSshCommand"
                }
            ],
            "x-optio3-external-record-id": "JobDefinitionStep"
        },
        "JobDefinitionStepForDockerBuild": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobDefinitionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "sourcePath": {
                            "type": "string"
                        },
                        "dockerFile": {
                            "type": "string"
                        },
                        "targetService": {
                            "type": "string",
                            "enum": [
                                "test",
                                "builder",
                                "deployer",
                                "database",
                                "database_backup",
                                "hub",
                                "gateway",
                                "prober",
                                "waypoint",
                                "tracker",
                                "reporter",
                                "provisioner",
                                "bridge_BACnetP2"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                        },
                        "buildArgs": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "JobDefinitionStepForDockerBuild",
            "x-optio3-external-record-id": "JobDefinitionStepForDockerBuild"
        },
        "JobDefinitionStepForDockerPush": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobDefinitionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "sourceImage": {
                            "type": "string"
                        },
                        "imageTag": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "JobDefinitionStepForDockerPush",
            "x-optio3-external-record-id": "JobDefinitionStepForDockerPush"
        },
        "JobDefinitionStepForDockerRun": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobDefinitionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "workingDirectory": {
                            "type": "string"
                        },
                        "commandLine": {
                            "type": "string"
                        },
                        "environmentVariables": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "bindings": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "cdnSettings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobDefinitionStepRecordForDockerRunCdnContent"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "JobDefinitionStepForDockerRun",
            "x-optio3-external-record-id": "JobDefinitionStepForDockerRun"
        },
        "JobDefinitionStepForGit": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobDefinitionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "repo": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "directory": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "JobDefinitionStepForGit",
            "x-optio3-external-record-id": "JobDefinitionStepForGit"
        },
        "JobDefinitionStepForMaven": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobDefinitionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "pullFrom": {
                            "type": "string"
                        },
                        "directory": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "JobDefinitionStepForMaven",
            "x-optio3-external-record-id": "JobDefinitionStepForMaven"
        },
        "JobDefinitionStepForSshCommand": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobDefinitionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "credentials": {
                            "type": "string"
                        },
                        "targetHost": {
                            "type": "string"
                        },
                        "commandLine": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "JobDefinitionStepForSshCommand",
            "x-optio3-external-record-id": "JobDefinitionStepForSshCommand"
        },
        "JobDefinitionStepRecordForDockerRunCdnContent": {
            "type": "object",
            "properties": {
                "relativeSourcePath": {
                    "type": "string"
                },
                "publishPrefix": {
                    "type": "string"
                }
            }
        },
        "JobFilterRequest": {
            "type": "object",
            "properties": {
                "after": {
                    "type": "string",
                    "format": "date-time"
                },
                "before": {
                    "type": "string",
                    "format": "date-time"
                },
                "executing": {
                    "type": "boolean"
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "JobSource": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "owningJob": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "repo": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "branch": {
                    "type": "string"
                },
                "commit": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "JobSource"
        },
        "JobStep": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "owningJob": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "CREATED",
                        "INITIALIZED",
                        "EXECUTING",
                        "UNKNOWNTOKEN",
                        "COMPLETED",
                        "FAILED",
                        "CANCELLING",
                        "CANCELLED",
                        "TIMEOUT"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.jobs.JobStatus"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "boundHost": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "container": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            },
            "x-optio3-external-record-id": "JobStep"
        },
        "JobUsage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "descShort": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "imagesInUse": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistryTaggedImageUsage"
                    }
                },
                "hostsInRole": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JobUsageRole"
                    }
                },
                "servicesInRole": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JobUsageRole"
                    }
                }
            }
        },
        "JobUsageRole": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "entries": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "LogEntryFilterRequest": {
            "type": "object",
            "properties": {
                "fromOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "toOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "threads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string"
                }
            }
        },
        "LogLine": {
            "type": "object",
            "properties": {
                "fd": {
                    "type": "integer",
                    "format": "int32"
                },
                "host": {
                    "type": "string"
                },
                "thread": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "Error",
                        "Warn",
                        "Info",
                        "Debug",
                        "DebugVerbose",
                        "DebugObnoxious"
                    ],
                    "x-optio3-enum-type": "LogSeverity"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "line": {
                    "type": "string"
                },
                "lineNumber": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "LogRange": {
            "type": "object",
            "properties": {
                "startOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "endOffset": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "LoggerConfiguration": {
            "type": "object",
            "properties": {
                "parent": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "levels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "ManagedDirectory": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "owningHost": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "path": {
                    "type": "string"
                },
                "checkoutsForDb": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "checkoutsForWork": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "mappedIn": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "ManagedDirectory"
        },
        "MbControl": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageBusPayload"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "MbControl_ExchangeCapabilities": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "available": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlExchangeCapabilities"
        },
        "MbControl_ExchangeCapabilities_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "available": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlExchangeCapabilitiesReply"
        },
        "MbControl_GetIdentity": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlGetIdentity"
        },
        "MbControl_GetIdentity_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "endpointIdentity": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlGetIdentityReply"
        },
        "MbControl_JoinChannel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "channel": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlJoinChannel"
        },
        "MbControl_JoinChannel_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "success": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlJoinChannelReply"
        },
        "MbControl_KeepAlive": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlKeepAlive"
        },
        "MbControl_KeepAlive_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlKeepAliveReply"
        },
        "MbControl_LeaveChannel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "channel": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlLeaveChannel"
        },
        "MbControl_LeaveChannel_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "success": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlLeaveChannelReply"
        },
        "MbControl_ListChannels": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlListChannels"
        },
        "MbControl_ListChannels_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "availableChannels": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListChannelsReply"
        },
        "MbControl_ListMembers": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "channel": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListMembers"
        },
        "MbControl_ListMembers_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "members": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListMembersReply"
        },
        "MbControl_ListSubscriptions": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlListSubscriptions"
        },
        "MbControl_ListSubscriptions_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "subscribedChannels": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListSubscriptionsReply"
        },
        "MbControl_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageBusPayload"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlReply"
        },
        "MbControl_UpgradeToUDP": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isARM": {
                            "type": "boolean"
                        },
                        "isIntel": {
                            "type": "boolean"
                        },
                        "registerWidth": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "hostId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlUpgradeToUDP"
        },
        "MbControl_UpgradeToUDP_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headerId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headerKey": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        },
                        "sessionId": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "sessionKey": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        },
                        "sessionValidity": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "endpointId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlUpgradeToUDPReply"
        },
        "MbData": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageBusPayload"
                },
                {
                    "type": "object",
                    "properties": {
                        "origin": {
                            "type": "string"
                        },
                        "destination": {
                            "type": "string"
                        },
                        "channel": {
                            "type": "string"
                        },
                        "payload": {
                            "type": "object"
                        },
                        "brokersPath": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "MbData_Message": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbData"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbDataMessage"
        },
        "MbData_Message_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbData"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbDataMessageReply"
        },
        "MessageBusDatagramSession": {
            "type": "object",
            "properties": {
                "sessionId": {
                    "type": "string"
                },
                "contextSysId": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "udpAddress": {
                    "type": "string"
                },
                "lastPacket": {
                    "type": "string",
                    "format": "date-time"
                },
                "rpcId": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/MessageBusStatistics"
                }
            }
        },
        "MessageBusPayload": {
            "type": "object",
            "discriminator": "type",
            "properties": {
                "messageId": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "MbControlExchangeCapabilities",
                    "subtype_model": "MbControl_ExchangeCapabilities"
                },
                {
                    "subtype_name": "MbControlExchangeCapabilitiesReply",
                    "subtype_model": "MbControl_ExchangeCapabilities_Reply"
                },
                {
                    "subtype_name": "MbControlGetIdentity",
                    "subtype_model": "MbControl_GetIdentity"
                },
                {
                    "subtype_name": "MbControlGetIdentityReply",
                    "subtype_model": "MbControl_GetIdentity_Reply"
                },
                {
                    "subtype_name": "MbControlJoinChannel",
                    "subtype_model": "MbControl_JoinChannel"
                },
                {
                    "subtype_name": "MbControlJoinChannelReply",
                    "subtype_model": "MbControl_JoinChannel_Reply"
                },
                {
                    "subtype_name": "MbControlKeepAlive",
                    "subtype_model": "MbControl_KeepAlive"
                },
                {
                    "subtype_name": "MbControlKeepAliveReply",
                    "subtype_model": "MbControl_KeepAlive_Reply"
                },
                {
                    "subtype_name": "MbControlLeaveChannel",
                    "subtype_model": "MbControl_LeaveChannel"
                },
                {
                    "subtype_name": "MbControlLeaveChannelReply",
                    "subtype_model": "MbControl_LeaveChannel_Reply"
                },
                {
                    "subtype_name": "MbControlListChannels",
                    "subtype_model": "MbControl_ListChannels"
                },
                {
                    "subtype_name": "MbControlListChannelsReply",
                    "subtype_model": "MbControl_ListChannels_Reply"
                },
                {
                    "subtype_name": "MbControlListMembers",
                    "subtype_model": "MbControl_ListMembers"
                },
                {
                    "subtype_name": "MbControlListMembersReply",
                    "subtype_model": "MbControl_ListMembers_Reply"
                },
                {
                    "subtype_name": "MbControlListSubscriptions",
                    "subtype_model": "MbControl_ListSubscriptions"
                },
                {
                    "subtype_name": "MbControlListSubscriptionsReply",
                    "subtype_model": "MbControl_ListSubscriptions_Reply"
                },
                {
                    "subtype_name": "MbControlReply",
                    "subtype_model": "MbControl_Reply"
                },
                {
                    "subtype_name": "MbControlUpgradeToUDP",
                    "subtype_model": "MbControl_UpgradeToUDP"
                },
                {
                    "subtype_name": "MbControlUpgradeToUDPReply",
                    "subtype_model": "MbControl_UpgradeToUDP_Reply"
                },
                {
                    "subtype_name": "MbDataMessage",
                    "subtype_model": "MbData_Message"
                },
                {
                    "subtype_name": "MbDataMessageReply",
                    "subtype_model": "MbData_Message_Reply"
                }
            ]
        },
        "MessageBusStatistics": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetTx": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetTxBytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "packetTxBytesResent": {
                    "type": "integer",
                    "format": "int64"
                },
                "messageTx": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetRx": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetRxBytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "packetRxBytesResent": {
                    "type": "integer",
                    "format": "int64"
                },
                "messageRx": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Mountpoint": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "readWrite": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "propagation": {
                    "type": "string"
                }
            }
        },
        "ProvisionFirmware": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ProvisionReport": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "manufacturingLocation": {
                    "type": "string"
                },
                "stationNumber": {
                    "type": "string"
                },
                "stationProgram": {
                    "type": "string"
                },
                "boardHardwareVersion": {
                    "type": "string"
                },
                "boardFirmwareVersion": {
                    "type": "string"
                },
                "boardSerialNumber": {
                    "type": "string"
                },
                "modemModule": {
                    "type": "string"
                },
                "modemRevision": {
                    "type": "string"
                },
                "firmwareVersion": {
                    "type": "string"
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "hostId": {
                    "type": "string"
                },
                "imsi": {
                    "type": "string"
                },
                "imei": {
                    "type": "string"
                },
                "iccid": {
                    "type": "string"
                },
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProvisionTest"
                    }
                }
            }
        },
        "ProvisionTest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "Skipped",
                        "Passed",
                        "Failed"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.provision.ProvisionTestResult"
                }
            }
        },
        "RecordIdentity": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time"
                },
                "table": {
                    "type": "string"
                }
            }
        },
        "RecordLocator": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "RegistryImage": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "imageSha": {
                    "type": "string"
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "buildTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "targetService": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "referencingTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "referencingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "RegistryImage"
        },
        "RegistryRefresh": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "images": {
                    "type": "integer",
                    "format": "int32"
                },
                "imagesAdded": {
                    "type": "integer",
                    "format": "int32"
                },
                "imagesRemoved": {
                    "type": "integer",
                    "format": "int32"
                },
                "tagsAdded": {
                    "type": "integer",
                    "format": "int32"
                },
                "tagsRemoved": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RegistryTaggedImage": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "owningJob": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "image": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "tag": {
                    "type": "string"
                },
                "releaseStatus": {
                    "type": "string",
                    "enum": [
                        "None",
                        "ReleaseCandidate",
                        "Release",
                        "LastGoodKnown"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.model.jobs.output.RegistryImageReleaseStatus"
                }
            },
            "x-optio3-external-record-id": "RegistryTaggedImage"
        },
        "RegistryTaggedImageUsage": {
            "type": "object",
            "properties": {
                "tag": {
                    "type": "string"
                },
                "isRC": {
                    "type": "boolean"
                },
                "isRTM": {
                    "type": "boolean"
                },
                "image": {
                    "$ref": "#/definitions/RegistryImage"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lookupCustomer": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Customer"
                    }
                },
                "lookupService": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/CustomerService"
                    }
                },
                "lookupBackup": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/CustomerServiceBackup"
                    }
                },
                "lookupTask": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeploymentTask"
                    }
                },
                "lookupHost": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeploymentHostStatusDescriptor"
                    }
                },
                "safeToDelete": {
                    "type": "boolean"
                }
            }
        },
        "ReleaseStatusReport": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "image": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            }
        },
        "RemoteArgument": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "callbackId": {
                    "type": "string"
                }
            }
        },
        "RemoteCallDescriptor": {
            "type": "object",
            "properties": {
                "classId": {
                    "type": "string"
                },
                "methodName": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RemoteArgument"
                    }
                }
            }
        },
        "RemoteExceptionResult": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "declaringClass": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "methodName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fileName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lineNumber": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "cause": {
                    "$ref": "#/definitions/RemoteExceptionResult"
                }
            }
        },
        "RemoteResult": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "exception": {
                    "$ref": "#/definitions/RemoteExceptionResult"
                }
            }
        },
        "Repository": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "gitUrl": {
                    "type": "string"
                },
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "checkouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "Repository"
        },
        "RepositoryBranch": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "repository": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "name": {
                    "type": "string"
                },
                "head": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            },
            "x-optio3-external-record-id": "RepositoryBranch"
        },
        "RepositoryCheckout": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "owningHost": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "currentBranch": {
                    "type": "string"
                },
                "currentCommit": {
                    "type": "string"
                },
                "directoryForDb": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "directoryForWork": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            },
            "x-optio3-external-record-id": "RepositoryCheckout"
        },
        "RepositoryCommit": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "repository": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "commitHash": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "authorName": {
                    "type": "string"
                },
                "authorEmailAddress": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-optio3-external-record-id": "RepositoryCommit"
        },
        "RepositoryRefresh": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "branchesAdded": {
                    "type": "integer",
                    "format": "int32"
                },
                "branchesRemoved": {
                    "type": "integer",
                    "format": "int32"
                },
                "commitsAdded": {
                    "type": "integer",
                    "format": "int32"
                },
                "commitsRemoved": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "Role"
        },
        "RoleAndArchitectureWithImage": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "test",
                        "builder",
                        "deployer",
                        "database",
                        "database_backup",
                        "hub",
                        "gateway",
                        "prober",
                        "waypoint",
                        "tracker",
                        "reporter",
                        "provisioner",
                        "bridge_BACnetP2"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.builder.orchestration.tasks.deploy.DeploymentRole"
                },
                "architecture": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "X86",
                        "ARM",
                        "ARMv6",
                        "ARMv7",
                        "ARMv8",
                        "ARM64v8"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.client.deployer.model.DockerImageArchitecture"
                },
                "image": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            }
        },
        "RpcMessage": {
            "type": "object",
            "discriminator": "type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "RpcMessageCall",
                    "subtype_model": "RpcMessage_Call"
                },
                {
                    "subtype_name": "RpcMessageCallReply",
                    "subtype_model": "RpcMessage_Call_Reply"
                },
                {
                    "subtype_name": "RpcMessageCallback",
                    "subtype_model": "RpcMessage_Callback"
                },
                {
                    "subtype_name": "RpcMessagePing",
                    "subtype_model": "RpcMessage_Ping"
                },
                {
                    "subtype_name": "RpcMessagePingReply",
                    "subtype_model": "RpcMessage_Ping_Reply"
                }
            ]
        },
        "RpcMessageReply": {
            "type": "object"
        },
        "RpcMessage_Call": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "instanceId": {
                            "type": "string"
                        },
                        "callId": {
                            "type": "string"
                        },
                        "descriptor": {
                            "$ref": "#/definitions/RemoteCallDescriptor"
                        },
                        "timeout": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "timeoutUnit": {
                            "type": "string",
                            "enum": [
                                "NANOSECONDS",
                                "MICROSECONDS",
                                "MILLISECONDS",
                                "SECONDS",
                                "MINUTES",
                                "HOURS",
                                "DAYS"
                            ],
                            "x-optio3-enum-type": "java.util.concurrent.TimeUnit"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RpcMessageCall"
        },
        "RpcMessage_Call_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/RemoteResult"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RpcMessageCallReply"
        },
        "RpcMessage_Callback": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "callId": {
                            "type": "string"
                        },
                        "callbackId": {
                            "type": "string"
                        },
                        "descriptor": {
                            "$ref": "#/definitions/RemoteCallDescriptor"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RpcMessageCallback"
        },
        "RpcMessage_Ping": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "RpcMessagePing"
        },
        "RpcMessage_Ping_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "RpcMessagePingReply"
        },
        "SearchRequest": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "x-optio3-type-name": "SearchRequest",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "SubSearchRequest",
                    "subtype_model": "SubSearchRequest"
                }
            ]
        },
        "SearchResultSet": {
            "type": "object",
            "properties": {
                "totalUsers": {
                    "type": "integer",
                    "format": "int32"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalCustomers": {
                    "type": "integer",
                    "format": "int32"
                },
                "customers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalCustomerServices": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalDeploymentHosts": {
                    "type": "integer",
                    "format": "int32"
                },
                "deploymentHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "ServiceUpgradeLevel": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "fixupProcessors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ShellInput": {
            "type": "object",
            "properties": {
                "fd": {
                    "type": "integer",
                    "format": "int32"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "ShellOutput": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "fd": {
                    "type": "integer",
                    "format": "int32"
                },
                "payload": {
                    "type": "string"
                }
            }
        },
        "ShellToken": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "SortCriteria": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string"
                },
                "ascending": {
                    "type": "boolean"
                }
            }
        },
        "SubSearchRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/SearchRequest"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "SubSearchRequest"
        },
        "SystemPreference": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "SystemPreference"
        },
        "TextMessage": {
            "type": "object",
            "properties": {
                "systemGenerated": {
                    "type": "boolean"
                },
                "senderId": {
                    "type": "string"
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "UsageFilterRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "caseInsensitive": {
                    "type": "boolean"
                },
                "maxResults": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UsageFilterResponse": {
            "type": "object",
            "properties": {
                "userPreferenceHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "userPreferenceItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "systemPreferenceHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "systemPreferenceItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "dashboardHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "dashboardItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "alertDefinitionVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "alertDefinitionVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "metricsDefinitionVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "metricsDefinitionVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "normalizationVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "normalizationVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "reportDefinitionVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "reportDefinitionVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "workflowHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "workflowItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "User"
        },
        "UserCreationRequest": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserPreference": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "UserPreference"
        },
        "ValidationResult": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "ValidationResults": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationResult"
                    }
                }
            }
        }
    }
}
