{
    "swagger": "2.0",
    "info": {
        "description": "APIs and Definitions for the Optio3 Hub product.",
        "version": "1.0.0",
        "title": "Optio3 Hub APIs"
    },
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "AdminTasks"
        },
        {
            "name": "AlertDefinitionVersions"
        },
        {
            "name": "AlertDefinitions"
        },
        {
            "name": "Alerts"
        },
        {
            "name": "AssetRelationships"
        },
        {
            "name": "AssetTimeSeries"
        },
        {
            "name": "Assets"
        },
        {
            "name": "BackgroundActivities"
        },
        {
            "name": "DashboardDefinitionVersions"
        },
        {
            "name": "DashboardDefinitions"
        },
        {
            "name": "DataConnection"
        },
        {
            "name": "DataImports"
        },
        {
            "name": "DemoTasks"
        },
        {
            "name": "DeviceElements"
        },
        {
            "name": "Devices"
        },
        {
            "name": "Discovery"
        },
        {
            "name": "Enums"
        },
        {
            "name": "Events"
        },
        {
            "name": "Exports"
        },
        {
            "name": "GatewayProberOperations"
        },
        {
            "name": "Gateways"
        },
        {
            "name": "Hosts"
        },
        {
            "name": "Locations"
        },
        {
            "name": "MetricsDefinitionVersions"
        },
        {
            "name": "MetricsDefinitions"
        },
        {
            "name": "Networks"
        },
        {
            "name": "Normalizations"
        },
        {
            "name": "ReportDefinitionVersions"
        },
        {
            "name": "ReportDefinitions"
        },
        {
            "name": "Reports"
        },
        {
            "name": "Roles"
        },
        {
            "name": "Search"
        },
        {
            "name": "SystemPreferences"
        },
        {
            "name": "Units"
        },
        {
            "name": "UserGroups"
        },
        {
            "name": "UserMessages"
        },
        {
            "name": "UserPreferences"
        },
        {
            "name": "Users"
        },
        {
            "name": "Workflows"
        }
    ],
    "paths": {
        "/admin-tasks/app-version": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getAppVersion",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/backup/item/{id}": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getBackup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "deleteBackup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/backup/start": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "startBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/check-usages": {
            "post": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "checkUsages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UsageFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UsageFilterResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/compact-time-series": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "compactTimeSeries",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "force",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/datagram-sessions": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getDatagramSessions",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MessageBusDatagramSession"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/db-connections": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpDbConnections",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/db/get-variable": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getDatabaseVariable",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/db/list-variables": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "listDatabaseVariables",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/db/set-variable/decimal": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "setDatabaseVariableDecimal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/db/set-variable/integer": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "setDatabaseVariableInteger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/db/set-variable/string": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "setDatabaseVariableString",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/drop-network-stats": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dropNetworkStats",
                "parameters": [
                    {
                        "name": "compact",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/instance-config": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getInstanceConfiguration",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InstanceConfiguration"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/logger/flush": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "flushLogger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "toConsole",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/logger/pending": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "pendingLogEntries",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/loggers/config": {
            "post": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "configLogger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/loggers/config-gateway/{gatewaySysId}": {
            "post": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "configLoggerForGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewaySysId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoggerConfiguration"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/loggers/list": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getLoggers",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoggerConfiguration"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/loggers/list-gateway/{gatewaySysId}": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "getLoggersForGateway",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewaySysId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoggerConfiguration"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/message-bus-stats": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpMessageBusStatistics",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/query-plan-cache/flush": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "flushQueryPlanCache",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/report-crash": {
            "post": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "reportCrash",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "stack",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/request-stats": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpRequestStatistics",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/rpc-stats": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpRpcStatistics",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/shutdown": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "shutdown",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/spooler/flush": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "flushSpooler",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/threads": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "dumpThreads",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/admin-tasks/upgrade/list": {
            "get": {
                "tags": [
                    "AdminTasks"
                ],
                "operationId": "checkUpgradeLevel",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/batch": {
            "post": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertDefinitionVersion"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/create": {
            "post": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/eval-range/{id}": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "evaluateOverRange",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "maxSteps",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/eval-range/{id}/check": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "checkEvaluation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertTestProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/eval/{id}": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "evaluate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "maxSteps",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "when",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "trace",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertEngineExecutionSteps"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/item/{baseId}/squash/{finalId}": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "squash",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "baseId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "finalId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/item/{id}": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/item/{id}/make-head": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "makeHead",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/item/{id}/make-release": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "makeRelease",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/item/{predId}/link/{succId}": {
            "get": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "link",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "predId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "succId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definition-versions/parse-import": {
            "post": {
                "tags": [
                    "AlertDefinitionVersions"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionDetails"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definitions/batch": {
            "post": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertDefinition"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definitions/create": {
            "post": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AlertDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definitions/filter": {
            "post": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "getFiltered",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AlertDefinitionFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definitions/item/{id}": {
            "get": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AlertDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definitions/item/{id}/log": {
            "get": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "deleteLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderThanXMinutes",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definitions/item/{id}/log/filter": {
            "post": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alert-definitions/parse-import": {
            "post": {
                "tags": [
                    "AlertDefinitions"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/batch-history": {
            "post": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "getAlertHistoryBatch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertHistory"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/feed": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "getAlertFeed",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/fetch-history/{id}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "getAlertHistoryByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertHistory"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/history/{id}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "listAlertHistoryByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/report": {
            "post": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "startAlertsReport",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/report/check/{id}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "checkAlertsReport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertsReportProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/report/excel/{id}/{fileName}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "streamAlertsReport",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/alerts/summary": {
            "post": {
                "tags": [
                    "Alerts"
                ],
                "operationId": "getSummary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupBy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "location",
                            "manufacturer",
                            "priority",
                            "relation",
                            "rule",
                            "severity",
                            "status",
                            "type"
                        ]
                    },
                    {
                        "name": "rollupType",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ADMITTING",
                            "APARTMENT",
                            "ATRIUM",
                            "AUDITORIUM",
                            "BACKOFFICE",
                            "BALCONY",
                            "BAR_ROOM",
                            "BATHROOM",
                            "BEDROOM",
                            "BREAK_ROOM",
                            "BUILDING",
                            "CABLE_ROOM",
                            "CAFETERIA_ROOM",
                            "CAMPUS",
                            "CINEMA",
                            "CLASSROOM",
                            "CLEANING_ROOM",
                            "CLIMATE_CONTROL_ROOM",
                            "CLOAK_ROOM",
                            "CONFERENCE_ROOM",
                            "CONVERSATION_ROOM",
                            "COOKING_ROOM",
                            "COPYING_ROOM",
                            "COPY_ROOM",
                            "DATAS_ERVER_ROOM",
                            "DELIVERY_ROOM",
                            "DINING_ROOM",
                            "DISTRIBUTION_CENTER",
                            "DRESSING_ROOM",
                            "EDUCATIONAL_ROOM",
                            "ELECTRICAL_ROOM",
                            "ELEVATOR",
                            "ELEVATOR_ROOM",
                            "ELEVATOR_SHAFT",
                            "ENTRANCE",
                            "EXERCISE_ROOM",
                            "EXHIBITION_ROOM",
                            "FACADE",
                            "FACTORY",
                            "FITTING_ROOM",
                            "FLOOR",
                            "FOOD_HANDLING_ROOM",
                            "FRONT_DESK",
                            "GARAGE",
                            "GROUP_ROOM",
                            "HALLWAY",
                            "HOME",
                            "HOSPITAL",
                            "ICU",
                            "INPATIENT_SERVICES",
                            "KITCHEN",
                            "LABORATORY",
                            "LAB_SERVICES",
                            "LAND",
                            "LAUNDRY_ROOM",
                            "LEVEL",
                            "LIBRARY",
                            "LIVING_ROOM",
                            "LOADING_RECEIVING_ROOM",
                            "LOBBY",
                            "LOCKER_ROOM",
                            "LOUNGE",
                            "MEDITATION_ROOM",
                            "MORGUE",
                            "MOTHERS_ROOM",
                            "MULTI_PURPOSE_ROOM",
                            "NURSERY",
                            "NURSING_FACILITY",
                            "OFFICE",
                            "OFFICE_ROOM",
                            "OPERATING_ROOM",
                            "OUTPATIENT_SERVICES",
                            "PANTRY",
                            "PARKING",
                            "PERSONAL_HYGIENE",
                            "PHARMACY",
                            "RADIOLOGY",
                            "RECEPTION",
                            "RECORDING_ROOM",
                            "RECOVERY_ROOM",
                            "RECREATIONAL_ROOM",
                            "REGION",
                            "REGIONAL_CENTER",
                            "RESTROOM",
                            "RESTING_ROOM",
                            "RETAIL_ROOM",
                            "ROOF_INNER",
                            "ROOF_OUTER",
                            "ROOF_TOP",
                            "ROOM",
                            "SCHOOL",
                            "SECTION",
                            "SECURITY_ROOM",
                            "SERVER_ROOM",
                            "SERVICE_SHAFT",
                            "SHELTER",
                            "SHIP",
                            "SHOPPING_MALL",
                            "SLAB",
                            "SMALL_STUDY_ROOM",
                            "SPRINKLER_ROOM",
                            "STADIUM",
                            "STAFF_ROOM",
                            "STAIRWELL",
                            "STAIRS",
                            "STORAGE",
                            "STORAGE_ROOM",
                            "SUB_BUILDING",
                            "SUPPLY_ROOM",
                            "TELECOMMUNICATION_ROOM",
                            "TENANT_UNIT",
                            "TERRACE",
                            "THEATER",
                            "THERAPY",
                            "TRAILER",
                            "TREATMENT_ROOM",
                            "TREATMENT_WAITING_ROOM",
                            "TRUCK",
                            "UTILITIES_ROOM",
                            "WARD",
                            "WASTE_MANAGEMENT_ROOM",
                            "WORKSHOP",
                            "ZONE",
                            "OTHER"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AlertFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertFilterResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-relationships/equipment/report": {
            "post": {
                "tags": [
                    "AssetRelationships"
                ],
                "operationId": "startEquipmentReport",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-relationships/equipment/report/check/{id}": {
            "get": {
                "tags": [
                    "AssetRelationships"
                ],
                "operationId": "checkEquipmentReport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EquipmentReportProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-relationships/equipment/report/excel/{id}/{fileName}": {
            "get": {
                "tags": [
                    "AssetRelationships"
                ],
                "operationId": "streamEquipmentReport",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-relationships/lookup": {
            "post": {
                "tags": [
                    "AssetRelationships"
                ],
                "operationId": "lookupBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetRelationshipRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetRelationshipResponse"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-relationships/top-equipments": {
            "get": {
                "tags": [
                    "AssetRelationships"
                ],
                "operationId": "getTopEquipments",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/aggregation": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "aggregation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AggregationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AggregationResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/compact/{id}": {
            "get": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "compactSamples",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/last-value": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getLastValue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesLastValueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesLastValueResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/last-value-batch": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getLastValueBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesLastValueRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesLastValueResponse"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/new-values": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "emitNewValues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesNewValueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesNewValueResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/request-multiple": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getValuesMultiple",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesMultiPropertyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesMultiPropertyResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/request-range": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getRange",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesRangeResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/request-range-batch": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getRangeBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesRangeRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesRangeResponse"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/request-single": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getValuesSingle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesSinglePropertyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesSinglePropertyResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/request-single-batch": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getValuesSingleBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesSinglePropertyRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesSinglePropertyResponse"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/schema": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesSchemaResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/schema-batch": {
            "post": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "getSchemaBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/cbor"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesSchemaRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesSchemaResponse"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets-timeseries/trim/{id}/{days}": {
            "get": {
                "tags": [
                    "AssetTimeSeries"
                ],
                "operationId": "trimSamples",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "days",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/active-workflows-batch": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getActiveWorkflowsBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/RecordIdentity"
                                }
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/active-workflows/{id}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getActiveWorkflows",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/alert-history/{id}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getHistoryByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/asset-graph/evaluate": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "evaluateAssetGraph",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AssetGraphRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AssetGraphResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/batch": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Asset"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/count": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getFilteredCount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AssetFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/create": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "create",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/device-elements/report/check/{id}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "checkDeviceElementReport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceElementReportProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/device-elements/report/excel/{id}/{fileName}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "streamDeviceElementReport",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/device-elements/report/start/{deviceSysId}": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "startDeviceElementsReport",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "deviceSysId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/filter": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getFiltered",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AssetFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AssetFilterResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/item/{id}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assets"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/item/{id}/reassign-to/{parentId}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "reassignParent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parentId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/lookup-metrics/{id}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "lookupMetrics",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/parse-import": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/summary": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getSummary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupBy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "location",
                            "manufacturer",
                            "priority",
                            "relation",
                            "rule",
                            "severity",
                            "status",
                            "type"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AssetFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SummaryResult"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/tags-query": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "tagsQuery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TagsJoinQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/tags-query-distinct": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "tagsQueryDistinct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TagsJoinQuery"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/tags-summary": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "tagsSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "recomputeIfChanged",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TagsSummary"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/tags/{id}/{tag}/get": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getTag",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/tags/{id}/{tag}/remove": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "removeTag",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/tags/{id}/{tag}/set": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "setTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/assets/travel-log/{id}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getTravelLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "maxGapForSegmentInMeters",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "maxDurationPerSegmentInSeconds",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AssetTravelLog"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/batch": {
            "post": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BackgroundActivity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/filtered": {
            "post": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "getFiltered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivityFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/item/{id}": {
            "get": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/item/{id}/cancel": {
            "get": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "cancel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/background-activities/item/{id}/details": {
            "get": {
                "tags": [
                    "BackgroundActivities"
                ],
                "operationId": "details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BackgroundActivityDetails"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definition-versions/batch": {
            "post": {
                "tags": [
                    "DashboardDefinitionVersions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DashboardDefinitionVersion"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definition-versions/create": {
            "post": {
                "tags": [
                    "DashboardDefinitionVersions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinitionVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definition-versions/item/{id}": {
            "get": {
                "tags": [
                    "DashboardDefinitionVersions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definition-versions/item/{id}/make-head": {
            "get": {
                "tags": [
                    "DashboardDefinitionVersions"
                ],
                "operationId": "makeHead",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definition-versions/item/{id}/make-release": {
            "get": {
                "tags": [
                    "DashboardDefinitionVersions"
                ],
                "operationId": "makeRelease",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definition-versions/item/{predId}/link/{succId}": {
            "get": {
                "tags": [
                    "DashboardDefinitionVersions"
                ],
                "operationId": "link",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "predId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "succId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definition-versions/parse-import": {
            "post": {
                "tags": [
                    "DashboardDefinitionVersions"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardConfiguration"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definitions/admin/push": {
            "post": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "push",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "create",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DashboardConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definitions/all": {
            "get": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definitions/batch": {
            "post": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DashboardDefinition"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definitions/create": {
            "post": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definitions/item/{id}": {
            "get": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DashboardDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/dashboard-definitions/item/{id}/history": {
            "get": {
                "tags": [
                    "DashboardDefinitions"
                ],
                "operationId": "getHistory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DashboardDefinitionVersion"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/connection/{connectionId}/last-sample/{controlPointId}": {
            "get": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "getLastSample",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "controlPointId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "setLastSample",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "controlPointId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/endpoint/{endpointId}": {
            "post": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "receiveRaw",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "endpointId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/endpoint/{endpointId}/stream": {
            "post": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "receiveStream",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "endpointId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arg",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/equipment-aggregation": {
            "get": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "equipmentAggregation",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EquipmentAggregation"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/metadata-aggregation": {
            "get": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "metadataAggregation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unclassified",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetadataAggregation"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/metadata-aggregation/controller/{controllerId}": {
            "get": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "controllerMetadataAggregation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "controllerId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unclassified",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "belowThresholdId",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ControllerMetadataAggregation"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-connection/site": {
            "get": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "getSite",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataConnectionSite"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DataConnection"
                ],
                "operationId": "setSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DataConnectionSite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataConnectionSite"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/all": {
            "get": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/batch": {
            "post": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "getBatch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImportedMetadata"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/check/{id}": {
            "get": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "checkImport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataImportProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/create": {
            "post": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ImportedMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImportedMetadata"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/item/{id}": {
            "get": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImportedMetadata"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/item/{id}/activate": {
            "get": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "makeActive",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImportedMetadata"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/parse-import": {
            "post": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ImportedMetadata"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/data-imports/start": {
            "post": {
                "tags": [
                    "DataImports"
                ],
                "operationId": "startImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DataImportRun"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/demo-tasks/demodata": {
            "get": {
                "tags": [
                    "DemoTasks"
                ],
                "operationId": "hasDemoData",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/demo-tasks/simulated-gateway/check/{id}": {
            "get": {
                "tags": [
                    "DemoTasks"
                ],
                "operationId": "checkGatewayProgress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/demo-tasks/simulated-gateway/create": {
            "post": {
                "tags": [
                    "DemoTasks"
                ],
                "operationId": "createGateway",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numDevice",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "numHistoricalDays",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "samplingPeriod",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/demo-tasks/trigger-demo-messages": {
            "get": {
                "tags": [
                    "DemoTasks"
                ],
                "operationId": "triggerDemoMessages",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/device-elements/set-desired-state/{id}": {
            "post": {
                "tags": [
                    "DeviceElements"
                ],
                "operationId": "setDesiredState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/devices/health/{id}": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "operationId": "getDeviceHealth",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceHealthSummary"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/devices/rediscovery/{id}": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "operationId": "runRediscovery",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "forceListObjects",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "forceReadObjects",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/devices/summary/report": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "operationId": "startSummaryReport",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/devices/summary/report/check/{id}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "operationId": "checkSummaryReport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DevicesReportProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/devices/summary/report/excel/{id}/{fileName}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "operationId": "streamSummaryReport",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/auto-config/{networkId}": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "autoConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/azure-digital-twin/cred": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "getAzureDigitalTwinCredentials",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureDigitalTwinsHelperCredentials"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "setAzureDigitalTwinCredentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AzureDigitalTwinsHelperCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureDigitalTwinsHelperCredentials"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/azure-digital-twin/publish": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "pushToAzureDigitalTwin",
                "produces": [
                    "text/plain"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/azure-digital-twin/publish-check/{id}": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "checkPushToAzureDigitalTwin",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureDigitalTwinSyncProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/azure-iot-hub/cred": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "getAzureIoTHubCredentials",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureIotHubHelperCredentials"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "setAzureIoTHubCredentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AzureIotHubHelperCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureIotHubHelperCredentials"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/bindings/{gatewayId}": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "getBindings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/bindings/{gatewayId}/add/{networkId}": {
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "bind",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "forceDiscovery",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "forceListObjects",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "forceReadObjects",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/bindings/{gatewayId}/flush": {
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "flushEntities",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/bindings/{gatewayId}/flush-hb": {
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "flushHeartbeat",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/bindings/{gatewayId}/remove/{networkId}": {
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "unbind",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/device-templates/config": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "getDeviceSamplingTemplate",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DevicesSamplingTemplate"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "setDeviceSamplingTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DevicesSamplingTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DevicesSamplingTemplate"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/device-templates/describe": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "describeDeviceTemplates",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DevicesTemplate"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/device-templates/reclassify": {
            "put": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "reclassify",
                "parameters": [

                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/discovery/report/check/{id}": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "checkReport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DiscoveryReportProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/report/excel/{id}/{fileName}": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "streamReport",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/report/start": {
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "startReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DiscoveryReportRun"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/reverse-bindings/{networkId}": {
            "get": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "getReverseBindings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/discovery/sampling/{networkId}/refresh": {
            "post": {
                "tags": [
                    "Discovery"
                ],
                "operationId": "updateSampling",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "startWithClassId",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "stopWithoutClassId",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "triggerConfiguration",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/enums/describe/{id}": {
            "get": {
                "tags": [
                    "Enums"
                ],
                "operationId": "describe",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnumDescriptor"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/events/batch": {
            "post": {
                "tags": [
                    "Events"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/events/count": {
            "post": {
                "tags": [
                    "Events"
                ],
                "operationId": "getFilteredCount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/events/filter": {
            "post": {
                "tags": [
                    "Events"
                ],
                "operationId": "getFiltered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaginatedRecordIdentityList"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/events/item/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/add/{id}": {
            "post": {
                "tags": [
                    "Exports"
                ],
                "operationId": "add",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/ExportCell"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/generate/{id}/excel": {
            "get": {
                "tags": [
                    "Exports"
                ],
                "operationId": "generateExcel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/start": {
            "post": {
                "tags": [
                    "Exports"
                ],
                "operationId": "start",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportHeader"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/exports/stream/{id}/excel/{fileName}": {
            "get": {
                "tags": [
                    "Exports"
                ],
                "operationId": "streamExcel",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateway-prober-operations/all/{id}": {
            "get": {
                "tags": [
                    "GatewayProberOperations"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateway-prober-operations/batch": {
            "post": {
                "tags": [
                    "GatewayProberOperations"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GatewayProberOperation"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateway-prober-operations/item/{id}": {
            "get": {
                "tags": [
                    "GatewayProberOperations"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GatewayProberOperation"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GatewayProberOperations"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateway-prober-operations/item/{id}/log": {
            "get": {
                "tags": [
                    "GatewayProberOperations"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateway-prober-operations/item/{id}/log/filter": {
            "post": {
                "tags": [
                    "GatewayProberOperations"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateways/all-logs/stream/{fileName}": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "getAllLogs",
                "produces": [
                    "application/zip"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InputStream"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateways/item/{gatewayId}/check-network-status": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "checkNetworkStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProberNetworkStatus"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateways/item/{gatewayId}/log": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "deleteLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderThanXMinutes",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateways/item/{gatewayId}/log/filter": {
            "post": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateways/item/{gatewayId}/lookup": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "lookup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GatewayAsset"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateways/item/{gatewayId}/start-op": {
            "post": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "startOperation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProberOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GatewayProberOperation"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/gateways/item/{gatewayId}/threads": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "operationId": "dumpThreads",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeMemInfo",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/hosts/item/{hostId}/log": {
            "get": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "deleteLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderThanXMinutes",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/hosts/item/{hostId}/log/filter": {
            "post": {
                "tags": [
                    "Hosts"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/locations/hierarchy": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "operationId": "getTopLevel",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocationHierarchy"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/locations/options/{id}/email/get": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "operationId": "getEmailOptions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeliveryOptions"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/locations/options/{id}/email/set": {
            "post": {
                "tags": [
                    "Locations"
                ],
                "operationId": "setEmailOptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeliveryOptions"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/locations/options/{id}/sms/get": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "operationId": "getSmsOptions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeliveryOptions"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/locations/options/{id}/sms/set": {
            "post": {
                "tags": [
                    "Locations"
                ],
                "operationId": "setSmsOptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeliveryOptions"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/batch": {
            "post": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MetricsDefinitionVersion"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/create": {
            "post": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/item/{baseId}/squash/{finalId}": {
            "get": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "squash",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "baseId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "finalId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/item/{id}": {
            "get": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/item/{id}/make-head": {
            "get": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "makeHead",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/item/{id}/make-release": {
            "get": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "makeRelease",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/item/{predId}/link/{succId}": {
            "get": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "link",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "predId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "succId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definition-versions/parse-import": {
            "post": {
                "tags": [
                    "MetricsDefinitionVersions"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionDetails"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definitions/batch": {
            "post": {
                "tags": [
                    "MetricsDefinitions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MetricsDefinition"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definitions/create": {
            "post": {
                "tags": [
                    "MetricsDefinitions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definitions/filter": {
            "post": {
                "tags": [
                    "MetricsDefinitions"
                ],
                "operationId": "getFiltered",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinitionFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definitions/item/{id}": {
            "get": {
                "tags": [
                    "MetricsDefinitions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MetricsDefinitions"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MetricsDefinitions"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/metrics-definitions/parse-import": {
            "post": {
                "tags": [
                    "MetricsDefinitions"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricsDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/networks/item/{networkId}/log": {
            "get": {
                "tags": [
                    "Networks"
                ],
                "operationId": "getLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "toOffset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogLine"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Networks"
                ],
                "operationId": "deleteLog",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderThanXMinutes",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/networks/item/{networkId}/log/filter": {
            "post": {
                "tags": [
                    "Networks"
                ],
                "operationId": "filterLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogEntryFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogRange"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/networks/item/{networkId}/reclassify": {
            "put": {
                "tags": [
                    "Networks"
                ],
                "operationId": "reclassify",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/all": {
            "get": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/batch": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "getBatch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Normalization"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/classification/sample/{sysId}": {
            "get": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "loadSample",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceElementNormalizationSample"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/classification/test": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "testClassification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceElementNormalizationSample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ClassificationPointOutput"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/create": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Normalization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Normalization"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/export/device/{id}": {
            "get": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "exportNormalization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceNormalizationExport"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/item/active": {
            "get": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "getActive",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/item/{id}": {
            "get": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Normalization"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/item/{id}/activate": {
            "get": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "makeActive",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Normalization"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/normalization/check/{id}": {
            "get": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "checkNormalization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceElementNormalizationProgress"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/normalization/eval": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "evaluate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceElementNormalizationSample"
                        }
                    },
                    {
                        "name": "maxSteps",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "trace",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NormalizationEvaluation"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/normalization/override/import": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "parseOverridesImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeviceElementClassificationOverridesRequest"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/normalization/start": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "startNormalization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceElementNormalizationRun"
                        }
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/normalization/test": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "testNormalization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceElementNormalizationSample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ClassificationPointOutput"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/normalizations/parse-import": {
            "post": {
                "tags": [
                    "Normalizations"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NormalizationRules"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definition-versions/batch": {
            "post": {
                "tags": [
                    "ReportDefinitionVersions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportDefinitionVersion"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definition-versions/create": {
            "post": {
                "tags": [
                    "ReportDefinitionVersions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definition-versions/item/{id}": {
            "get": {
                "tags": [
                    "ReportDefinitionVersions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definition-versions/item/{id}/make-head": {
            "get": {
                "tags": [
                    "ReportDefinitionVersions"
                ],
                "operationId": "makeHead",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definition-versions/item/{id}/make-release": {
            "get": {
                "tags": [
                    "ReportDefinitionVersions"
                ],
                "operationId": "makeRelease",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definition-versions/item/{predId}/link/{succId}": {
            "get": {
                "tags": [
                    "ReportDefinitionVersions"
                ],
                "operationId": "link",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "predId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "succId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definition-versions/parse-import": {
            "post": {
                "tags": [
                    "ReportDefinitionVersions"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionVersion"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definitions/batch": {
            "post": {
                "tags": [
                    "ReportDefinitions"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportDefinition"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definitions/create": {
            "post": {
                "tags": [
                    "ReportDefinitions"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definitions/filter": {
            "post": {
                "tags": [
                    "ReportDefinitions"
                ],
                "operationId": "getFiltered",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReportDefinitionFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definitions/item/{id}": {
            "get": {
                "tags": [
                    "ReportDefinitions"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ReportDefinitions"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ReportDefinitions"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/report-definitions/parse-import": {
            "post": {
                "tags": [
                    "ReportDefinitions"
                ],
                "operationId": "parseImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RawImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/reports/all": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/reports/batch": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Report"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/reports/create": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/reports/filter": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "operationId": "getFiltered",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReportFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/reports/item/{id}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/reports/item/{id}/retry": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "operationId": "retry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/reports/item/{id}/{filename}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "operationId": "downloadReport",
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filename",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/roles/all": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/roles/batch": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/roles/item/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/search/query": {
            "post": {
                "tags": [
                    "Search"
                ],
                "operationId": "search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchRequest"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SearchResultSet"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/subkey/list": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "listSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/subkey/remove": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "removeSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/check": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "checkValueFormat",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/get": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "getValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SystemPreference"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/list": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "listValues",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/remove": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "removeValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/system-preferences/value/set": {
            "post": {
                "tags": [
                    "SystemPreferences"
                ],
                "operationId": "setValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/units/compact": {
            "post": {
                "tags": [
                    "Units"
                ],
                "operationId": "compact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/units/convert": {
            "post": {
                "tags": [
                    "Units"
                ],
                "operationId": "convert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EngineeringUnitsConversionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EngineeringUnitsConversionResponse"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/units/describe": {
            "get": {
                "tags": [
                    "Units"
                ],
                "operationId": "describe",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineeringUnitsDescriptor"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/units/simplify": {
            "post": {
                "tags": [
                    "Units"
                ],
                "operationId": "simplify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-groups/all": {
            "get": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-groups/batch": {
            "post": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "getBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserGroup"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-groups/batch-export": {
            "get": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "batchExport",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserGroupImportExport"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-groups/batch-import": {
            "post": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "batchImport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserGroupImportExport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserGroupImportExport"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-groups/create": {
            "post": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserGroupCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-groups/item/{id}": {
            "get": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserGroups"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-messages/batch": {
            "post": {
                "tags": [
                    "UserMessages"
                ],
                "operationId": "getBatch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserMessage"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-messages/count": {
            "post": {
                "tags": [
                    "UserMessages"
                ],
                "operationId": "getFilteredCount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserMessageFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-messages/filter": {
            "post": {
                "tags": [
                    "UserMessages"
                ],
                "operationId": "getFiltered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserMessageFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-messages/item/{msgId}": {
            "get": {
                "tags": [
                    "UserMessages"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "msgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserMessage"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserMessages"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "msgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserMessages"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "msgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/subkey/list": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "listSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/subkey/remove": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "removeSubKeys",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/check": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "checkValueFormat",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/get": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "getValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserPreference"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/list": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "listValues",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/remove": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "removeValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/user-preferences/{id}/value/set": {
            "post": {
                "tags": [
                    "UserPreferences"
                ],
                "operationId": "setValue",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/all": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "getAll",
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/forgotPwd": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "forgotPassword",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailAddress",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/impersonate/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "impersonate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/item/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "operationId": "remove",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dryRun",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationResults"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/item/{id}/changePwd": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "changePassword",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "currentPassword",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    },
                    "412": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/DetailedApplicationExceptionErrorDetails"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "logout",
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/users/resetPwd": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "resetPassword",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailAddress",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/workflows/assign/{id}/{userId}": {
            "get": {
                "tags": [
                    "Workflows"
                ],
                "operationId": "assign",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/workflows/batch-history": {
            "post": {
                "tags": [
                    "Workflows"
                ],
                "operationId": "getWorkflowHistoryBatch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowHistory"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/workflows/create": {
            "post": {
                "tags": [
                    "Workflows"
                ],
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/workflows/feed": {
            "get": {
                "tags": [
                    "Workflows"
                ],
                "operationId": "getWorkflowFeed",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/workflows/fetch-history/{id}": {
            "get": {
                "tags": [
                    "Workflows"
                ],
                "operationId": "getWorkflowHistoryByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkflowHistory"
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/workflows/history/{id}": {
            "get": {
                "tags": [
                    "Workflows"
                ],
                "operationId": "listWorkflowHistoryByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        },
        "/workflows/summary": {
            "post": {
                "tags": [
                    "Workflows"
                ],
                "operationId": "getSummary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupBy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "location",
                            "manufacturer",
                            "priority",
                            "relation",
                            "rule",
                            "severity",
                            "status",
                            "type"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WorkflowFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SummaryResult"
                            }
                        },
                        "headers": {

                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AggregationNodeBinding": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "aggregationType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUM",
                        "MEAN",
                        "MIN",
                        "MAX",
                        "DELTA",
                        "AVGDELTA",
                        "INCREASE",
                        "DECREASE",
                        "FIRST",
                        "LAST"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationTypeId"
                },
                "units": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "unitsDisplay": {
                    "type": "string"
                },
                "barRange": {
                    "$ref": "#/definitions/ToggleableNumericRange"
                },
                "color": {
                    "$ref": "#/definitions/ColorConfiguration"
                }
            }
        },
        "AggregationRequest": {
            "type": "object",
            "properties": {
                "unitsFactors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "aggregationType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUM",
                        "MEAN",
                        "MIN",
                        "MAX",
                        "DELTA",
                        "AVGDELTA",
                        "INCREASE",
                        "DECREASE",
                        "FIRST",
                        "LAST"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationTypeId"
                },
                "selections": {
                    "$ref": "#/definitions/ControlPointsSelection"
                },
                "query": {
                    "$ref": "#/definitions/TagsJoinQuery"
                },
                "filterableRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilterableTimeRange"
                    }
                },
                "localTimeZoneOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "prop": {
                    "type": "string"
                },
                "maxInterpolationGap": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "AggregationResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "resultsPerRange": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            }
        },
        "AggregationTableWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "groups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ControlPointsGroup"
                            }
                        },
                        "columns": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AggregationNodeBinding"
                            }
                        },
                        "graph": {
                            "$ref": "#/definitions/AssetGraph"
                        },
                        "filterableRanges": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FilterableTimeRange"
                            }
                        },
                        "controlPointDisplayType": {
                            "type": "string",
                            "enum": [
                                "NameOnly",
                                "LocationOnly",
                                "FullLocationOnly",
                                "EquipmentOnly",
                                "NameLocation",
                                "LocationName",
                                "NameFullLocation",
                                "FullLocationName",
                                "NameEquipment",
                                "EquipmentName"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.ControlPointDisplayType"
                        },
                        "visualizationMode": {
                            "type": "string",
                            "enum": [
                                "HEATMAP",
                                "LINE",
                                "TABLE",
                                "TABLE_WITH_BAR",
                                "BUBBLEMAP",
                                "TREEMAP",
                                "SUNBURST",
                                "PIEBURST",
                                "DONUT",
                                "PIE"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.HierarchicalVisualizationType"
                        },
                        "isolateGroupRanges": {
                            "type": "boolean"
                        },
                        "visualizationLegend": {
                            "type": "boolean"
                        },
                        "visualizationRanges": {
                            "type": "boolean"
                        },
                        "clickBehavior": {
                            "$ref": "#/definitions/InteractionBehavior"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AggregationTableWidgetConfiguration"
        },
        "AggregationTrendWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "groups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ControlPointsGroup"
                            }
                        },
                        "filterableRange": {
                            "$ref": "#/definitions/FilterableTimeRange"
                        },
                        "granularity": {
                            "type": "string",
                            "enum": [
                                "None",
                                "Hour",
                                "Day",
                                "Week",
                                "Month",
                                "Quarter",
                                "Year"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationGranularity"
                        },
                        "visualizationMode": {
                            "type": "string",
                            "enum": [
                                "Line",
                                "Bar"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationTrendVisualizationMode"
                        },
                        "showY": {
                            "type": "boolean"
                        },
                        "showLegend": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AggregationTrendWidgetConfiguration"
        },
        "AggregationWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPointGroup": {
                            "$ref": "#/definitions/ControlPointsGroup"
                        },
                        "filterableRange": {
                            "$ref": "#/definitions/FilterableTimeRange"
                        },
                        "hideRange": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AggregationWidgetConfiguration"
        },
        "Alert": {
            "allOf": [
                {
                    "$ref": "#/definitions/Event"
                },
                {
                    "type": "object",
                    "properties": {
                        "alertDefinitionVersion": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "active",
                                "muted",
                                "resolved",
                                "closed"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "ALARM",
                                "COMMUNICATION_PROBLEM",
                                "DEVICE_FAILURE",
                                "END_OF_LIFE",
                                "INFORMATIONAL",
                                "OPERATOR_SUMMARY",
                                "RECALL",
                                "THRESHOLD_EXCEEDED",
                                "WARNING",
                                "WARRANTY"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                        },
                        "severity": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "Alert",
            "x-optio3-external-record-id": "Alert"
        },
        "AlertDefinition": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "purpose": {
                    "type": "string",
                    "enum": [
                        "Definition",
                        "Library"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertDefinitionPurpose"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "headVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "releaseVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "AlertDefinition"
        },
        "AlertDefinitionDetails": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EngineTab"
                    }
                },
                "temporary": {
                    "type": "boolean"
                },
                "graph": {
                    "$ref": "#/definitions/AssetGraph"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AlertDefinitionDetailsForUserProgram",
                    "subtype_model": "AlertDefinitionDetailsForUserProgram"
                }
            ]
        },
        "AlertDefinitionDetailsForUserProgram": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertDefinitionDetails"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertDefinitionDetailsForUserProgram"
        },
        "AlertDefinitionFilterRequest": {
            "type": "object",
            "properties": {
                "purposes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Definition",
                            "Library"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertDefinitionPurpose"
                    }
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "AlertDefinitionVersion": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "definition": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "details": {
                    "$ref": "#/definitions/AlertDefinitionDetails"
                },
                "predecessor": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "successors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "AlertDefinitionVersion"
        },
        "AlertEngineExecutionStep": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStep"
        },
        "AlertEngineExecutionStepCommitAction": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "details": {
                            "$ref": "#/definitions/AlertEngineValueAction"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStepCommitAction"
        },
        "AlertEngineExecutionStepCreateAlert": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoint": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "level": {
                            "type": "string",
                            "enum": [
                                "failure",
                                "info",
                                "recall",
                                "success",
                                "certification"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertEventLevel"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "ALARM",
                                "COMMUNICATION_PROBLEM",
                                "DEVICE_FAILURE",
                                "END_OF_LIFE",
                                "INFORMATIONAL",
                                "OPERATOR_SUMMARY",
                                "RECALL",
                                "THRESHOLD_EXCEEDED",
                                "WARNING",
                                "WARRANTY"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                        },
                        "severity": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStepCreateAlert"
        },
        "AlertEngineExecutionStepSetAlertDescription": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "description": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStepSetAlertDescription"
        },
        "AlertEngineExecutionStepSetAlertSeverity": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "severity": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStepSetAlertSeverity"
        },
        "AlertEngineExecutionStepSetAlertStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "active",
                                "muted",
                                "resolved",
                                "closed"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                        },
                        "statusText": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStepSetAlertStatus"
        },
        "AlertEngineExecutionStepSetAlertText": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "text": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStepSetAlertText"
        },
        "AlertEngineExecutionStepSetControlPointValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoint": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "property": {
                            "type": "string",
                            "enum": [
                                "PresentValue",
                                "OutOfService",
                                "InAlarm"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.engine.alerts.block.AlertEngineSampleProperty"
                        },
                        "value": {
                            "$ref": "#/definitions/EngineValuePrimitive"
                        },
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExecutionStepSetControlPointValue"
        },
        "AlertEngineExecutionSteps": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertEngineExecutionStep"
                    }
                },
                "logEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LogLine"
                    }
                }
            }
        },
        "AlertEngineExecutionStepsOverRange": {
            "type": "object",
            "properties": {
                "evaluationResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertEngineExecutionSteps"
                    }
                }
            }
        },
        "AlertEngineExpressionAction": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "deliveryOptions": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ]
        },
        "AlertEngineExpressionActionNewEmail": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExpressionAction"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExpressionActionNewEmail"
        },
        "AlertEngineExpressionActionNewSms": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExpressionAction"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExpressionActionNewSms"
        },
        "AlertEngineExpressionActionNewTicket": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineExpressionAction"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExpressionActionNewTicket"
        },
        "AlertEngineExpressionBinaryControlPointSample": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExpressionBinaryControlPointSample"
        },
        "AlertEngineExpressionBinaryControlPointSampleAggregate": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "aggregate": {
                            "type": "string",
                            "enum": [
                                "min",
                                "max",
                                "average",
                                "delta",
                                "increment",
                                "decrement"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSampleAggregate"
                        },
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExpressionBinaryControlPointSampleAggregate"
        },
        "AlertEngineExpressionBinaryControlPointSampleRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineExpressionBinaryControlPointSampleRange"
        },
        "AlertEngineInputParameterControlPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineInputParameterControlPoint"
        },
        "AlertEngineInputParameterControlPointsSelection": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/ControlPointsSelection"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineInputParameterControlPointsSelection"
        },
        "AlertEngineInputParameterDeliveryOptions": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/DeliveryOptions"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineInputParameterDeliveryOptions"
        },
        "AlertEngineLiteralAlertSeverity": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralAlertSeverity"
        },
        "AlertEngineLiteralAlertStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "active",
                                "muted",
                                "resolved",
                                "closed"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralAlertStatus"
        },
        "AlertEngineLiteralAssetQueryEquipmentClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipmentClass": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralAssetQueryEquipmentClass"
        },
        "AlertEngineLiteralAssetQueryPointClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "pointClass": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralAssetQueryPointClass"
        },
        "AlertEngineLiteralAssetQueryTag": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "tag": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralAssetQueryTag"
        },
        "AlertEngineLiteralControlPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralControlPoint"
        },
        "AlertEngineLiteralControlPointsSelection": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/ControlPointsSelection"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralControlPointsSelection"
        },
        "AlertEngineLiteralDeliveryOptions": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/DeliveryOptions"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineLiteralDeliveryOptions"
        },
        "AlertEngineOperatorBinaryAssetQueryAnd": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorBinaryAssetQueryAnd"
        },
        "AlertEngineOperatorBinaryAssetQueryOr": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorBinaryAssetQueryOr"
        },
        "AlertEngineOperatorBinaryAssetQueryRelation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "relation": {
                            "type": "string",
                            "enum": [
                                "structural",
                                "controls"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                        },
                        "fromChild": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorBinaryAssetQueryRelation"
        },
        "AlertEngineOperatorBinaryAssetQueryRelationSingle": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "relation": {
                            "type": "string",
                            "enum": [
                                "structural",
                                "controls"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                        },
                        "fromChild": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorBinaryAssetQueryRelationSingle"
        },
        "AlertEngineOperatorBinaryForDeliveryOptions": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Add",
                                "Subtract",
                                "Intersect"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineSetOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorBinaryForDeliveryOptions"
        },
        "AlertEngineOperatorUnaryAsControlPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAsControlPoint"
        },
        "AlertEngineOperatorUnaryAsDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAsDevice"
        },
        "AlertEngineOperatorUnaryAsGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAsGroup"
        },
        "AlertEngineOperatorUnaryAssetGetLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetGetLocation"
        },
        "AlertEngineOperatorUnaryAssetGetName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetGetName"
        },
        "AlertEngineOperatorUnaryAssetGraphNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetGraphNode"
        },
        "AlertEngineOperatorUnaryAssetGraphNodes": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetGraphNodes"
        },
        "AlertEngineOperatorUnaryAssetQueryExec": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetQueryExec"
        },
        "AlertEngineOperatorUnaryAssetQueryNot": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetQueryNot"
        },
        "AlertEngineOperatorUnaryAssetQueryRelation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "relation": {
                            "type": "string",
                            "enum": [
                                "structural",
                                "controls"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                        },
                        "fromChild": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetQueryRelation"
        },
        "AlertEngineOperatorUnaryAssetQueryRelationSingle": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "relation": {
                            "type": "string",
                            "enum": [
                                "structural",
                                "controls"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                        },
                        "fromChild": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryAssetQueryRelationSingle"
        },
        "AlertEngineOperatorUnaryControlPointCoordinates": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryControlPointCoordinates"
        },
        "AlertEngineOperatorUnaryControlPointLastSample": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryControlPointLastSample"
        },
        "AlertEngineOperatorUnaryControlPointMetadataNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryControlPointMetadataNumber"
        },
        "AlertEngineOperatorUnaryControlPointMetadataString": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryControlPointMetadataString"
        },
        "AlertEngineOperatorUnaryControlPointMetadataTimestamp": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryControlPointMetadataTimestamp"
        },
        "AlertEngineOperatorUnaryControlPointNewSamples": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryControlPointNewSamples"
        },
        "AlertEngineOperatorUnaryCoordinatesNewSamples": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryCoordinatesNewSamples"
        },
        "AlertEngineOperatorUnaryCreateAlert": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "ALARM",
                                "COMMUNICATION_PROBLEM",
                                "DEVICE_FAILURE",
                                "END_OF_LIFE",
                                "INFORMATIONAL",
                                "OPERATOR_SUMMARY",
                                "RECALL",
                                "THRESHOLD_EXCEEDED",
                                "WARNING",
                                "WARRANTY"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                        },
                        "severity": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryCreateAlert"
        },
        "AlertEngineOperatorUnaryGetAlert": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "ALARM",
                                "COMMUNICATION_PROBLEM",
                                "DEVICE_FAILURE",
                                "END_OF_LIFE",
                                "INFORMATIONAL",
                                "OPERATOR_SUMMARY",
                                "RECALL",
                                "THRESHOLD_EXCEEDED",
                                "WARNING",
                                "WARRANTY"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryGetAlert"
        },
        "AlertEngineOperatorUnaryGetAlertSeverity": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryGetAlertSeverity"
        },
        "AlertEngineOperatorUnaryGetAlertStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryGetAlertStatus"
        },
        "AlertEngineOperatorUnaryGetEmailDeliveryOptionsFromLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryGetEmailDeliveryOptionsFromLocation"
        },
        "AlertEngineOperatorUnaryGetProperty": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "property": {
                            "type": "string",
                            "enum": [
                                "PresentValue",
                                "OutOfService",
                                "InAlarm"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.engine.alerts.block.AlertEngineSampleProperty"
                        },
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryGetProperty"
        },
        "AlertEngineOperatorUnaryGetSmsDeliveryOptionsFromLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryGetSmsDeliveryOptionsFromLocation"
        },
        "AlertEngineOperatorUnaryGetTimeZoneFromLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryGetTimeZoneFromLocation"
        },
        "AlertEngineOperatorUnaryHasAlertChanged": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryHasAlertChanged"
        },
        "AlertEngineOperatorUnaryLocationGetName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryLocationGetName"
        },
        "AlertEngineOperatorUnarySampleGetProperty": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "property": {
                            "type": "string",
                            "enum": [
                                "PresentValue",
                                "OutOfService",
                                "InAlarm"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.engine.alerts.block.AlertEngineSampleProperty"
                        },
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnarySampleGetProperty"
        },
        "AlertEngineOperatorUnarySampleGetTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnarySampleGetTime"
        },
        "AlertEngineOperatorUnaryTravelEntryGetTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryTravelEntryGetTime"
        },
        "AlertEngineOperatorUnaryTravelEntryInsideFence": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineOperatorUnaryTravelEntryInsideFence"
        },
        "AlertEngineStatementAddEmailLine": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "email": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "text": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementAddEmailLine"
        },
        "AlertEngineStatementAddSmsLine": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "sms": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "text": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementAddSmsLine"
        },
        "AlertEngineStatementCommitAction": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "action": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementCommitAction"
        },
        "AlertEngineStatementSetAlertDescription": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "description": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetAlertDescription"
        },
        "AlertEngineStatementSetAlertSeverity": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "severity": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetAlertSeverity"
        },
        "AlertEngineStatementSetAlertStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "status": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetAlertStatus"
        },
        "AlertEngineStatementSetAlertText": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "text": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetAlertText"
        },
        "AlertEngineStatementSetAlertTimestamp": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "sample": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetAlertTimestamp"
        },
        "AlertEngineStatementSetControlPointMetadata": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoint": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetControlPointMetadata"
        },
        "AlertEngineStatementSetEmailSubject": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "email": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "subject": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetEmailSubject"
        },
        "AlertEngineStatementSetProperty": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "property": {
                            "type": "string",
                            "enum": [
                                "PresentValue",
                                "OutOfService",
                                "InAlarm"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.engine.alerts.block.AlertEngineSampleProperty"
                        },
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        },
                        "controlPoint": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetProperty"
        },
        "AlertEngineStatementSetSmsSender": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromAlerts"
                },
                {
                    "type": "object",
                    "properties": {
                        "sms": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "sender": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineStatementSetSmsSender"
        },
        "AlertEngineValueAbstractAssets": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValueListConcrete"
                },
                {
                    "type": "object",
                    "properties": {
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertEngineValueAsset"
                            }
                        }
                    }
                }
            ]
        },
        "AlertEngineValueAction": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/AlertEngineValueAlert"
                        },
                        "deliveryOptions": {
                            "$ref": "#/definitions/AlertEngineValueDeliveryOptions"
                        }
                    }
                }
            ]
        },
        "AlertEngineValueAlert": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoint": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "level": {
                            "type": "string",
                            "enum": [
                                "failure",
                                "info",
                                "recall",
                                "success",
                                "certification"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertEventLevel"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "ALARM",
                                "COMMUNICATION_PROBLEM",
                                "DEVICE_FAILURE",
                                "END_OF_LIFE",
                                "INFORMATIONAL",
                                "OPERATOR_SUMMARY",
                                "RECALL",
                                "THRESHOLD_EXCEEDED",
                                "WARNING",
                                "WARRANTY"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                        },
                        "severity": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "active",
                                "muted",
                                "resolved",
                                "closed"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                        },
                        "statusText": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "shouldNotify": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueAlert"
        },
        "AlertEngineValueAlertSeverity": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueAlertSeverity"
        },
        "AlertEngineValueAlertStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "active",
                                "muted",
                                "resolved",
                                "closed"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueAlertStatus"
        },
        "AlertEngineValueAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueAsset"
        },
        "AlertEngineValueAssetQueryCondition": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "condition": {
                            "$ref": "#/definitions/TagsCondition"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueAssetQueryCondition"
        },
        "AlertEngineValueAssets": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAbstractAssets"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueAssets"
        },
        "AlertEngineValueControlPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAsset"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueControlPoint"
        },
        "AlertEngineValueControlPointCoordinates": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "longitude": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "latitude": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueControlPointCoordinates"
        },
        "AlertEngineValueControlPoints": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAbstractAssets"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueControlPoints"
        },
        "AlertEngineValueDeliveryOptions": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "resolvedUsers": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueDeliveryOptions"
        },
        "AlertEngineValueDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAsset"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueDevice"
        },
        "AlertEngineValueEmail": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAction"
                },
                {
                    "type": "object",
                    "properties": {
                        "subject": {
                            "type": "string"
                        },
                        "body": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueEmail"
        },
        "AlertEngineValueLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "record": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueLocation"
        },
        "AlertEngineValueLogicalAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAsset"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueLogicalAsset"
        },
        "AlertEngineValueSample": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoint": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueSample"
        },
        "AlertEngineValueSamples": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValueList"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoint": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "timestamps": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueSamples"
        },
        "AlertEngineValueSms": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAction"
                },
                {
                    "type": "object",
                    "properties": {
                        "sender": {
                            "type": "string"
                        },
                        "body": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueSms"
        },
        "AlertEngineValueTicket": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertEngineValueAction"
                },
                {
                    "type": "object",
                    "properties": {
                        "subject": {
                            "type": "string"
                        },
                        "body": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueTicket"
        },
        "AlertEngineValueTravelEntry": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "timestamp": {
                            "type": "number",
                            "format": "double"
                        },
                        "longitude": {
                            "type": "number",
                            "format": "double"
                        },
                        "latitude": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueTravelEntry"
        },
        "AlertEngineValueTravelLog": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValueListConcrete"
                },
                {
                    "type": "object",
                    "properties": {
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertEngineValueTravelEntry"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertEngineValueTravelLog"
        },
        "AlertFeedWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertWidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "timeRange": {
                            "$ref": "#/definitions/RangeSelection"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertFeedWidgetConfiguration"
        },
        "AlertFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "alertStatusIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "muted",
                                    "resolved",
                                    "closed"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                            }
                        },
                        "alertTypeIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALARM",
                                    "COMMUNICATION_PROBLEM",
                                    "DEVICE_FAILURE",
                                    "END_OF_LIFE",
                                    "INFORMATIONAL",
                                    "OPERATOR_SUMMARY",
                                    "RECALL",
                                    "THRESHOLD_EXCEEDED",
                                    "WARNING",
                                    "WARRANTY"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                            }
                        },
                        "alertSeverityIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "CRITICAL",
                                    "SIGNIFICANT",
                                    "NORMAL",
                                    "LOW"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                            }
                        },
                        "alertRules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertFilterRequest"
        },
        "AlertFilterResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32"
                },
                "nextOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SummaryResult"
                    }
                }
            }
        },
        "AlertHistory": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "alert": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "failure",
                        "info",
                        "recall",
                        "success",
                        "certification"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertEventLevel"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "created",
                        "updatedWithNotes",
                        "reassigned",
                        "muted",
                        "unmuted",
                        "resolved",
                        "closed",
                        "reopened"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertEventType"
                },
                "text": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "AlertHistory"
        },
        "AlertMapOptions": {
            "type": "object",
            "properties": {
                "zoom": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AlertMapPinConfig": {
            "type": "object",
            "properties": {
                "pinIcon": {
                    "type": "string",
                    "enum": [
                        "Pin",
                        "Circle",
                        "Dot"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.MapPinIcon"
                },
                "pinSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "colorMode": {
                    "type": "string",
                    "enum": [
                        "Dynamic",
                        "Fixed"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AlertMapPinColorMode"
                },
                "dataSource": {
                    "type": "string",
                    "enum": [
                        "AlertCount",
                        "Severity"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AlertMapPinDataSource"
                },
                "staticColor": {
                    "type": "string"
                },
                "countColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColorSegment"
                    }
                },
                "severityColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertMapSeverityColor"
                    }
                }
            }
        },
        "AlertMapSeverityColor": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string",
                    "enum": [
                        "CRITICAL",
                        "SIGNIFICANT",
                        "NORMAL",
                        "LOW"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                },
                "color": {
                    "type": "string"
                }
            }
        },
        "AlertMapWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertWidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "center": {
                            "type": "string"
                        },
                        "options": {
                            "$ref": "#/definitions/AlertMapOptions"
                        },
                        "clickBehavior": {
                            "$ref": "#/definitions/InteractionBehavior"
                        },
                        "pin": {
                            "$ref": "#/definitions/AlertMapPinConfig"
                        },
                        "rollupType": {
                            "type": "string",
                            "enum": [
                                "ADMITTING",
                                "APARTMENT",
                                "ATRIUM",
                                "AUDITORIUM",
                                "BACKOFFICE",
                                "BALCONY",
                                "BAR_ROOM",
                                "BATHROOM",
                                "BEDROOM",
                                "BREAK_ROOM",
                                "BUILDING",
                                "CABLE_ROOM",
                                "CAFETERIA_ROOM",
                                "CAMPUS",
                                "CINEMA",
                                "CLASSROOM",
                                "CLEANING_ROOM",
                                "CLIMATE_CONTROL_ROOM",
                                "CLOAK_ROOM",
                                "CONFERENCE_ROOM",
                                "CONVERSATION_ROOM",
                                "COOKING_ROOM",
                                "COPYING_ROOM",
                                "COPY_ROOM",
                                "DATAS_ERVER_ROOM",
                                "DELIVERY_ROOM",
                                "DINING_ROOM",
                                "DISTRIBUTION_CENTER",
                                "DRESSING_ROOM",
                                "EDUCATIONAL_ROOM",
                                "ELECTRICAL_ROOM",
                                "ELEVATOR",
                                "ELEVATOR_ROOM",
                                "ELEVATOR_SHAFT",
                                "ENTRANCE",
                                "EXERCISE_ROOM",
                                "EXHIBITION_ROOM",
                                "FACADE",
                                "FACTORY",
                                "FITTING_ROOM",
                                "FLOOR",
                                "FOOD_HANDLING_ROOM",
                                "FRONT_DESK",
                                "GARAGE",
                                "GROUP_ROOM",
                                "HALLWAY",
                                "HOME",
                                "HOSPITAL",
                                "ICU",
                                "INPATIENT_SERVICES",
                                "KITCHEN",
                                "LABORATORY",
                                "LAB_SERVICES",
                                "LAND",
                                "LAUNDRY_ROOM",
                                "LEVEL",
                                "LIBRARY",
                                "LIVING_ROOM",
                                "LOADING_RECEIVING_ROOM",
                                "LOBBY",
                                "LOCKER_ROOM",
                                "LOUNGE",
                                "MEDITATION_ROOM",
                                "MORGUE",
                                "MOTHERS_ROOM",
                                "MULTI_PURPOSE_ROOM",
                                "NURSERY",
                                "NURSING_FACILITY",
                                "OFFICE",
                                "OFFICE_ROOM",
                                "OPERATING_ROOM",
                                "OUTPATIENT_SERVICES",
                                "PANTRY",
                                "PARKING",
                                "PERSONAL_HYGIENE",
                                "PHARMACY",
                                "RADIOLOGY",
                                "RECEPTION",
                                "RECORDING_ROOM",
                                "RECOVERY_ROOM",
                                "RECREATIONAL_ROOM",
                                "REGION",
                                "REGIONAL_CENTER",
                                "RESTROOM",
                                "RESTING_ROOM",
                                "RETAIL_ROOM",
                                "ROOF_INNER",
                                "ROOF_OUTER",
                                "ROOF_TOP",
                                "ROOM",
                                "SCHOOL",
                                "SECTION",
                                "SECURITY_ROOM",
                                "SERVER_ROOM",
                                "SERVICE_SHAFT",
                                "SHELTER",
                                "SHIP",
                                "SHOPPING_MALL",
                                "SLAB",
                                "SMALL_STUDY_ROOM",
                                "SPRINKLER_ROOM",
                                "STADIUM",
                                "STAFF_ROOM",
                                "STAIRWELL",
                                "STAIRS",
                                "STORAGE",
                                "STORAGE_ROOM",
                                "SUB_BUILDING",
                                "SUPPLY_ROOM",
                                "TELECOMMUNICATION_ROOM",
                                "TENANT_UNIT",
                                "TERRACE",
                                "THEATER",
                                "THERAPY",
                                "TRAILER",
                                "TREATMENT_ROOM",
                                "TREATMENT_WAITING_ROOM",
                                "TRUCK",
                                "UTILITIES_ROOM",
                                "WARD",
                                "WASTE_MANAGEMENT_ROOM",
                                "WORKSHOP",
                                "ZONE",
                                "OTHER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertMapWidgetConfiguration"
        },
        "AlertSummaryWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertWidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "AlertSummaryWidgetConfiguration"
        },
        "AlertTableWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "filterableRanges": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FilterableTimeRange"
                            }
                        },
                        "groupBy": {
                            "type": "string",
                            "enum": [
                                "location",
                                "manufacturer",
                                "priority",
                                "relation",
                                "rule",
                                "severity",
                                "status",
                                "type"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.SummaryFlavor"
                        },
                        "rollupType": {
                            "type": "string",
                            "enum": [
                                "ADMITTING",
                                "APARTMENT",
                                "ATRIUM",
                                "AUDITORIUM",
                                "BACKOFFICE",
                                "BALCONY",
                                "BAR_ROOM",
                                "BATHROOM",
                                "BEDROOM",
                                "BREAK_ROOM",
                                "BUILDING",
                                "CABLE_ROOM",
                                "CAFETERIA_ROOM",
                                "CAMPUS",
                                "CINEMA",
                                "CLASSROOM",
                                "CLEANING_ROOM",
                                "CLIMATE_CONTROL_ROOM",
                                "CLOAK_ROOM",
                                "CONFERENCE_ROOM",
                                "CONVERSATION_ROOM",
                                "COOKING_ROOM",
                                "COPYING_ROOM",
                                "COPY_ROOM",
                                "DATAS_ERVER_ROOM",
                                "DELIVERY_ROOM",
                                "DINING_ROOM",
                                "DISTRIBUTION_CENTER",
                                "DRESSING_ROOM",
                                "EDUCATIONAL_ROOM",
                                "ELECTRICAL_ROOM",
                                "ELEVATOR",
                                "ELEVATOR_ROOM",
                                "ELEVATOR_SHAFT",
                                "ENTRANCE",
                                "EXERCISE_ROOM",
                                "EXHIBITION_ROOM",
                                "FACADE",
                                "FACTORY",
                                "FITTING_ROOM",
                                "FLOOR",
                                "FOOD_HANDLING_ROOM",
                                "FRONT_DESK",
                                "GARAGE",
                                "GROUP_ROOM",
                                "HALLWAY",
                                "HOME",
                                "HOSPITAL",
                                "ICU",
                                "INPATIENT_SERVICES",
                                "KITCHEN",
                                "LABORATORY",
                                "LAB_SERVICES",
                                "LAND",
                                "LAUNDRY_ROOM",
                                "LEVEL",
                                "LIBRARY",
                                "LIVING_ROOM",
                                "LOADING_RECEIVING_ROOM",
                                "LOBBY",
                                "LOCKER_ROOM",
                                "LOUNGE",
                                "MEDITATION_ROOM",
                                "MORGUE",
                                "MOTHERS_ROOM",
                                "MULTI_PURPOSE_ROOM",
                                "NURSERY",
                                "NURSING_FACILITY",
                                "OFFICE",
                                "OFFICE_ROOM",
                                "OPERATING_ROOM",
                                "OUTPATIENT_SERVICES",
                                "PANTRY",
                                "PARKING",
                                "PERSONAL_HYGIENE",
                                "PHARMACY",
                                "RADIOLOGY",
                                "RECEPTION",
                                "RECORDING_ROOM",
                                "RECOVERY_ROOM",
                                "RECREATIONAL_ROOM",
                                "REGION",
                                "REGIONAL_CENTER",
                                "RESTROOM",
                                "RESTING_ROOM",
                                "RETAIL_ROOM",
                                "ROOF_INNER",
                                "ROOF_OUTER",
                                "ROOF_TOP",
                                "ROOM",
                                "SCHOOL",
                                "SECTION",
                                "SECURITY_ROOM",
                                "SERVER_ROOM",
                                "SERVICE_SHAFT",
                                "SHELTER",
                                "SHIP",
                                "SHOPPING_MALL",
                                "SLAB",
                                "SMALL_STUDY_ROOM",
                                "SPRINKLER_ROOM",
                                "STADIUM",
                                "STAFF_ROOM",
                                "STAIRWELL",
                                "STAIRS",
                                "STORAGE",
                                "STORAGE_ROOM",
                                "SUB_BUILDING",
                                "SUPPLY_ROOM",
                                "TELECOMMUNICATION_ROOM",
                                "TENANT_UNIT",
                                "TERRACE",
                                "THEATER",
                                "THERAPY",
                                "TRAILER",
                                "TREATMENT_ROOM",
                                "TREATMENT_WAITING_ROOM",
                                "TRUCK",
                                "UTILITIES_ROOM",
                                "WARD",
                                "WASTE_MANAGEMENT_ROOM",
                                "WORKSHOP",
                                "ZONE",
                                "OTHER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                        },
                        "alertStatusIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "muted",
                                    "resolved",
                                    "closed"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                            }
                        },
                        "alertTypeIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALARM",
                                    "COMMUNICATION_PROBLEM",
                                    "DEVICE_FAILURE",
                                    "END_OF_LIFE",
                                    "INFORMATIONAL",
                                    "OPERATOR_SUMMARY",
                                    "RECALL",
                                    "THRESHOLD_EXCEEDED",
                                    "WARNING",
                                    "WARRANTY"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                            }
                        },
                        "alertSeverityIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "CRITICAL",
                                    "SIGNIFICANT",
                                    "NORMAL",
                                    "LOW"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                            }
                        },
                        "severityColors": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertMapSeverityColor"
                            }
                        },
                        "alertRules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertTableWidgetConfiguration"
        },
        "AlertTestProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "end": {
                    "type": "string",
                    "format": "date-time"
                },
                "current": {
                    "type": "string",
                    "format": "date-time"
                },
                "results": {
                    "$ref": "#/definitions/AlertEngineExecutionStepsOverRange"
                },
                "logEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LogLine"
                    }
                }
            }
        },
        "AlertTrendWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/AlertWidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "frequency": {
                            "type": "string",
                            "enum": [
                                "Weekly",
                                "Monthly",
                                "Quarterly"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AlertTrendFrequency"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AlertTrendWidgetConfiguration"
        },
        "AlertWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "alertTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALARM",
                                    "COMMUNICATION_PROBLEM",
                                    "DEVICE_FAILURE",
                                    "END_OF_LIFE",
                                    "INFORMATIONAL",
                                    "OPERATOR_SUMMARY",
                                    "RECALL",
                                    "THRESHOLD_EXCEEDED",
                                    "WARNING",
                                    "WARRANTY"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                            }
                        }
                    }
                }
            ]
        },
        "AlertsReportProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "totalAlerts": {
                    "type": "integer",
                    "format": "int32"
                },
                "alertsProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "generatingFile": {
                    "type": "boolean"
                }
            }
        },
        "Asset": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "physicalName": {
                    "type": "string"
                },
                "logicalName": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "provisioned",
                        "offline",
                        "passive",
                        "operational",
                        "maintenance",
                        "retired"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetState"
                },
                "assetId": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "customerNotes": {
                    "type": "string"
                },
                "lastCheckedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "hidden": {
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "pointClassId": {
                    "type": "string"
                },
                "equipmentClassId": {
                    "type": "string"
                },
                "azureDigitalTwinModel": {
                    "type": "string"
                },
                "isEquipment": {
                    "type": "boolean"
                },
                "classificationTags": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "manualTags": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "parentAsset": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "identityDescriptor": {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "BACnetDevice",
                    "subtype_model": "BACnetDevice"
                },
                {
                    "subtype_name": "Device",
                    "subtype_model": "Device"
                },
                {
                    "subtype_name": "DeviceElement",
                    "subtype_model": "DeviceElement"
                },
                {
                    "subtype_name": "GatewayAsset",
                    "subtype_model": "GatewayAsset"
                },
                {
                    "subtype_name": "HostAsset",
                    "subtype_model": "HostAsset"
                },
                {
                    "subtype_name": "IpnDevice",
                    "subtype_model": "IpnDevice"
                },
                {
                    "subtype_name": "Location",
                    "subtype_model": "Location"
                },
                {
                    "subtype_name": "LogicalAsset",
                    "subtype_model": "LogicalAsset"
                },
                {
                    "subtype_name": "MetricsDeviceElement",
                    "subtype_model": "MetricsDeviceElement"
                },
                {
                    "subtype_name": "NetworkAsset",
                    "subtype_model": "NetworkAsset"
                }
            ],
            "x-optio3-external-record-id": "Asset"
        },
        "AssetFilterRequest": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "startOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxResults": {
                    "type": "integer",
                    "format": "int32"
                },
                "locationIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locationInclusive": {
                    "type": "boolean"
                },
                "locationMissing": {
                    "type": "boolean"
                },
                "sysIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parentIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parentRelations": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "structural",
                            "controls"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                    }
                },
                "parentTagsQuery": {
                    "$ref": "#/definitions/TagsCondition"
                },
                "likeFilter": {
                    "type": "string"
                },
                "childrenIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "childrenRelations": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "structural",
                            "controls"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                    }
                },
                "stateIDs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "provisioned",
                            "offline",
                            "passive",
                            "operational",
                            "maintenance",
                            "retired"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetState"
                    }
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                },
                "discoveryRangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "discoveryRangeEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "hasNoMetadata": {
                    "type": "boolean"
                },
                "hasMetadata": {
                    "type": "boolean"
                },
                "tagsQuery": {
                    "$ref": "#/definitions/TagsCondition"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "isNotHidden": {
                    "type": "boolean"
                }
            },
            "x-optio3-type-name": "AssetFilterRequest",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "DeviceElementFilterRequest",
                    "subtype_model": "DeviceElementFilterRequest"
                },
                {
                    "subtype_name": "DeviceFilterRequest",
                    "subtype_model": "DeviceFilterRequest"
                },
                {
                    "subtype_name": "GatewayFilterRequest",
                    "subtype_model": "GatewayFilterRequest"
                },
                {
                    "subtype_name": "HostFilterRequest",
                    "subtype_model": "HostFilterRequest"
                },
                {
                    "subtype_name": "LocationFilterRequest",
                    "subtype_model": "LocationFilterRequest"
                },
                {
                    "subtype_name": "NetworkFilterRequest",
                    "subtype_model": "NetworkFilterRequest"
                }
            ]
        },
        "AssetFilterResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32"
                },
                "nextOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "AssetGraph": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetGraphNode"
                    }
                },
                "transforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetGraphTransform"
                    }
                }
            }
        },
        "AssetGraphBinding": {
            "type": "object",
            "properties": {
                "graphId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "selectorId": {
                    "type": "string"
                }
            }
        },
        "AssetGraphContext": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "graphId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AssetGraphContextAsset",
                    "subtype_model": "AssetGraphContextAsset"
                },
                {
                    "subtype_name": "AssetGraphContextAssets",
                    "subtype_model": "AssetGraphContextAssets"
                },
                {
                    "subtype_name": "AssetGraphContextLocation",
                    "subtype_model": "AssetGraphContextLocation"
                },
                {
                    "subtype_name": "AssetGraphContextLocations",
                    "subtype_model": "AssetGraphContextLocations"
                }
            ]
        },
        "AssetGraphContextAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetGraphContext"
                },
                {
                    "type": "object",
                    "properties": {
                        "sysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AssetGraphContextAsset"
        },
        "AssetGraphContextAssets": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetGraphContext"
                },
                {
                    "type": "object",
                    "properties": {
                        "sysIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "selectAll": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AssetGraphContextAssets"
        },
        "AssetGraphContextLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetGraphContext"
                },
                {
                    "type": "object",
                    "properties": {
                        "locationSysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AssetGraphContextLocation"
        },
        "AssetGraphContextLocations": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetGraphContext"
                },
                {
                    "type": "object",
                    "properties": {
                        "locationSysIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AssetGraphContextLocations"
        },
        "AssetGraphNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "optional": {
                    "type": "boolean"
                },
                "allowMultiple": {
                    "type": "boolean"
                },
                "condition": {
                    "$ref": "#/definitions/TagsCondition"
                }
            }
        },
        "AssetGraphRequest": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "startOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxResults": {
                    "type": "integer",
                    "format": "int32"
                },
                "graph": {
                    "$ref": "#/definitions/AssetGraph"
                },
                "context": {
                    "$ref": "#/definitions/AssetGraphContext"
                }
            }
        },
        "AssetGraphResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32"
                },
                "nextOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetGraphResponseResolved"
                    }
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "enum": [
                            "RequiredNodeNoAsset",
                            "MultipleMatches"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.graph.AssetGraphResponseError"
                    }
                }
            }
        },
        "AssetGraphResponseResolved": {
            "type": "object",
            "properties": {
                "tuple": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "AssetGraphSelectorWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "selectorId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AssetGraphSelectorWidgetConfiguration"
        },
        "AssetGraphTransform": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "inputId": {
                    "type": "string"
                },
                "outputId": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AssetGraphTransformRelationship",
                    "subtype_model": "AssetGraphTransformRelationship"
                }
            ]
        },
        "AssetGraphTransformRelationship": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetGraphTransform"
                },
                {
                    "type": "object",
                    "properties": {
                        "relationship": {
                            "type": "string",
                            "enum": [
                                "structural",
                                "controls"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AssetGraphTransformRelationship"
        },
        "AssetRelationshipRequest": {
            "type": "object",
            "properties": {
                "assetId": {
                    "type": "string"
                },
                "relationship": {
                    "type": "string",
                    "enum": [
                        "structural",
                        "controls"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                },
                "fromParentToChildren": {
                    "type": "boolean"
                }
            }
        },
        "AssetRelationshipResponse": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "AssetTravelLog": {
            "type": "object",
            "properties": {
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetTravelLogSegment"
                    }
                }
            }
        },
        "AssetTravelLogSegment": {
            "type": "object",
            "properties": {
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "longitudes": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "latitudes": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                }
            }
        },
        "Audit": {
            "allOf": [
                {
                    "$ref": "#/definitions/Event"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "DISCOVERY_ROUTERS",
                                "DISCOVERY_DEVICES"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.audit.AuditType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "Audit",
            "x-optio3-external-record-id": "Audit"
        },
        "AuditFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "auditTypeIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "DISCOVERY_ROUTERS",
                                    "DISCOVERY_DEVICES"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.audit.AuditType"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "AuditFilterRequest"
        },
        "AzureDigitalTwinSyncProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "report": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "networksToProcess": {
                    "type": "integer",
                    "format": "int32"
                },
                "devicesProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "elementsProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "twinsFound": {
                    "type": "integer",
                    "format": "int32"
                },
                "relationshipsFound": {
                    "type": "integer",
                    "format": "int32"
                },
                "twinsProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "relationshipsProcessed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AzureDigitalTwinsHelperCredentials": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "AzureIotHubHelperCredentials": {
            "type": "object",
            "properties": {
                "hostName": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "sharedAccessKey": {
                    "type": "string"
                }
            }
        },
        "BACnetAddress": {
            "type": "object",
            "properties": {
                "network_number": {
                    "type": "integer",
                    "format": "int32"
                },
                "mac_address": {
                    "type": "string"
                }
            }
        },
        "BACnetBBMD": {
            "type": "object",
            "properties": {
                "networkAddress": {
                    "type": "string"
                },
                "networkPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "BACnetBulkRenamingData": {
            "allOf": [
                {
                    "$ref": "#/definitions/BACnetImportExportData"
                },
                {
                    "type": "object",
                    "properties": {
                        "objectIdNew": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "BACnetBulkRenamingData"
        },
        "BACnetDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "BACnetDevice",
            "x-optio3-external-record-id": "BACnetDevice"
        },
        "BACnetDeviceAddress": {
            "type": "object",
            "properties": {
                "networkNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "instanceNumber": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BACnetDeviceDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "address": {
                            "$ref": "#/definitions/BACnetDeviceAddress"
                        },
                        "bacnetAddress": {
                            "$ref": "#/definitions/BACnetAddress"
                        },
                        "transport": {
                            "$ref": "#/definitions/TransportAddress"
                        },
                        "segmentation": {
                            "type": "string",
                            "enum": [
                                "segmented_both",
                                "segmented_transmit",
                                "segmented_receive",
                                "no_segmentation"
                            ],
                            "x-optio3-enum-type": "com.optio3.protocol.model.bacnet.enums.BACnetSegmentation"
                        },
                        "maxAdpu": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "BACnetDeviceDescriptor"
        },
        "BACnetImportExportData": {
            "allOf": [
                {
                    "$ref": "#/definitions/ImportExportData"
                },
                {
                    "type": "object",
                    "properties": {
                        "networkId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "instanceId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "objectId": {
                            "type": "string"
                        },
                        "transport": {
                            "$ref": "#/definitions/TransportAddress"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "BACnetImportExportData"
        },
        "BackgroundActivity": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "title": {
                    "type": "string"
                },
                "context": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                },
                "nextActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastActivation": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastActivationStatus": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "lastActivationFailure": {
                    "type": "string"
                },
                "lastActivationFailureTrace": {
                    "type": "string"
                },
                "worker": {
                    "$ref": "#/definitions/HostAsset"
                },
                "waitingActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "subActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "BackgroundActivity"
        },
        "BackgroundActivityDetails": {
            "type": "object",
            "properties": {
                "handlerState": {
                    "type": "object"
                }
            }
        },
        "BackgroundActivityFilterPair": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "string",
                    "enum": [
                        "all",
                        "hideCompleted",
                        "running",
                        "completed",
                        "matchingStatus"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.model.scheduler.BackgroundActivityFilter"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "ACTIVE_BUT_CANCELLING",
                            "PAUSED",
                            "PAUSED_BUT_CANCELLING",
                            "WAITING",
                            "WAITING_BUT_CANCELLING",
                            "SLEEPING",
                            "SLEEPING_BUT_CANCELLIN",
                            "EXECUTING",
                            "EXECUTING_BUT_CANCELLING",
                            "CANCELLED",
                            "COMPLETED",
                            "FAILED"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                    }
                }
            }
        },
        "BackgroundActivityFilterRequest": {
            "type": "object",
            "properties": {
                "onlyReadyToGo": {
                    "type": "boolean"
                },
                "likeFilter": {
                    "type": "string"
                },
                "statusFilter": {
                    "$ref": "#/definitions/BackgroundActivityFilterPair"
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "BaseAssetDescriptor": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "BACnetDeviceDescriptor",
                    "subtype_model": "BACnetDeviceDescriptor"
                },
                {
                    "subtype_name": "GatewayDescriptor",
                    "subtype_model": "GatewayDescriptor"
                },
                {
                    "subtype_name": "GatewayPerfDescriptor",
                    "subtype_model": "GatewayPerfDescriptor"
                },
                {
                    "subtype_name": "IpnDeviceDescriptor",
                    "subtype_model": "IpnDeviceDescriptor"
                },
                {
                    "subtype_name": "NetworkDescriptor",
                    "subtype_model": "NetworkDescriptor"
                },
                {
                    "subtype_name": "RestDescriptor",
                    "subtype_model": "RestDescriptor"
                },
                {
                    "subtype_name": "RestPerfDescriptor",
                    "subtype_model": "RestPerfDescriptor"
                },
                {
                    "subtype_name": "TransportNetworkDescriptor",
                    "subtype_model": "TransportNetworkDescriptor"
                }
            ]
        },
        "BookmarkConfiguration": {
            "type": "object",
            "properties": {
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string"
                },
                "parentID": {
                    "type": "string"
                },
                "recordID": {
                    "type": "string"
                },
                "parentRecordID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "ALERT",
                        "DEVICE",
                        "EQUIPMENT",
                        "DEVICE_ELEMENT",
                        "DATA_EXPLORER"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.bookmark.enums.BookmarkType"
                },
                "url": {
                    "type": "string"
                },
                "stateSerialized": {
                    "$ref": "#/definitions/ViewStateSerialized"
                }
            }
        },
        "BrandingConfiguration": {
            "type": "object",
            "properties": {
                "primaryColor": {
                    "type": "string"
                },
                "secondaryColor": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "logoBase64": {
                    "type": "string"
                },
                "horizontalPlacement": {
                    "type": "string",
                    "enum": [
                        "Left",
                        "Center",
                        "Right"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.HorizontalAlignment"
                },
                "verticalPlacement": {
                    "type": "string",
                    "enum": [
                        "Top",
                        "Middle",
                        "Bottom"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.VerticalAlignment"
                }
            }
        },
        "ClassificationPointInputDetails": {
            "type": "object",
            "properties": {
                "objectName": {
                    "type": "string"
                },
                "objectBackupName": {
                    "type": "string"
                },
                "objectBackupEquipmentName": {
                    "type": "string"
                },
                "objectWorkflowOverrideName": {
                    "type": "string"
                },
                "objectDescription": {
                    "type": "string"
                },
                "objectIdentifier": {
                    "type": "string"
                },
                "objectType": {
                    "type": "string"
                },
                "objectUnits": {
                    "type": "string"
                },
                "objectLocation": {
                    "type": "string"
                },
                "objectBackupStructure": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controllerName": {
                    "type": "string"
                },
                "controllerBackupName": {
                    "type": "string"
                },
                "controllerDescription": {
                    "type": "string"
                },
                "controllerIdentifier": {
                    "type": "string"
                },
                "controllerLocation": {
                    "type": "string"
                },
                "controllerModelName": {
                    "type": "string"
                },
                "controllerVendorName": {
                    "type": "string"
                },
                "controllerTransportAddress": {
                    "$ref": "#/definitions/TransportAddress"
                }
            }
        },
        "ClassificationPointOutput": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "parentSysId": {
                    "type": "string"
                },
                "networkSysId": {
                    "type": "string"
                },
                "pointClassOverride": {
                    "type": "string"
                },
                "equipmentOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NormalizationEquipment"
                    }
                },
                "details": {
                    "$ref": "#/definitions/ClassificationPointInputDetails"
                },
                "normalizedName": {
                    "type": "string"
                },
                "oldNormalizedName": {
                    "type": "string"
                },
                "normalizationHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NormalizationMatchHistory"
                    }
                },
                "lastResult": {
                    "$ref": "#/definitions/ClassificationPointOutputDetails"
                },
                "currentResult": {
                    "$ref": "#/definitions/ClassificationPointOutputDetails"
                },
                "equipments": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/NormalizationEquipment"
                    }
                },
                "equipmentRelationships": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NormalizationEquipmentLocation"
                    }
                },
                "matchingDimensions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "normalizationTags": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ClassificationPointOutputDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "positiveScore": {
                    "type": "number",
                    "format": "double"
                },
                "negativeScore": {
                    "type": "number",
                    "format": "double"
                },
                "threshold": {
                    "type": "number",
                    "format": "double"
                },
                "ignored": {
                    "type": "boolean"
                },
                "assignedUnits": {
                    "type": "string",
                    "enum": [
                        "enumerated",
                        "onOff",
                        "activeInactive",
                        "constant",
                        "log",
                        "meters",
                        "nanometers",
                        "micrometers",
                        "millimeters",
                        "centimeters",
                        "kilometers",
                        "inches",
                        "feet",
                        "miles",
                        "seconds",
                        "hundredths_seconds",
                        "milliseconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "years",
                        "grams",
                        "nanograms",
                        "micrograms",
                        "milligrams",
                        "kilograms",
                        "pounds_mass",
                        "tons",
                        "meters_per_second",
                        "meters_per_minute",
                        "meters_per_hour",
                        "millimeters_per_second",
                        "millimeters_per_minute",
                        "millimeters_per_hour",
                        "kilometers_per_hour",
                        "feet_per_second",
                        "feet_per_minute",
                        "miles_per_hour",
                        "knots",
                        "longitude",
                        "latitude",
                        "meters_per_second_per_second",
                        "millig",
                        "cubic_meters",
                        "cubic_feet",
                        "liters",
                        "milliliters",
                        "imperial_gallons",
                        "us_gallons",
                        "cubic_feet_per_minute",
                        "cubic_feet_per_second",
                        "cubic_feet_per_hour",
                        "cubic_feet_per_day",
                        "thousand_cubic_feet_per_day",
                        "standard_cubic_feet_per_day",
                        "million_standard_cubic_feet_per_minute",
                        "million_standard_cubic_feet_per_day",
                        "thousand_standard_cubic_feet_per_day",
                        "cubic_meters_per_minute",
                        "cubic_meters_per_second",
                        "cubic_meters_per_hour",
                        "cubic_meters_per_day",
                        "liters_per_second",
                        "liters_per_minute",
                        "liters_per_hour",
                        "milliliters_per_second",
                        "pounds_mass_per_day",
                        "imperial_gallons_per_minute",
                        "us_gallons_per_minute",
                        "us_gallons_per_hour",
                        "square_meters",
                        "square_centimeters",
                        "square_feet",
                        "square_inches",
                        "currency_dollar_US",
                        "currency_dollar_Canadian",
                        "currency_euro",
                        "currency_generic",
                        "amperes",
                        "milliamperes",
                        "kiloamperes",
                        "megaamperes",
                        "volts",
                        "millivolts",
                        "kilovolts",
                        "megavolts",
                        "watts",
                        "milliwatts",
                        "kilowatts",
                        "megawatts",
                        "amperes_per_meter",
                        "amperes_per_square_meter",
                        "ampere_square_meters",
                        "ohms",
                        "milliohms",
                        "kilohms",
                        "megohms",
                        "ohm_meters",
                        "ohm_meter_squared_per_meter",
                        "siemens",
                        "millisiemens",
                        "microsiemens",
                        "siemens_per_meter",
                        "microsiemens_per_millimeter",
                        "decibels",
                        "decibels_milliwatts",
                        "decibels_millivolt",
                        "decibels_volt",
                        "farads",
                        "henrys",
                        "teslas",
                        "webers",
                        "power_factor",
                        "volt_amperes",
                        "kilovolt_amperes",
                        "megavolt_amperes",
                        "volt_amperes_reactive",
                        "kilovolt_amperes_reactive",
                        "megavolt_amperes_reactive",
                        "volts_per_meter",
                        "volts_per_degree_kelvin",
                        "degrees_phase",
                        "ampere_seconds",
                        "ampere_hours",
                        "volt_ampere_hours",
                        "kilovolt_ampere_hours",
                        "megavolt_ampere_hours",
                        "volt_ampere_hours_reactive",
                        "kilovolt_ampere_hours_reactive",
                        "megavolt_ampere_hours_reactive",
                        "volt_square_hours",
                        "ampere_square_hours",
                        "joules",
                        "kilojoules",
                        "megajoules",
                        "kilojoules_per_kilogram",
                        "watt_hours",
                        "kilowatt_hours",
                        "megawatt_hours",
                        "watt_hours_reactive",
                        "kilowatt_hours_reactive",
                        "megawatt_hours_reactive",
                        "btus",
                        "kilo_btus",
                        "mega_btus",
                        "therms",
                        "ton_hours",
                        "joules_per_kilogram_dry_air",
                        "kilojoules_per_kilogram_dry_air",
                        "megajoules_per_kilogram_dry_air",
                        "btus_per_pound_dry_air",
                        "btus_per_pound",
                        "joules_per_degree_kelvin",
                        "kilojoules_per_degree_kelvin",
                        "megajoules_per_degree_kelvin",
                        "joules_per_kilogram_degree_kelvin",
                        "newton",
                        "newton_meters",
                        "hertz",
                        "kilohertz",
                        "megahertz",
                        "cycles_per_minute",
                        "cycles_per_hour",
                        "per_hour",
                        "per_minute",
                        "per_second",
                        "grams_of_water_per_kilogram_dry_air",
                        "percent_relative_humidity",
                        "watts_per_square_foot",
                        "watts_per_square_meter",
                        "milliwatts_per_square_centimeter",
                        "candelas",
                        "candelas_per_square_meter",
                        "lumens",
                        "luxes",
                        "foot_candles",
                        "grams_per_second",
                        "grams_per_minute",
                        "kilograms_per_second",
                        "kilograms_per_minute",
                        "kilograms_per_hour",
                        "pounds_mass_per_second",
                        "pounds_mass_per_minute",
                        "pounds_mass_per_hour",
                        "tons_per_hour",
                        "btus_per_hour",
                        "kilo_btus_per_hour",
                        "joule_per_hours",
                        "horsepower",
                        "tons_refrigeration",
                        "pascals",
                        "hectopascals",
                        "kilopascals",
                        "megapascals",
                        "millibars",
                        "bars",
                        "pounds_force_per_square_inch",
                        "millimeters_of_water",
                        "centimeters_of_water",
                        "inches_of_water",
                        "millimeters_of_mercury",
                        "centimeters_of_mercury",
                        "inches_of_mercury",
                        "degrees_celsius",
                        "degrees_kelvin",
                        "degrees_fahrenheit",
                        "degrees_kelvin_per_hour",
                        "degrees_kelvin_per_minute",
                        "degrees_celsius_per_hour",
                        "degrees_celsius_per_minute",
                        "degrees_fahrenheit_per_hour",
                        "degrees_fahrenheit_per_minute",
                        "degree_days_celsius",
                        "degree_days_fahrenheit",
                        "delta_degrees_kelvin",
                        "delta_degrees_fahrenheit",
                        "no_units",
                        "ticks",
                        "counts",
                        "bytes",
                        "kilo_bytes",
                        "mega_bytes",
                        "giga_bytes",
                        "tera_bytes",
                        "degrees_angular",
                        "radians",
                        "degrees_angular_per_second",
                        "radians_per_second",
                        "mole_percent",
                        "percent",
                        "per_mille",
                        "percent_per_second",
                        "percent_obscuration_per_meter",
                        "percent_obscuration_per_foot",
                        "parts_per_million",
                        "parts_per_billion",
                        "revolutions_per_minute",
                        "joule_seconds",
                        "newton_seconds",
                        "newtons_per_meter",
                        "pascal_seconds",
                        "psi_per_degree_fahrenheit",
                        "kilograms_per_cubic_meter",
                        "kilometers_per_liter",
                        "miles_per_us_gallon",
                        "kilowatts_per_ton",
                        "kilowatt_hours_per_square_meter",
                        "kilowatt_hours_per_square_foot",
                        "watt_hours_per_cubic_meter",
                        "joules_per_cubic_meter",
                        "megajoules_per_square_meter",
                        "megajoules_per_square_foot",
                        "square_meters_per_newton",
                        "watts_per_meter_per_degree_kelvin",
                        "watts_per_square_meter_degree_kelvin",
                        "grams_per_gram",
                        "kilograms_per_kilogram",
                        "grams_per_kilogram",
                        "milligrams_per_gram",
                        "milligrams_per_kilogram",
                        "grams_per_milliliter",
                        "grams_per_liter",
                        "grams_per_square_meter",
                        "milligrams_per_liter",
                        "micrograms_per_liter",
                        "grams_per_cubic_meter",
                        "milligrams_per_cubic_meter",
                        "micrograms_per_cubic_meter",
                        "nanograms_per_cubic_meter",
                        "grams_per_cubic_centimeter",
                        "becquerels",
                        "kilobecquerels",
                        "megabecquerels",
                        "gray",
                        "milligray",
                        "microgray",
                        "sieverts",
                        "millisieverts",
                        "microsieverts",
                        "microsieverts_per_hour",
                        "millirems",
                        "millirems_per_hour",
                        "decibels_a",
                        "nephelometric_turbidity_unit",
                        "pH",
                        "minutes_per_degree_kelvin"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                },
                "azureDigitalTwinModel": {
                    "type": "string"
                },
                "samplingPeriod": {
                    "type": "integer",
                    "format": "int32"
                },
                "noSampling": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string",
                    "enum": [
                        "Logic",
                        "TermScoring",
                        "RegEx",
                        "TFIDFVectorModel",
                        "Override"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.normalization.ClassificationReason"
                },
                "matchingDimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ColorConfiguration": {
            "type": "object",
            "properties": {
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColorSegment"
                    }
                },
                "paletteName": {
                    "type": "string"
                }
            }
        },
        "ColorSegment": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "stopPoint": {
                    "type": "string",
                    "enum": [
                        "MIN",
                        "MIDPOINT",
                        "MAX",
                        "CUSTOM"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.ColorStopPoint"
                },
                "stopPointValue": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ControlPointWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "pointId": {
                            "type": "string"
                        },
                        "pointInput": {
                            "$ref": "#/definitions/AssetGraphBinding"
                        },
                        "nameEnabled": {
                            "type": "boolean"
                        },
                        "nameDisplay": {
                            "type": "string",
                            "enum": [
                                "NameOnly",
                                "LocationOnly",
                                "FullLocationOnly",
                                "EquipmentOnly",
                                "NameLocation",
                                "LocationName",
                                "NameFullLocation",
                                "FullLocationName",
                                "NameEquipment",
                                "EquipmentName"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.ControlPointDisplayType"
                        },
                        "nameAlignment": {
                            "type": "string",
                            "enum": [
                                "Left",
                                "Center",
                                "Right"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.HorizontalAlignment"
                        },
                        "valueEnabled": {
                            "type": "boolean"
                        },
                        "valueUnits": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        },
                        "valueUnitsEnabled": {
                            "type": "boolean"
                        },
                        "valuePrecision": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "valueAlignment": {
                            "type": "string",
                            "enum": [
                                "Left",
                                "Center",
                                "Right"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.HorizontalAlignment"
                        },
                        "timestampEnabled": {
                            "type": "boolean"
                        },
                        "timestampFormat": {
                            "type": "string"
                        },
                        "timestampAlignment": {
                            "type": "string",
                            "enum": [
                                "Left",
                                "Center",
                                "Right"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.HorizontalAlignment"
                        },
                        "color": {
                            "$ref": "#/definitions/ColorConfiguration"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ControlPointWidgetConfiguration"
        },
        "ControlPointsGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "unitsFactors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "unitsDisplay": {
                    "type": "string"
                },
                "aggregationType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUM",
                        "MEAN",
                        "MIN",
                        "MAX",
                        "DELTA",
                        "AVGDELTA",
                        "INCREASE",
                        "DECREASE",
                        "FIRST",
                        "LAST"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationTypeId"
                },
                "groupAggregationType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUM",
                        "MEAN",
                        "MIN",
                        "MAX",
                        "DELTA",
                        "AVGDELTA",
                        "INCREASE",
                        "DECREASE",
                        "FIRST",
                        "LAST"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationTypeId"
                },
                "granularity": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Hour",
                        "Day",
                        "Week",
                        "Month",
                        "Quarter",
                        "Year"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationGranularity"
                },
                "limitMode": {
                    "type": "string",
                    "enum": [
                        "None",
                        "TopN",
                        "BottomN",
                        "TopNPercent",
                        "BottomNPercent"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationLimit"
                },
                "limitValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "valuePrecision": {
                    "type": "integer",
                    "format": "int32"
                },
                "selections": {
                    "$ref": "#/definitions/ControlPointsSelection"
                },
                "colorConfig": {
                    "$ref": "#/definitions/ColorConfiguration"
                },
                "range": {
                    "$ref": "#/definitions/ToggleableNumericRange"
                },
                "graph": {
                    "$ref": "#/definitions/AssetGraph"
                },
                "pointInput": {
                    "$ref": "#/definitions/AssetGraphBinding"
                }
            }
        },
        "ControlPointsSelection": {
            "type": "object",
            "properties": {
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "ControllerMetadataAggregation": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "instanceNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataAggregationPoint"
                    }
                }
            }
        },
        "CustomReportElement": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "CustomReportElementAggregatedValue",
                    "subtype_model": "CustomReportElementAggregatedValue"
                },
                {
                    "subtype_name": "CustomReportElementAggregationTable",
                    "subtype_model": "CustomReportElementAggregationTable"
                },
                {
                    "subtype_name": "CustomReportElementAggregationTrend",
                    "subtype_model": "CustomReportElementAggregationTrend"
                },
                {
                    "subtype_name": "CustomReportElementAlertExecution",
                    "subtype_model": "CustomReportElementAlertExecution"
                },
                {
                    "subtype_name": "CustomReportElementAlertFeed",
                    "subtype_model": "CustomReportElementAlertFeed"
                },
                {
                    "subtype_name": "CustomReportElementAlertTable",
                    "subtype_model": "CustomReportElementAlertTable"
                },
                {
                    "subtype_name": "CustomReportElementChartSet",
                    "subtype_model": "CustomReportElementChartSet"
                },
                {
                    "subtype_name": "CustomReportElementDeviceElementList",
                    "subtype_model": "CustomReportElementDeviceElementList"
                },
                {
                    "subtype_name": "CustomReportElementPageBreak",
                    "subtype_model": "CustomReportElementPageBreak"
                },
                {
                    "subtype_name": "CustomReportElementRichText",
                    "subtype_model": "CustomReportElementRichText"
                }
            ]
        },
        "CustomReportElementAggregatedValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string"
                        },
                        "controlPointGroup": {
                            "$ref": "#/definitions/ControlPointsGroup"
                        },
                        "isFilterApplied": {
                            "type": "boolean"
                        },
                        "filter": {
                            "$ref": "#/definitions/RecurringWeeklySchedule"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementAggregatedValue"
        },
        "CustomReportElementAggregationTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string"
                        },
                        "groups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ControlPointsGroup"
                            }
                        },
                        "columns": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AggregationNodeBinding"
                            }
                        },
                        "graphId": {
                            "type": "string"
                        },
                        "isolateGroupRanges": {
                            "type": "boolean"
                        },
                        "controlPointDisplayType": {
                            "type": "string",
                            "enum": [
                                "NameOnly",
                                "LocationOnly",
                                "FullLocationOnly",
                                "EquipmentOnly",
                                "NameLocation",
                                "LocationName",
                                "NameFullLocation",
                                "FullLocationName",
                                "NameEquipment",
                                "EquipmentName"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.ControlPointDisplayType"
                        },
                        "visualizationMode": {
                            "type": "string",
                            "enum": [
                                "HEATMAP",
                                "LINE",
                                "TABLE",
                                "TABLE_WITH_BAR",
                                "BUBBLEMAP",
                                "TREEMAP",
                                "SUNBURST",
                                "PIEBURST",
                                "DONUT",
                                "PIE"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.HierarchicalVisualizationType"
                        },
                        "initialSort": {
                            "$ref": "#/definitions/SortCriteria"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementAggregationTable"
        },
        "CustomReportElementAggregationTrend": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string"
                        },
                        "groups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ControlPointsGroup"
                            }
                        },
                        "granularity": {
                            "type": "string",
                            "enum": [
                                "None",
                                "Hour",
                                "Day",
                                "Week",
                                "Month",
                                "Quarter",
                                "Year"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationGranularity"
                        },
                        "visualizationMode": {
                            "type": "string",
                            "enum": [
                                "Line",
                                "Bar"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.AggregationTrendVisualizationMode"
                        },
                        "showY": {
                            "type": "boolean"
                        },
                        "showLegend": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementAggregationTrend"
        },
        "CustomReportElementAlertExecution": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "definition": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "version": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementAlertExecution"
        },
        "CustomReportElementAlertFeed": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string"
                        },
                        "alertTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALARM",
                                    "COMMUNICATION_PROBLEM",
                                    "DEVICE_FAILURE",
                                    "END_OF_LIFE",
                                    "INFORMATIONAL",
                                    "OPERATOR_SUMMARY",
                                    "RECALL",
                                    "THRESHOLD_EXCEEDED",
                                    "WARNING",
                                    "WARRANTY"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                            }
                        },
                        "locations": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementAlertFeed"
        },
        "CustomReportElementAlertTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string"
                        },
                        "groupBy": {
                            "type": "string",
                            "enum": [
                                "location",
                                "manufacturer",
                                "priority",
                                "relation",
                                "rule",
                                "severity",
                                "status",
                                "type"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.SummaryFlavor"
                        },
                        "rollupType": {
                            "type": "string",
                            "enum": [
                                "ADMITTING",
                                "APARTMENT",
                                "ATRIUM",
                                "AUDITORIUM",
                                "BACKOFFICE",
                                "BALCONY",
                                "BAR_ROOM",
                                "BATHROOM",
                                "BEDROOM",
                                "BREAK_ROOM",
                                "BUILDING",
                                "CABLE_ROOM",
                                "CAFETERIA_ROOM",
                                "CAMPUS",
                                "CINEMA",
                                "CLASSROOM",
                                "CLEANING_ROOM",
                                "CLIMATE_CONTROL_ROOM",
                                "CLOAK_ROOM",
                                "CONFERENCE_ROOM",
                                "CONVERSATION_ROOM",
                                "COOKING_ROOM",
                                "COPYING_ROOM",
                                "COPY_ROOM",
                                "DATAS_ERVER_ROOM",
                                "DELIVERY_ROOM",
                                "DINING_ROOM",
                                "DISTRIBUTION_CENTER",
                                "DRESSING_ROOM",
                                "EDUCATIONAL_ROOM",
                                "ELECTRICAL_ROOM",
                                "ELEVATOR",
                                "ELEVATOR_ROOM",
                                "ELEVATOR_SHAFT",
                                "ENTRANCE",
                                "EXERCISE_ROOM",
                                "EXHIBITION_ROOM",
                                "FACADE",
                                "FACTORY",
                                "FITTING_ROOM",
                                "FLOOR",
                                "FOOD_HANDLING_ROOM",
                                "FRONT_DESK",
                                "GARAGE",
                                "GROUP_ROOM",
                                "HALLWAY",
                                "HOME",
                                "HOSPITAL",
                                "ICU",
                                "INPATIENT_SERVICES",
                                "KITCHEN",
                                "LABORATORY",
                                "LAB_SERVICES",
                                "LAND",
                                "LAUNDRY_ROOM",
                                "LEVEL",
                                "LIBRARY",
                                "LIVING_ROOM",
                                "LOADING_RECEIVING_ROOM",
                                "LOBBY",
                                "LOCKER_ROOM",
                                "LOUNGE",
                                "MEDITATION_ROOM",
                                "MORGUE",
                                "MOTHERS_ROOM",
                                "MULTI_PURPOSE_ROOM",
                                "NURSERY",
                                "NURSING_FACILITY",
                                "OFFICE",
                                "OFFICE_ROOM",
                                "OPERATING_ROOM",
                                "OUTPATIENT_SERVICES",
                                "PANTRY",
                                "PARKING",
                                "PERSONAL_HYGIENE",
                                "PHARMACY",
                                "RADIOLOGY",
                                "RECEPTION",
                                "RECORDING_ROOM",
                                "RECOVERY_ROOM",
                                "RECREATIONAL_ROOM",
                                "REGION",
                                "REGIONAL_CENTER",
                                "RESTROOM",
                                "RESTING_ROOM",
                                "RETAIL_ROOM",
                                "ROOF_INNER",
                                "ROOF_OUTER",
                                "ROOF_TOP",
                                "ROOM",
                                "SCHOOL",
                                "SECTION",
                                "SECURITY_ROOM",
                                "SERVER_ROOM",
                                "SERVICE_SHAFT",
                                "SHELTER",
                                "SHIP",
                                "SHOPPING_MALL",
                                "SLAB",
                                "SMALL_STUDY_ROOM",
                                "SPRINKLER_ROOM",
                                "STADIUM",
                                "STAFF_ROOM",
                                "STAIRWELL",
                                "STAIRS",
                                "STORAGE",
                                "STORAGE_ROOM",
                                "SUB_BUILDING",
                                "SUPPLY_ROOM",
                                "TELECOMMUNICATION_ROOM",
                                "TENANT_UNIT",
                                "TERRACE",
                                "THEATER",
                                "THERAPY",
                                "TRAILER",
                                "TREATMENT_ROOM",
                                "TREATMENT_WAITING_ROOM",
                                "TRUCK",
                                "UTILITIES_ROOM",
                                "WARD",
                                "WASTE_MANAGEMENT_ROOM",
                                "WORKSHOP",
                                "ZONE",
                                "OTHER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                        },
                        "alertStatusIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "muted",
                                    "resolved",
                                    "closed"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                            }
                        },
                        "alertTypeIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALARM",
                                    "COMMUNICATION_PROBLEM",
                                    "DEVICE_FAILURE",
                                    "END_OF_LIFE",
                                    "INFORMATIONAL",
                                    "OPERATOR_SUMMARY",
                                    "RECALL",
                                    "THRESHOLD_EXCEEDED",
                                    "WARNING",
                                    "WARRANTY"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                            }
                        },
                        "alertSeverityIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "CRITICAL",
                                    "SIGNIFICANT",
                                    "NORMAL",
                                    "LOW"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                            }
                        },
                        "locations": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "severityColors": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertMapSeverityColor"
                            }
                        },
                        "alertRules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordIdentity"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementAlertTable"
        },
        "CustomReportElementChartSet": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "charts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesChartConfiguration"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementChartSet"
        },
        "CustomReportElementDeviceElementList": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "pointInput": {
                            "$ref": "#/definitions/AssetGraphBinding"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementDeviceElementList"
        },
        "CustomReportElementPageBreak": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "CustomReportElementPageBreak"
        },
        "CustomReportElementRichText": {
            "allOf": [
                {
                    "$ref": "#/definitions/CustomReportElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        },
                        "backgroundColor": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "CustomReportElementRichText"
        },
        "DailySchedule": {
            "type": "object",
            "properties": {
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelativeTimeRange"
                    }
                }
            }
        },
        "DailyScheduleWithDayOfWeek": {
            "type": "object",
            "properties": {
                "dayOfWeek": {
                    "type": "string",
                    "enum": [
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY",
                        "SUNDAY"
                    ],
                    "x-optio3-enum-type": "java.time.DayOfWeek"
                },
                "dailySchedule": {
                    "$ref": "#/definitions/DailySchedule"
                }
            }
        },
        "DashboardBannerSegment": {
            "type": "object",
            "properties": {
                "widthRatio": {
                    "type": "integer",
                    "format": "int32"
                },
                "branding": {
                    "$ref": "#/definitions/BrandingConfiguration"
                }
            }
        },
        "DashboardConfiguration": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "showTitle": {
                    "type": "boolean"
                },
                "widgetPrimaryColor": {
                    "type": "string"
                },
                "widgetSecondaryColor": {
                    "type": "string"
                },
                "sharedGraphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedAssetGraph"
                    }
                },
                "bannerSegments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DashboardBannerSegment"
                    }
                },
                "sharedSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedAssetSelector"
                    }
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WidgetComposition"
                    }
                }
            }
        },
        "DashboardDefinition": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "headVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "releaseVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            },
            "x-optio3-external-record-id": "DashboardDefinition"
        },
        "DashboardDefinitionVersion": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "definition": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "details": {
                    "$ref": "#/definitions/DashboardConfiguration"
                },
                "predecessor": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            },
            "x-optio3-external-record-id": "DashboardDefinitionVersion"
        },
        "DashboardGraphContextPreference": {
            "type": "object",
            "properties": {
                "graphContexts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "DataConnectionSite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DataImportProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "devicesToProcess": {
                    "type": "integer",
                    "format": "int32"
                },
                "devicesProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "elementsProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "elementsModified": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DataImportRun": {
            "type": "object",
            "properties": {
                "dataImportsId": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "DatatableColumnConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "DatatableConfiguration": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatatableColumnConfiguration"
                    }
                }
            }
        },
        "DbEvent": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "UPDATE_INDIRECT",
                        "UPDATE_DIRECT",
                        "INSERT",
                        "DELETE"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.persistence.DbAction"
                },
                "context": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            }
        },
        "DbMessage": {
            "type": "object",
            "discriminator": "type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "DbMessageConfig",
                    "subtype_model": "DbMessage_Config"
                },
                {
                    "subtype_name": "DbMessageConfigReply",
                    "subtype_model": "DbMessage_Config_Reply"
                },
                {
                    "subtype_name": "DbMessageEvent",
                    "subtype_model": "DbMessage_Event"
                }
            ]
        },
        "DbMessageReply": {
            "type": "object"
        },
        "DbMessage_Config": {
            "allOf": [
                {
                    "$ref": "#/definitions/DbMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "table": {
                            "type": "string"
                        },
                        "active": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DbMessageConfig"
        },
        "DbMessage_Config_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/DbMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "success": {
                            "type": "boolean"
                        },
                        "lastUpdate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DbMessageConfigReply"
        },
        "DbMessage_Event": {
            "allOf": [
                {
                    "$ref": "#/definitions/DbMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "events": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DbEvent"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DbMessageEvent"
        },
        "DeliveryOptions": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "DetailedApplicationExceptionErrorDetails": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "enum": [
                        "ALREADY_EXISTS",
                        "NOT_AUTHENTICATED",
                        "NOT_AUTHORIZED",
                        "NOT_FOUND",
                        "NOT_IMPLEMENTED",
                        "INVALID_ARGUMENT",
                        "INVALID_STATE"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.exception.DetailedApplicationException$Code"
                },
                "message": {
                    "type": "string"
                },
                "exceptionTrace": {
                    "type": "string"
                },
                "validationErrors": {
                    "$ref": "#/definitions/ValidationResults"
                }
            }
        },
        "Device": {
            "allOf": [
                {
                    "$ref": "#/definitions/Asset"
                },
                {
                    "type": "object",
                    "properties": {
                        "manufacturerName": {
                            "type": "string"
                        },
                        "productName": {
                            "type": "string"
                        },
                        "modelName": {
                            "type": "string"
                        },
                        "firmwareVersion": {
                            "type": "string"
                        },
                        "minutesBeforeTransitionToUnreachable": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "minutesBeforeTransitionToReachable": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "reachable": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "Device",
            "x-optio3-external-record-id": "Device"
        },
        "DeviceElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/Asset"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string"
                        },
                        "contents": {
                            "type": "object"
                        },
                        "desiredContents": {
                            "type": "object"
                        },
                        "ableToUpdateState": {
                            "type": "boolean"
                        },
                        "samplingSettings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeviceElementSampling"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DeviceElement",
            "x-optio3-external-record-id": "DeviceElement"
        },
        "DeviceElementClassificationOverrides": {
            "type": "object",
            "properties": {
                "equipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NormalizationEquipment"
                    }
                },
                "pointName": {
                    "type": "string"
                },
                "pointClassId": {
                    "type": "string"
                },
                "locationsWithType": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NormalizationEquipmentLocation"
                    }
                }
            }
        },
        "DeviceElementClassificationOverridesRequest": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/DeviceElementClassificationOverrides"
                }
            }
        },
        "DeviceElementFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "hasNoSampling": {
                            "type": "boolean"
                        },
                        "hasAnySampling": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DeviceElementFilterRequest"
        },
        "DeviceElementNormalizationProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "devicesToProcess": {
                    "type": "integer",
                    "format": "int32"
                },
                "devicesProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "elementsProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "allWords": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "allUnknownWords": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "equipments": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/NormalizationEquipment"
                    }
                },
                "equipmentRelationships": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClassificationPointOutput"
                    }
                },
                "workflowOverrides": {
                    "$ref": "#/definitions/WorkflowOverrides"
                }
            }
        },
        "DeviceElementNormalizationRun": {
            "type": "object",
            "properties": {
                "rulesId": {
                    "type": "string"
                },
                "rules": {
                    "$ref": "#/definitions/NormalizationRules"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "DeviceElementNormalizationSample": {
            "type": "object",
            "properties": {
                "rulesId": {
                    "type": "string"
                },
                "rules": {
                    "$ref": "#/definitions/NormalizationRules"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "details": {
                    "$ref": "#/definitions/ClassificationPointInputDetails"
                }
            }
        },
        "DeviceElementReportProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "report": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "totalDeviceElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviceElementsProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "generatingFile": {
                    "type": "boolean"
                }
            }
        },
        "DeviceElementSampling": {
            "type": "object",
            "properties": {
                "propertyName": {
                    "type": "string"
                },
                "samplingPeriod": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DeviceElementSearchRequestFilters": {
            "allOf": [
                {
                    "$ref": "#/definitions/SearchRequestFilters"
                },
                {
                    "type": "object",
                    "properties": {
                        "hasAnySampling": {
                            "type": "boolean"
                        },
                        "hasNoSampling": {
                            "type": "boolean"
                        },
                        "isClassified": {
                            "type": "boolean"
                        },
                        "isUnclassified": {
                            "type": "boolean"
                        },
                        "isHidden": {
                            "type": "boolean"
                        },
                        "isNotHidden": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DeviceElementSearchRequestFilters"
        },
        "DeviceFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "likeDeviceManufacturerName": {
                            "type": "string"
                        },
                        "likeDeviceProductName": {
                            "type": "string"
                        },
                        "likeDeviceModelName": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "DeviceFilterRequest"
        },
        "DeviceHealthAggregate": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "ALARM",
                        "COMMUNICATION_PROBLEM",
                        "DEVICE_FAILURE",
                        "END_OF_LIFE",
                        "INFORMATIONAL",
                        "OPERATOR_SUMMARY",
                        "RECALL",
                        "THRESHOLD_EXCEEDED",
                        "WARNING",
                        "WARRANTY"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                },
                "maxSeverity": {
                    "type": "string",
                    "enum": [
                        "CRITICAL",
                        "SIGNIFICANT",
                        "NORMAL",
                        "LOW"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DeviceHealthSummary": {
            "type": "object",
            "properties": {
                "overallStatus": {
                    "type": "string",
                    "enum": [
                        "CRITICAL",
                        "SIGNIFICANT",
                        "NORMAL",
                        "LOW"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                },
                "countsByType": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeviceHealthAggregate"
                    }
                }
            }
        },
        "DeviceNormalizationExport": {
            "type": "object",
            "properties": {
                "deviceData": {
                    "$ref": "#/definitions/BACnetImportExportData"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BACnetImportExportData"
                    }
                }
            }
        },
        "DeviceSamplingTemplate": {
            "type": "object",
            "properties": {
                "elements": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "DeviceSummaryWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceWidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "DeviceSummaryWidgetConfiguration"
        },
        "DeviceTemplate": {
            "type": "object",
            "properties": {
                "elements": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TimeSeriesPropertyType"
                    }
                }
            }
        },
        "DeviceWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "categories": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "states": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "DevicesReportProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "report": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "totalDevices": {
                    "type": "integer",
                    "format": "int32"
                },
                "devicesProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "generatingFile": {
                    "type": "boolean"
                }
            }
        },
        "DevicesSamplingTemplate": {
            "type": "object",
            "properties": {
                "devices": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeviceSamplingTemplate"
                    }
                }
            }
        },
        "DevicesTemplate": {
            "type": "object",
            "properties": {
                "devices": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeviceTemplate"
                    }
                }
            }
        },
        "DigineousDeviceConfig": {
            "type": "object",
            "properties": {
                "deviceIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviceId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DigineousDeviceLibrary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "deviceFlavor": {
                    "type": "string",
                    "enum": [
                        "BlackBox",
                        "InfiniteImpulse_Min",
                        "InfiniteImpulse_Avg",
                        "InfiniteImpulse_Max"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.ipn.objects.digineous.DigineousDeviceFlavor"
                },
                "equipmentClass": {
                    "$ref": "#/definitions/WellKnownEquipmentClassOrCustom"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DigineousPointLibrary"
                    }
                }
            }
        },
        "DigineousMachineConfig": {
            "type": "object",
            "properties": {
                "machineId": {
                    "type": "string"
                },
                "machineName": {
                    "type": "string"
                },
                "machineTemplate": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DigineousDeviceConfig"
                    }
                }
            }
        },
        "DigineousMachineLibrary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "equipmentClass": {
                    "$ref": "#/definitions/WellKnownEquipmentClassOrCustom"
                },
                "deviceTemplates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DigineousPointLibrary": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "pointClass": {
                    "$ref": "#/definitions/WellKnownPointClassOrCustom"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "units": {
                    "type": "string",
                    "enum": [
                        "enumerated",
                        "onOff",
                        "activeInactive",
                        "constant",
                        "log",
                        "meters",
                        "nanometers",
                        "micrometers",
                        "millimeters",
                        "centimeters",
                        "kilometers",
                        "inches",
                        "feet",
                        "miles",
                        "seconds",
                        "hundredths_seconds",
                        "milliseconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "years",
                        "grams",
                        "nanograms",
                        "micrograms",
                        "milligrams",
                        "kilograms",
                        "pounds_mass",
                        "tons",
                        "meters_per_second",
                        "meters_per_minute",
                        "meters_per_hour",
                        "millimeters_per_second",
                        "millimeters_per_minute",
                        "millimeters_per_hour",
                        "kilometers_per_hour",
                        "feet_per_second",
                        "feet_per_minute",
                        "miles_per_hour",
                        "knots",
                        "longitude",
                        "latitude",
                        "meters_per_second_per_second",
                        "millig",
                        "cubic_meters",
                        "cubic_feet",
                        "liters",
                        "milliliters",
                        "imperial_gallons",
                        "us_gallons",
                        "cubic_feet_per_minute",
                        "cubic_feet_per_second",
                        "cubic_feet_per_hour",
                        "cubic_feet_per_day",
                        "thousand_cubic_feet_per_day",
                        "standard_cubic_feet_per_day",
                        "million_standard_cubic_feet_per_minute",
                        "million_standard_cubic_feet_per_day",
                        "thousand_standard_cubic_feet_per_day",
                        "cubic_meters_per_minute",
                        "cubic_meters_per_second",
                        "cubic_meters_per_hour",
                        "cubic_meters_per_day",
                        "liters_per_second",
                        "liters_per_minute",
                        "liters_per_hour",
                        "milliliters_per_second",
                        "pounds_mass_per_day",
                        "imperial_gallons_per_minute",
                        "us_gallons_per_minute",
                        "us_gallons_per_hour",
                        "square_meters",
                        "square_centimeters",
                        "square_feet",
                        "square_inches",
                        "currency_dollar_US",
                        "currency_dollar_Canadian",
                        "currency_euro",
                        "currency_generic",
                        "amperes",
                        "milliamperes",
                        "kiloamperes",
                        "megaamperes",
                        "volts",
                        "millivolts",
                        "kilovolts",
                        "megavolts",
                        "watts",
                        "milliwatts",
                        "kilowatts",
                        "megawatts",
                        "amperes_per_meter",
                        "amperes_per_square_meter",
                        "ampere_square_meters",
                        "ohms",
                        "milliohms",
                        "kilohms",
                        "megohms",
                        "ohm_meters",
                        "ohm_meter_squared_per_meter",
                        "siemens",
                        "millisiemens",
                        "microsiemens",
                        "siemens_per_meter",
                        "microsiemens_per_millimeter",
                        "decibels",
                        "decibels_milliwatts",
                        "decibels_millivolt",
                        "decibels_volt",
                        "farads",
                        "henrys",
                        "teslas",
                        "webers",
                        "power_factor",
                        "volt_amperes",
                        "kilovolt_amperes",
                        "megavolt_amperes",
                        "volt_amperes_reactive",
                        "kilovolt_amperes_reactive",
                        "megavolt_amperes_reactive",
                        "volts_per_meter",
                        "volts_per_degree_kelvin",
                        "degrees_phase",
                        "ampere_seconds",
                        "ampere_hours",
                        "volt_ampere_hours",
                        "kilovolt_ampere_hours",
                        "megavolt_ampere_hours",
                        "volt_ampere_hours_reactive",
                        "kilovolt_ampere_hours_reactive",
                        "megavolt_ampere_hours_reactive",
                        "volt_square_hours",
                        "ampere_square_hours",
                        "joules",
                        "kilojoules",
                        "megajoules",
                        "kilojoules_per_kilogram",
                        "watt_hours",
                        "kilowatt_hours",
                        "megawatt_hours",
                        "watt_hours_reactive",
                        "kilowatt_hours_reactive",
                        "megawatt_hours_reactive",
                        "btus",
                        "kilo_btus",
                        "mega_btus",
                        "therms",
                        "ton_hours",
                        "joules_per_kilogram_dry_air",
                        "kilojoules_per_kilogram_dry_air",
                        "megajoules_per_kilogram_dry_air",
                        "btus_per_pound_dry_air",
                        "btus_per_pound",
                        "joules_per_degree_kelvin",
                        "kilojoules_per_degree_kelvin",
                        "megajoules_per_degree_kelvin",
                        "joules_per_kilogram_degree_kelvin",
                        "newton",
                        "newton_meters",
                        "hertz",
                        "kilohertz",
                        "megahertz",
                        "cycles_per_minute",
                        "cycles_per_hour",
                        "per_hour",
                        "per_minute",
                        "per_second",
                        "grams_of_water_per_kilogram_dry_air",
                        "percent_relative_humidity",
                        "watts_per_square_foot",
                        "watts_per_square_meter",
                        "milliwatts_per_square_centimeter",
                        "candelas",
                        "candelas_per_square_meter",
                        "lumens",
                        "luxes",
                        "foot_candles",
                        "grams_per_second",
                        "grams_per_minute",
                        "kilograms_per_second",
                        "kilograms_per_minute",
                        "kilograms_per_hour",
                        "pounds_mass_per_second",
                        "pounds_mass_per_minute",
                        "pounds_mass_per_hour",
                        "tons_per_hour",
                        "btus_per_hour",
                        "kilo_btus_per_hour",
                        "joule_per_hours",
                        "horsepower",
                        "tons_refrigeration",
                        "pascals",
                        "hectopascals",
                        "kilopascals",
                        "megapascals",
                        "millibars",
                        "bars",
                        "pounds_force_per_square_inch",
                        "millimeters_of_water",
                        "centimeters_of_water",
                        "inches_of_water",
                        "millimeters_of_mercury",
                        "centimeters_of_mercury",
                        "inches_of_mercury",
                        "degrees_celsius",
                        "degrees_kelvin",
                        "degrees_fahrenheit",
                        "degrees_kelvin_per_hour",
                        "degrees_kelvin_per_minute",
                        "degrees_celsius_per_hour",
                        "degrees_celsius_per_minute",
                        "degrees_fahrenheit_per_hour",
                        "degrees_fahrenheit_per_minute",
                        "degree_days_celsius",
                        "degree_days_fahrenheit",
                        "delta_degrees_kelvin",
                        "delta_degrees_fahrenheit",
                        "no_units",
                        "ticks",
                        "counts",
                        "bytes",
                        "kilo_bytes",
                        "mega_bytes",
                        "giga_bytes",
                        "tera_bytes",
                        "degrees_angular",
                        "radians",
                        "degrees_angular_per_second",
                        "radians_per_second",
                        "mole_percent",
                        "percent",
                        "per_mille",
                        "percent_per_second",
                        "percent_obscuration_per_meter",
                        "percent_obscuration_per_foot",
                        "parts_per_million",
                        "parts_per_billion",
                        "revolutions_per_minute",
                        "joule_seconds",
                        "newton_seconds",
                        "newtons_per_meter",
                        "pascal_seconds",
                        "psi_per_degree_fahrenheit",
                        "kilograms_per_cubic_meter",
                        "kilometers_per_liter",
                        "miles_per_us_gallon",
                        "kilowatts_per_ton",
                        "kilowatt_hours_per_square_meter",
                        "kilowatt_hours_per_square_foot",
                        "watt_hours_per_cubic_meter",
                        "joules_per_cubic_meter",
                        "megajoules_per_square_meter",
                        "megajoules_per_square_foot",
                        "square_meters_per_newton",
                        "watts_per_meter_per_degree_kelvin",
                        "watts_per_square_meter_degree_kelvin",
                        "grams_per_gram",
                        "kilograms_per_kilogram",
                        "grams_per_kilogram",
                        "milligrams_per_gram",
                        "milligrams_per_kilogram",
                        "grams_per_milliliter",
                        "grams_per_liter",
                        "grams_per_square_meter",
                        "milligrams_per_liter",
                        "micrograms_per_liter",
                        "grams_per_cubic_meter",
                        "milligrams_per_cubic_meter",
                        "micrograms_per_cubic_meter",
                        "nanograms_per_cubic_meter",
                        "grams_per_cubic_centimeter",
                        "becquerels",
                        "kilobecquerels",
                        "megabecquerels",
                        "gray",
                        "milligray",
                        "microgray",
                        "sieverts",
                        "millisieverts",
                        "microsieverts",
                        "microsieverts_per_hour",
                        "millirems",
                        "millirems_per_hour",
                        "decibels_a",
                        "nephelometric_turbidity_unit",
                        "pH",
                        "minutes_per_degree_kelvin"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                },
                "lowInputRange": {
                    "type": "number",
                    "format": "float"
                },
                "highInputRange": {
                    "type": "number",
                    "format": "float"
                },
                "lowOutputRange": {
                    "type": "number",
                    "format": "float"
                },
                "highOutputRange": {
                    "type": "number",
                    "format": "float"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "DigineousVibrationMonitorDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "plantId": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                }
            }
        },
        "DiscoveryReportProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "report": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "networksToProcess": {
                    "type": "integer",
                    "format": "int32"
                },
                "devicesProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "elementsProcessed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DiscoveryReportRun": {
            "type": "object",
            "properties": {
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "filter": {
                    "$ref": "#/definitions/DeviceElementFilterRequest"
                }
            }
        },
        "DiscoveryState": {
            "type": "object",
            "properties": {
                "doneDiscovery": {
                    "type": "boolean"
                },
                "doneDeviceFetch": {
                    "type": "boolean"
                },
                "doneObjectsListing": {
                    "type": "boolean"
                },
                "donePropertiesFetch": {
                    "type": "boolean"
                },
                "doneAutoConfigureSampling": {
                    "type": "boolean"
                },
                "readyForDataCollection": {
                    "type": "boolean"
                },
                "requestDiscovery": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "INCREMENTAL",
                        "FULL"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.persistence.asset.DiscoveryRequest"
                },
                "requestDeviceFetch": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "INCREMENTAL",
                        "FULL"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.persistence.asset.DiscoveryRequest"
                },
                "requestObjectsListing": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "INCREMENTAL",
                        "FULL"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.persistence.asset.DiscoveryRequest"
                },
                "requestPropertiesFetch": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "INCREMENTAL",
                        "FULL"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.persistence.asset.DiscoveryRequest"
                },
                "requestAutoConfigureSampling": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "INCREMENTAL",
                        "FULL"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.persistence.asset.DiscoveryRequest"
                }
            }
        },
        "EngineArithmeticOperatorBinary": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Plus",
                                "Minus",
                                "Multiply",
                                "Divide",
                                "Power"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineArithmeticOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineArithmeticOperatorBinary"
        },
        "EngineArithmeticPercentageOperatorBinary": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Plus",
                                "Minus",
                                "Multiply",
                                "Divide",
                                "Power"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineArithmeticOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineArithmeticPercentageOperatorBinary"
        },
        "EngineBlock": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "id": {
                    "type": "string"
                },
                "x": {
                    "type": "integer",
                    "format": "int32"
                },
                "y": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AlertEngineExpressionActionNewEmail",
                    "subtype_model": "AlertEngineExpressionActionNewEmail"
                },
                {
                    "subtype_name": "AlertEngineExpressionActionNewSms",
                    "subtype_model": "AlertEngineExpressionActionNewSms"
                },
                {
                    "subtype_name": "AlertEngineExpressionActionNewTicket",
                    "subtype_model": "AlertEngineExpressionActionNewTicket"
                },
                {
                    "subtype_name": "AlertEngineExpressionBinaryControlPointSample",
                    "subtype_model": "AlertEngineExpressionBinaryControlPointSample"
                },
                {
                    "subtype_name": "AlertEngineExpressionBinaryControlPointSampleAggregate",
                    "subtype_model": "AlertEngineExpressionBinaryControlPointSampleAggregate"
                },
                {
                    "subtype_name": "AlertEngineExpressionBinaryControlPointSampleRange",
                    "subtype_model": "AlertEngineExpressionBinaryControlPointSampleRange"
                },
                {
                    "subtype_name": "AlertEngineInputParameterControlPoint",
                    "subtype_model": "AlertEngineInputParameterControlPoint"
                },
                {
                    "subtype_name": "AlertEngineInputParameterControlPointsSelection",
                    "subtype_model": "AlertEngineInputParameterControlPointsSelection"
                },
                {
                    "subtype_name": "AlertEngineInputParameterDeliveryOptions",
                    "subtype_model": "AlertEngineInputParameterDeliveryOptions"
                },
                {
                    "subtype_name": "AlertEngineLiteralAlertSeverity",
                    "subtype_model": "AlertEngineLiteralAlertSeverity"
                },
                {
                    "subtype_name": "AlertEngineLiteralAlertStatus",
                    "subtype_model": "AlertEngineLiteralAlertStatus"
                },
                {
                    "subtype_name": "AlertEngineLiteralAssetQueryEquipmentClass",
                    "subtype_model": "AlertEngineLiteralAssetQueryEquipmentClass"
                },
                {
                    "subtype_name": "AlertEngineLiteralAssetQueryPointClass",
                    "subtype_model": "AlertEngineLiteralAssetQueryPointClass"
                },
                {
                    "subtype_name": "AlertEngineLiteralAssetQueryTag",
                    "subtype_model": "AlertEngineLiteralAssetQueryTag"
                },
                {
                    "subtype_name": "AlertEngineLiteralControlPoint",
                    "subtype_model": "AlertEngineLiteralControlPoint"
                },
                {
                    "subtype_name": "AlertEngineLiteralControlPointsSelection",
                    "subtype_model": "AlertEngineLiteralControlPointsSelection"
                },
                {
                    "subtype_name": "AlertEngineLiteralDeliveryOptions",
                    "subtype_model": "AlertEngineLiteralDeliveryOptions"
                },
                {
                    "subtype_name": "AlertEngineOperatorBinaryAssetQueryAnd",
                    "subtype_model": "AlertEngineOperatorBinaryAssetQueryAnd"
                },
                {
                    "subtype_name": "AlertEngineOperatorBinaryAssetQueryOr",
                    "subtype_model": "AlertEngineOperatorBinaryAssetQueryOr"
                },
                {
                    "subtype_name": "AlertEngineOperatorBinaryAssetQueryRelation",
                    "subtype_model": "AlertEngineOperatorBinaryAssetQueryRelation"
                },
                {
                    "subtype_name": "AlertEngineOperatorBinaryAssetQueryRelationSingle",
                    "subtype_model": "AlertEngineOperatorBinaryAssetQueryRelationSingle"
                },
                {
                    "subtype_name": "AlertEngineOperatorBinaryForDeliveryOptions",
                    "subtype_model": "AlertEngineOperatorBinaryForDeliveryOptions"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAsControlPoint",
                    "subtype_model": "AlertEngineOperatorUnaryAsControlPoint"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAsDevice",
                    "subtype_model": "AlertEngineOperatorUnaryAsDevice"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAsGroup",
                    "subtype_model": "AlertEngineOperatorUnaryAsGroup"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetGetLocation",
                    "subtype_model": "AlertEngineOperatorUnaryAssetGetLocation"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetGetName",
                    "subtype_model": "AlertEngineOperatorUnaryAssetGetName"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetGraphNode",
                    "subtype_model": "AlertEngineOperatorUnaryAssetGraphNode"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetGraphNodes",
                    "subtype_model": "AlertEngineOperatorUnaryAssetGraphNodes"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetQueryExec",
                    "subtype_model": "AlertEngineOperatorUnaryAssetQueryExec"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetQueryNot",
                    "subtype_model": "AlertEngineOperatorUnaryAssetQueryNot"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetQueryRelation",
                    "subtype_model": "AlertEngineOperatorUnaryAssetQueryRelation"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryAssetQueryRelationSingle",
                    "subtype_model": "AlertEngineOperatorUnaryAssetQueryRelationSingle"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryControlPointCoordinates",
                    "subtype_model": "AlertEngineOperatorUnaryControlPointCoordinates"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryControlPointLastSample",
                    "subtype_model": "AlertEngineOperatorUnaryControlPointLastSample"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryControlPointMetadataNumber",
                    "subtype_model": "AlertEngineOperatorUnaryControlPointMetadataNumber"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryControlPointMetadataString",
                    "subtype_model": "AlertEngineOperatorUnaryControlPointMetadataString"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryControlPointMetadataTimestamp",
                    "subtype_model": "AlertEngineOperatorUnaryControlPointMetadataTimestamp"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryControlPointNewSamples",
                    "subtype_model": "AlertEngineOperatorUnaryControlPointNewSamples"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryCoordinatesNewSamples",
                    "subtype_model": "AlertEngineOperatorUnaryCoordinatesNewSamples"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryCreateAlert",
                    "subtype_model": "AlertEngineOperatorUnaryCreateAlert"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryGetAlert",
                    "subtype_model": "AlertEngineOperatorUnaryGetAlert"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryGetAlertSeverity",
                    "subtype_model": "AlertEngineOperatorUnaryGetAlertSeverity"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryGetAlertStatus",
                    "subtype_model": "AlertEngineOperatorUnaryGetAlertStatus"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryGetEmailDeliveryOptionsFromLocation",
                    "subtype_model": "AlertEngineOperatorUnaryGetEmailDeliveryOptionsFromLocation"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryGetProperty",
                    "subtype_model": "AlertEngineOperatorUnaryGetProperty"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryGetSmsDeliveryOptionsFromLocation",
                    "subtype_model": "AlertEngineOperatorUnaryGetSmsDeliveryOptionsFromLocation"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryGetTimeZoneFromLocation",
                    "subtype_model": "AlertEngineOperatorUnaryGetTimeZoneFromLocation"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryHasAlertChanged",
                    "subtype_model": "AlertEngineOperatorUnaryHasAlertChanged"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryLocationGetName",
                    "subtype_model": "AlertEngineOperatorUnaryLocationGetName"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnarySampleGetProperty",
                    "subtype_model": "AlertEngineOperatorUnarySampleGetProperty"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnarySampleGetTime",
                    "subtype_model": "AlertEngineOperatorUnarySampleGetTime"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryTravelEntryGetTime",
                    "subtype_model": "AlertEngineOperatorUnaryTravelEntryGetTime"
                },
                {
                    "subtype_name": "AlertEngineOperatorUnaryTravelEntryInsideFence",
                    "subtype_model": "AlertEngineOperatorUnaryTravelEntryInsideFence"
                },
                {
                    "subtype_name": "AlertEngineStatementAddEmailLine",
                    "subtype_model": "AlertEngineStatementAddEmailLine"
                },
                {
                    "subtype_name": "AlertEngineStatementAddSmsLine",
                    "subtype_model": "AlertEngineStatementAddSmsLine"
                },
                {
                    "subtype_name": "AlertEngineStatementCommitAction",
                    "subtype_model": "AlertEngineStatementCommitAction"
                },
                {
                    "subtype_name": "AlertEngineStatementSetAlertDescription",
                    "subtype_model": "AlertEngineStatementSetAlertDescription"
                },
                {
                    "subtype_name": "AlertEngineStatementSetAlertSeverity",
                    "subtype_model": "AlertEngineStatementSetAlertSeverity"
                },
                {
                    "subtype_name": "AlertEngineStatementSetAlertStatus",
                    "subtype_model": "AlertEngineStatementSetAlertStatus"
                },
                {
                    "subtype_name": "AlertEngineStatementSetAlertText",
                    "subtype_model": "AlertEngineStatementSetAlertText"
                },
                {
                    "subtype_name": "AlertEngineStatementSetAlertTimestamp",
                    "subtype_model": "AlertEngineStatementSetAlertTimestamp"
                },
                {
                    "subtype_name": "AlertEngineStatementSetControlPointMetadata",
                    "subtype_model": "AlertEngineStatementSetControlPointMetadata"
                },
                {
                    "subtype_name": "AlertEngineStatementSetEmailSubject",
                    "subtype_model": "AlertEngineStatementSetEmailSubject"
                },
                {
                    "subtype_name": "AlertEngineStatementSetProperty",
                    "subtype_model": "AlertEngineStatementSetProperty"
                },
                {
                    "subtype_name": "AlertEngineStatementSetSmsSender",
                    "subtype_model": "AlertEngineStatementSetSmsSender"
                },
                {
                    "subtype_name": "EngineArithmeticOperatorBinary",
                    "subtype_model": "EngineArithmeticOperatorBinary"
                },
                {
                    "subtype_name": "EngineArithmeticPercentageOperatorBinary",
                    "subtype_model": "EngineArithmeticPercentageOperatorBinary"
                },
                {
                    "subtype_name": "EngineExpressionBinaryApproximateEquality",
                    "subtype_model": "EngineExpressionBinaryApproximateEquality"
                },
                {
                    "subtype_name": "EngineExpressionBinaryCompareEngineeringUnits",
                    "subtype_model": "EngineExpressionBinaryCompareEngineeringUnits"
                },
                {
                    "subtype_name": "EngineExpressionBinaryDateTimeModify",
                    "subtype_model": "EngineExpressionBinaryDateTimeModify"
                },
                {
                    "subtype_name": "EngineExpressionBinaryDateTimeRange",
                    "subtype_model": "EngineExpressionBinaryDateTimeRange"
                },
                {
                    "subtype_name": "EngineExpressionBinaryDateTimeRangeFromTime",
                    "subtype_model": "EngineExpressionBinaryDateTimeRangeFromTime"
                },
                {
                    "subtype_name": "EngineExpressionBinaryDateTimeSetTimeZone",
                    "subtype_model": "EngineExpressionBinaryDateTimeSetTimeZone"
                },
                {
                    "subtype_name": "EngineExpressionBinaryListContains",
                    "subtype_model": "EngineExpressionBinaryListContains"
                },
                {
                    "subtype_name": "EngineExpressionBinaryListGet",
                    "subtype_model": "EngineExpressionBinaryListGet"
                },
                {
                    "subtype_name": "EngineExpressionBinaryListJoin",
                    "subtype_model": "EngineExpressionBinaryListJoin"
                },
                {
                    "subtype_name": "EngineExpressionBinaryLogicCompare",
                    "subtype_model": "EngineExpressionBinaryLogicCompare"
                },
                {
                    "subtype_name": "EngineExpressionBinaryLogicOperation",
                    "subtype_model": "EngineExpressionBinaryLogicOperation"
                },
                {
                    "subtype_name": "EngineExpressionBinaryLookupTableFilter",
                    "subtype_model": "EngineExpressionBinaryLookupTableFilter"
                },
                {
                    "subtype_name": "EngineExpressionBinaryLookupTableLookup",
                    "subtype_model": "EngineExpressionBinaryLookupTableLookup"
                },
                {
                    "subtype_name": "EngineExpressionBinaryLookupTableReplace",
                    "subtype_model": "EngineExpressionBinaryLookupTableReplace"
                },
                {
                    "subtype_name": "EngineExpressionBinaryRegexMatch",
                    "subtype_model": "EngineExpressionBinaryRegexMatch"
                },
                {
                    "subtype_name": "EngineExpressionBinaryRegexMatchCaseSensitive",
                    "subtype_model": "EngineExpressionBinaryRegexMatchCaseSensitive"
                },
                {
                    "subtype_name": "EngineExpressionBinaryRegexReplace",
                    "subtype_model": "EngineExpressionBinaryRegexReplace"
                },
                {
                    "subtype_name": "EngineExpressionBinaryRegexTableReplace",
                    "subtype_model": "EngineExpressionBinaryRegexTableReplace"
                },
                {
                    "subtype_name": "EngineExpressionBinaryStringConcat",
                    "subtype_model": "EngineExpressionBinaryStringConcat"
                },
                {
                    "subtype_name": "EngineExpressionBinaryStringEndsWith",
                    "subtype_model": "EngineExpressionBinaryStringEndsWith"
                },
                {
                    "subtype_name": "EngineExpressionBinaryStringIndexOf",
                    "subtype_model": "EngineExpressionBinaryStringIndexOf"
                },
                {
                    "subtype_name": "EngineExpressionBinaryStringIsMatch",
                    "subtype_model": "EngineExpressionBinaryStringIsMatch"
                },
                {
                    "subtype_name": "EngineExpressionBinaryStringSplit",
                    "subtype_model": "EngineExpressionBinaryStringSplit"
                },
                {
                    "subtype_name": "EngineExpressionBinaryStringStartsWith",
                    "subtype_model": "EngineExpressionBinaryStringStartsWith"
                },
                {
                    "subtype_name": "EngineExpressionBinaryWeeklyScheduleIsIncluded",
                    "subtype_model": "EngineExpressionBinaryWeeklyScheduleIsIncluded"
                },
                {
                    "subtype_name": "EngineExpressionBinaryWeeklyScheduleSetTimeZone",
                    "subtype_model": "EngineExpressionBinaryWeeklyScheduleSetTimeZone"
                },
                {
                    "subtype_name": "EngineExpressionCurrentDateTime",
                    "subtype_model": "EngineExpressionCurrentDateTime"
                },
                {
                    "subtype_name": "EngineExpressionFormatText",
                    "subtype_model": "EngineExpressionFormatText"
                },
                {
                    "subtype_name": "EngineExpressionFunctionCall",
                    "subtype_model": "EngineExpressionFunctionCall"
                },
                {
                    "subtype_name": "EngineExpressionGetVariable",
                    "subtype_model": "EngineExpressionGetVariable"
                },
                {
                    "subtype_name": "EngineExpressionMemoize",
                    "subtype_model": "EngineExpressionMemoize"
                },
                {
                    "subtype_name": "EngineExpressionRangeCheck",
                    "subtype_model": "EngineExpressionRangeCheck"
                },
                {
                    "subtype_name": "EngineInputParameterBoolean",
                    "subtype_model": "EngineInputParameterBoolean"
                },
                {
                    "subtype_name": "EngineInputParameterDateTime",
                    "subtype_model": "EngineInputParameterDateTime"
                },
                {
                    "subtype_name": "EngineInputParameterDuration",
                    "subtype_model": "EngineInputParameterDuration"
                },
                {
                    "subtype_name": "EngineInputParameterNumber",
                    "subtype_model": "EngineInputParameterNumber"
                },
                {
                    "subtype_name": "EngineInputParameterString",
                    "subtype_model": "EngineInputParameterString"
                },
                {
                    "subtype_name": "EngineLiteralBoolean",
                    "subtype_model": "EngineLiteralBoolean"
                },
                {
                    "subtype_name": "EngineLiteralDateTime",
                    "subtype_model": "EngineLiteralDateTime"
                },
                {
                    "subtype_name": "EngineLiteralDuration",
                    "subtype_model": "EngineLiteralDuration"
                },
                {
                    "subtype_name": "EngineLiteralEngineeringUnits",
                    "subtype_model": "EngineLiteralEngineeringUnits"
                },
                {
                    "subtype_name": "EngineLiteralList",
                    "subtype_model": "EngineLiteralList"
                },
                {
                    "subtype_name": "EngineLiteralLookupTable",
                    "subtype_model": "EngineLiteralLookupTable"
                },
                {
                    "subtype_name": "EngineLiteralNull",
                    "subtype_model": "EngineLiteralNull"
                },
                {
                    "subtype_name": "EngineLiteralNumber",
                    "subtype_model": "EngineLiteralNumber"
                },
                {
                    "subtype_name": "EngineLiteralRegexReplaceTable",
                    "subtype_model": "EngineLiteralRegexReplaceTable"
                },
                {
                    "subtype_name": "EngineLiteralString",
                    "subtype_model": "EngineLiteralString"
                },
                {
                    "subtype_name": "EngineLiteralStringSet",
                    "subtype_model": "EngineLiteralStringSet"
                },
                {
                    "subtype_name": "EngineLiteralTimeZone",
                    "subtype_model": "EngineLiteralTimeZone"
                },
                {
                    "subtype_name": "EngineLiteralWeeklySchedule",
                    "subtype_model": "EngineLiteralWeeklySchedule"
                },
                {
                    "subtype_name": "EngineOperatorBinaryForStringSet",
                    "subtype_model": "EngineOperatorBinaryForStringSet"
                },
                {
                    "subtype_name": "EngineOperatorUnaryAsList",
                    "subtype_model": "EngineOperatorUnaryAsList"
                },
                {
                    "subtype_name": "EngineOperatorUnaryDateTimeGetField",
                    "subtype_model": "EngineOperatorUnaryDateTimeGetField"
                },
                {
                    "subtype_name": "EngineOperatorUnaryDateTimeRangeFromCurrentTime",
                    "subtype_model": "EngineOperatorUnaryDateTimeRangeFromCurrentTime"
                },
                {
                    "subtype_name": "EngineOperatorUnaryIsEmpty",
                    "subtype_model": "EngineOperatorUnaryIsEmpty"
                },
                {
                    "subtype_name": "EngineOperatorUnaryIsNotEmpty",
                    "subtype_model": "EngineOperatorUnaryIsNotEmpty"
                },
                {
                    "subtype_name": "EngineOperatorUnaryIsNotNull",
                    "subtype_model": "EngineOperatorUnaryIsNotNull"
                },
                {
                    "subtype_name": "EngineOperatorUnaryIsNotValidNumber",
                    "subtype_model": "EngineOperatorUnaryIsNotValidNumber"
                },
                {
                    "subtype_name": "EngineOperatorUnaryIsNull",
                    "subtype_model": "EngineOperatorUnaryIsNull"
                },
                {
                    "subtype_name": "EngineOperatorUnaryIsValidNumber",
                    "subtype_model": "EngineOperatorUnaryIsValidNumber"
                },
                {
                    "subtype_name": "EngineOperatorUnaryListLength",
                    "subtype_model": "EngineOperatorUnaryListLength"
                },
                {
                    "subtype_name": "EngineOperatorUnaryLogicNot",
                    "subtype_model": "EngineOperatorUnaryLogicNot"
                },
                {
                    "subtype_name": "EngineOperatorUnaryRegexGetGroup",
                    "subtype_model": "EngineOperatorUnaryRegexGetGroup"
                },
                {
                    "subtype_name": "EngineOperatorUnaryStringToLowerCase",
                    "subtype_model": "EngineOperatorUnaryStringToLowerCase"
                },
                {
                    "subtype_name": "EngineOperatorUnaryStringToNumber",
                    "subtype_model": "EngineOperatorUnaryStringToNumber"
                },
                {
                    "subtype_name": "EngineOperatorUnaryStringToUpperCase",
                    "subtype_model": "EngineOperatorUnaryStringToUpperCase"
                },
                {
                    "subtype_name": "EngineProcedureDeclaration",
                    "subtype_model": "EngineProcedureDeclaration"
                },
                {
                    "subtype_name": "EngineStatementBreak",
                    "subtype_model": "EngineStatementBreak"
                },
                {
                    "subtype_name": "EngineStatementComment",
                    "subtype_model": "EngineStatementComment"
                },
                {
                    "subtype_name": "EngineStatementCommentSection",
                    "subtype_model": "EngineStatementCommentSection"
                },
                {
                    "subtype_name": "EngineStatementContinue",
                    "subtype_model": "EngineStatementContinue"
                },
                {
                    "subtype_name": "EngineStatementForEach",
                    "subtype_model": "EngineStatementForEach"
                },
                {
                    "subtype_name": "EngineStatementFunctionReturn",
                    "subtype_model": "EngineStatementFunctionReturn"
                },
                {
                    "subtype_name": "EngineStatementFunctionReturnValue",
                    "subtype_model": "EngineStatementFunctionReturnValue"
                },
                {
                    "subtype_name": "EngineStatementLog",
                    "subtype_model": "EngineStatementLog"
                },
                {
                    "subtype_name": "EngineStatementLogicIf",
                    "subtype_model": "EngineStatementLogicIf"
                },
                {
                    "subtype_name": "EngineStatementLookupTablePut",
                    "subtype_model": "EngineStatementLookupTablePut"
                },
                {
                    "subtype_name": "EngineStatementProcedureCall",
                    "subtype_model": "EngineStatementProcedureCall"
                },
                {
                    "subtype_name": "EngineStatementRepeatWhile",
                    "subtype_model": "EngineStatementRepeatWhile"
                },
                {
                    "subtype_name": "EngineStatementThreadEnd",
                    "subtype_model": "EngineStatementThreadEnd"
                },
                {
                    "subtype_name": "EngineThread",
                    "subtype_model": "EngineThread"
                },
                {
                    "subtype_name": "EngineVariableAssignment",
                    "subtype_model": "EngineVariableAssignment"
                },
                {
                    "subtype_name": "MetricsEngineCreateEnumeratedSeries",
                    "subtype_model": "MetricsEngineCreateEnumeratedSeries"
                },
                {
                    "subtype_name": "MetricsEngineCreateMultiStableSeries",
                    "subtype_model": "MetricsEngineCreateMultiStableSeries"
                },
                {
                    "subtype_name": "MetricsEngineCreateVector3",
                    "subtype_model": "MetricsEngineCreateVector3"
                },
                {
                    "subtype_name": "MetricsEngineInputParameterScalar",
                    "subtype_model": "MetricsEngineInputParameterScalar"
                },
                {
                    "subtype_name": "MetricsEngineInputParameterSeries",
                    "subtype_model": "MetricsEngineInputParameterSeries"
                },
                {
                    "subtype_name": "MetricsEngineInputParameterSeriesWithTimeOffset",
                    "subtype_model": "MetricsEngineInputParameterSeriesWithTimeOffset"
                },
                {
                    "subtype_name": "MetricsEngineInputParameterSetOfSeries",
                    "subtype_model": "MetricsEngineInputParameterSetOfSeries"
                },
                {
                    "subtype_name": "MetricsEngineLiteralScalar",
                    "subtype_model": "MetricsEngineLiteralScalar"
                },
                {
                    "subtype_name": "MetricsEngineOperatorAggregate",
                    "subtype_model": "MetricsEngineOperatorAggregate"
                },
                {
                    "subtype_name": "MetricsEngineOperatorBinary",
                    "subtype_model": "MetricsEngineOperatorBinary"
                },
                {
                    "subtype_name": "MetricsEngineOperatorBinaryBistable",
                    "subtype_model": "MetricsEngineOperatorBinaryBistable"
                },
                {
                    "subtype_name": "MetricsEngineOperatorBinaryLogic",
                    "subtype_model": "MetricsEngineOperatorBinaryLogic"
                },
                {
                    "subtype_name": "MetricsEngineOperatorFilter",
                    "subtype_model": "MetricsEngineOperatorFilter"
                },
                {
                    "subtype_name": "MetricsEngineOperatorFilterInsideSchedule",
                    "subtype_model": "MetricsEngineOperatorFilterInsideSchedule"
                },
                {
                    "subtype_name": "MetricsEngineOperatorFilterOutsideSchedule",
                    "subtype_model": "MetricsEngineOperatorFilterOutsideSchedule"
                },
                {
                    "subtype_name": "MetricsEngineOperatorGpsDistance",
                    "subtype_model": "MetricsEngineOperatorGpsDistance"
                },
                {
                    "subtype_name": "MetricsEngineOperatorGpsSunElevation",
                    "subtype_model": "MetricsEngineOperatorGpsSunElevation"
                },
                {
                    "subtype_name": "MetricsEngineOperatorThreshold",
                    "subtype_model": "MetricsEngineOperatorThreshold"
                },
                {
                    "subtype_name": "MetricsEngineOperatorThresholdCount",
                    "subtype_model": "MetricsEngineOperatorThresholdCount"
                },
                {
                    "subtype_name": "MetricsEngineOperatorThresholdDuration",
                    "subtype_model": "MetricsEngineOperatorThresholdDuration"
                },
                {
                    "subtype_name": "MetricsEngineOperatorThresholdEnum",
                    "subtype_model": "MetricsEngineOperatorThresholdEnum"
                },
                {
                    "subtype_name": "MetricsEngineOperatorThresholdPartialDuration",
                    "subtype_model": "MetricsEngineOperatorThresholdPartialDuration"
                },
                {
                    "subtype_name": "MetricsEngineOperatorThresholdRange",
                    "subtype_model": "MetricsEngineOperatorThresholdRange"
                },
                {
                    "subtype_name": "MetricsEngineOperatorUnaryAsSeries",
                    "subtype_model": "MetricsEngineOperatorUnaryAsSeries"
                },
                {
                    "subtype_name": "MetricsEngineOperatorUnaryNot",
                    "subtype_model": "MetricsEngineOperatorUnaryNot"
                },
                {
                    "subtype_name": "MetricsEngineOperatorUnarySelectValue",
                    "subtype_model": "MetricsEngineOperatorUnarySelectValue"
                },
                {
                    "subtype_name": "MetricsEngineOperatorVectorBinaryAdd",
                    "subtype_model": "MetricsEngineOperatorVectorBinaryAdd"
                },
                {
                    "subtype_name": "MetricsEngineOperatorVectorBinarySubtract",
                    "subtype_model": "MetricsEngineOperatorVectorBinarySubtract"
                },
                {
                    "subtype_name": "MetricsEngineStatementSetOutputToScalar",
                    "subtype_model": "MetricsEngineStatementSetOutputToScalar"
                },
                {
                    "subtype_name": "MetricsEngineStatementSetOutputToSeries",
                    "subtype_model": "MetricsEngineStatementSetOutputToSeries"
                },
                {
                    "subtype_name": "MetricsEngineStatementSetOutputToSeriesWithName",
                    "subtype_model": "MetricsEngineStatementSetOutputToSeriesWithName"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionCreateChildEquipment",
                    "subtype_model": "NormalizationEngineExpressionCreateChildEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionCreateEquipment",
                    "subtype_model": "NormalizationEngineExpressionCreateEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointClass",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointClass"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointDescription",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointDescription"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointIdentifier",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointIdentifier"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointLocation",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointLocation"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointName",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointName"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointNameRaw",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointNameRaw"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointOverrideName",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointOverrideName"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointUnits",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointUnits"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControlPointUnitsString",
                    "subtype_model": "NormalizationEngineExpressionGetControlPointUnitsString"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerBackupName",
                    "subtype_model": "NormalizationEngineExpressionGetControllerBackupName"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerDescription",
                    "subtype_model": "NormalizationEngineExpressionGetControllerDescription"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerIdentifier",
                    "subtype_model": "NormalizationEngineExpressionGetControllerIdentifier"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerInSubnet",
                    "subtype_model": "NormalizationEngineExpressionGetControllerInSubnet"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerLocation",
                    "subtype_model": "NormalizationEngineExpressionGetControllerLocation"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerModel",
                    "subtype_model": "NormalizationEngineExpressionGetControllerModel"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerName",
                    "subtype_model": "NormalizationEngineExpressionGetControllerName"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllerVendor",
                    "subtype_model": "NormalizationEngineExpressionGetControllerVendor"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetControllers",
                    "subtype_model": "NormalizationEngineExpressionGetControllers"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetDashboardEquipmentName",
                    "subtype_model": "NormalizationEngineExpressionGetDashboardEquipmentName"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetDashboardName",
                    "subtype_model": "NormalizationEngineExpressionGetDashboardName"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetEquipment",
                    "subtype_model": "NormalizationEngineExpressionGetEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetEquipmentClass",
                    "subtype_model": "NormalizationEngineExpressionGetEquipmentClass"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetEquipments",
                    "subtype_model": "NormalizationEngineExpressionGetEquipments"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetImportedStructure",
                    "subtype_model": "NormalizationEngineExpressionGetImportedStructure"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetInputValue",
                    "subtype_model": "NormalizationEngineExpressionGetInputValue"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetLocation",
                    "subtype_model": "NormalizationEngineExpressionGetLocation"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetMetadataNumber",
                    "subtype_model": "NormalizationEngineExpressionGetMetadataNumber"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetMetadataString",
                    "subtype_model": "NormalizationEngineExpressionGetMetadataString"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionGetTags",
                    "subtype_model": "NormalizationEngineExpressionGetTags"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionPushEquipment",
                    "subtype_model": "NormalizationEngineExpressionPushEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineExpressionPushEquipmentTable",
                    "subtype_model": "NormalizationEngineExpressionPushEquipmentTable"
                },
                {
                    "subtype_name": "NormalizationEngineLiteralDocumentSet",
                    "subtype_model": "NormalizationEngineLiteralDocumentSet"
                },
                {
                    "subtype_name": "NormalizationEngineLiteralEquipmentClass",
                    "subtype_model": "NormalizationEngineLiteralEquipmentClass"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorBinaryFilterDocumentSet",
                    "subtype_model": "NormalizationEngineOperatorBinaryFilterDocumentSet"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorBinaryGetJaccardIndex",
                    "subtype_model": "NormalizationEngineOperatorBinaryGetJaccardIndex"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorBinaryScoreDocuments",
                    "subtype_model": "NormalizationEngineOperatorBinaryScoreDocuments"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorBinaryScoreTopDocument",
                    "subtype_model": "NormalizationEngineOperatorBinaryScoreTopDocument"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetControllerPoints",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetControllerPoints"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetControllerProperty",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetControllerProperty"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetDocumentScore",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetDocumentScore"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetEquipmentClassId",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetEquipmentClassId"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetEquipmentClassName",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetEquipmentClassName"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetPointClassDescription",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetPointClassDescription"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetPointClassName",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetPointClassName"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryGetPointProperty",
                    "subtype_model": "NormalizationEngineOperatorUnaryGetPointProperty"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryNormalize",
                    "subtype_model": "NormalizationEngineOperatorUnaryNormalize"
                },
                {
                    "subtype_name": "NormalizationEngineOperatorUnaryTokenizeString",
                    "subtype_model": "NormalizationEngineOperatorUnaryTokenizeString"
                },
                {
                    "subtype_name": "NormalizationEngineStatementClearEquipment",
                    "subtype_model": "NormalizationEngineStatementClearEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineStatementPushEquipmentLocation",
                    "subtype_model": "NormalizationEngineStatementPushEquipmentLocation"
                },
                {
                    "subtype_name": "NormalizationEngineStatementPushEquipmentWithClass",
                    "subtype_model": "NormalizationEngineStatementPushEquipmentWithClass"
                },
                {
                    "subtype_name": "NormalizationEngineStatementPushLocation",
                    "subtype_model": "NormalizationEngineStatementPushLocation"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetEngineeringUnits",
                    "subtype_model": "NormalizationEngineStatementSetEngineeringUnits"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetEquipment",
                    "subtype_model": "NormalizationEngineStatementSetEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetEquipmentAndClassHint",
                    "subtype_model": "NormalizationEngineStatementSetEquipmentAndClassHint"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetEquipmentClassTable",
                    "subtype_model": "NormalizationEngineStatementSetEquipmentClassTable"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetMetadata",
                    "subtype_model": "NormalizationEngineStatementSetMetadata"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetOutputValue",
                    "subtype_model": "NormalizationEngineStatementSetOutputValue"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetPointClass",
                    "subtype_model": "NormalizationEngineStatementSetPointClass"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetPointClassFromDocument",
                    "subtype_model": "NormalizationEngineStatementSetPointClassFromDocument"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetPointClassFromTermScoring",
                    "subtype_model": "NormalizationEngineStatementSetPointClassFromTermScoring"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetPointClassTable",
                    "subtype_model": "NormalizationEngineStatementSetPointClassTable"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetSamplingPeriod",
                    "subtype_model": "NormalizationEngineStatementSetSamplingPeriod"
                },
                {
                    "subtype_name": "NormalizationEngineStatementSetTags",
                    "subtype_model": "NormalizationEngineStatementSetTags"
                }
            ]
        },
        "EngineComputation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineBlock"
                },
                {
                    "type": "object",
                    "properties": {
                        "statements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineStatement"
                            }
                        }
                    }
                }
            ]
        },
        "EngineConditionBlock": {
            "type": "object",
            "properties": {
                "condition": {
                    "$ref": "#/definitions/EngineExpression"
                },
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EngineStatement"
                    }
                }
            }
        },
        "EngineExecutionAssignment": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/EngineValue"
                }
            }
        },
        "EngineExecutionStep": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "enteringBlockId": {
                    "type": "string"
                },
                "leavingBlockId": {
                    "type": "string"
                },
                "assignment": {
                    "$ref": "#/definitions/EngineExecutionAssignment"
                },
                "notImplemented": {
                    "type": "string"
                },
                "failure": {
                    "type": "string"
                }
            },
            "x-optio3-type-name": "EngineExecutionStep",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AlertEngineExecutionStep",
                    "subtype_model": "AlertEngineExecutionStep"
                },
                {
                    "subtype_name": "AlertEngineExecutionStepCommitAction",
                    "subtype_model": "AlertEngineExecutionStepCommitAction"
                },
                {
                    "subtype_name": "AlertEngineExecutionStepCreateAlert",
                    "subtype_model": "AlertEngineExecutionStepCreateAlert"
                },
                {
                    "subtype_name": "AlertEngineExecutionStepSetAlertDescription",
                    "subtype_model": "AlertEngineExecutionStepSetAlertDescription"
                },
                {
                    "subtype_name": "AlertEngineExecutionStepSetAlertSeverity",
                    "subtype_model": "AlertEngineExecutionStepSetAlertSeverity"
                },
                {
                    "subtype_name": "AlertEngineExecutionStepSetAlertStatus",
                    "subtype_model": "AlertEngineExecutionStepSetAlertStatus"
                },
                {
                    "subtype_name": "AlertEngineExecutionStepSetAlertText",
                    "subtype_model": "AlertEngineExecutionStepSetAlertText"
                },
                {
                    "subtype_name": "AlertEngineExecutionStepSetControlPointValue",
                    "subtype_model": "AlertEngineExecutionStepSetControlPointValue"
                },
                {
                    "subtype_name": "MetricsEngineExecutionStep",
                    "subtype_model": "MetricsEngineExecutionStep"
                },
                {
                    "subtype_name": "NormalizationEngineExecutionStep",
                    "subtype_model": "NormalizationEngineExecutionStep"
                },
                {
                    "subtype_name": "NormalizationEngineExecutionStepEquipmentClassification",
                    "subtype_model": "NormalizationEngineExecutionStepEquipmentClassification"
                },
                {
                    "subtype_name": "NormalizationEngineExecutionStepPointClassification",
                    "subtype_model": "NormalizationEngineExecutionStepPointClassification"
                },
                {
                    "subtype_name": "NormalizationEngineExecutionStepPushEquipment",
                    "subtype_model": "NormalizationEngineExecutionStepPushEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineExecutionStepUnits",
                    "subtype_model": "NormalizationEngineExecutionStepUnits"
                }
            ]
        },
        "EngineExpression": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineBlock"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineExpressionBinaryApproximateEquality": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "epsilon": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryApproximateEquality"
        },
        "EngineExpressionBinaryCompareEngineeringUnits": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "GreaterThan",
                                "GreaterThanOrEqual"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineCompareOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryCompareEngineeringUnits"
        },
        "EngineExpressionBinaryDateTimeModify": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Add",
                                "Subtract"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineDateTimeOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryDateTimeModify"
        },
        "EngineExpressionBinaryDateTimeRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryDateTimeRange"
        },
        "EngineExpressionBinaryDateTimeRangeFromTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryDateTimeRangeFromTime"
        },
        "EngineExpressionBinaryDateTimeSetTimeZone": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryDateTimeSetTimeZone"
        },
        "EngineExpressionBinaryListContains": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryListContains"
        },
        "EngineExpressionBinaryListGet": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryListGet"
        },
        "EngineExpressionBinaryListJoin": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryListJoin"
        },
        "EngineExpressionBinaryLogicCompare": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "GreaterThan",
                                "GreaterThanOrEqual"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineCompareOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryLogicCompare"
        },
        "EngineExpressionBinaryLogicOperation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "and": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryLogicOperation"
        },
        "EngineExpressionBinaryLookupTableFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryLookupTableFilter"
        },
        "EngineExpressionBinaryLookupTableLookup": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryLookupTableLookup"
        },
        "EngineExpressionBinaryLookupTableReplace": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryLookupTableReplace"
        },
        "EngineExpressionBinaryRegexMatch": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryRegexMatch"
        },
        "EngineExpressionBinaryRegexMatchCaseSensitive": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryRegexMatchCaseSensitive"
        },
        "EngineExpressionBinaryRegexReplace": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryRegexReplace"
        },
        "EngineExpressionBinaryRegexTableReplace": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryRegexTableReplace"
        },
        "EngineExpressionBinaryStringConcat": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryStringConcat"
        },
        "EngineExpressionBinaryStringEndsWith": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryStringEndsWith"
        },
        "EngineExpressionBinaryStringIndexOf": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryStringIndexOf"
        },
        "EngineExpressionBinaryStringIsMatch": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryStringIsMatch"
        },
        "EngineExpressionBinaryStringSplit": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryStringSplit"
        },
        "EngineExpressionBinaryStringStartsWith": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryStringStartsWith"
        },
        "EngineExpressionBinaryWeeklyScheduleIsIncluded": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryWeeklyScheduleIsIncluded"
        },
        "EngineExpressionBinaryWeeklyScheduleSetTimeZone": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionBinaryWeeklyScheduleSetTimeZone"
        },
        "EngineExpressionCurrentDateTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionCurrentDateTime"
        },
        "EngineExpressionFormatText": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "format": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "arguments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineExpression"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionFormatText"
        },
        "EngineExpressionFromAlerts": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpression"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineExpressionFromCore": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpression"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineExpressionFromMetrics": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpression"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineExpressionFromNormalization": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpression"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineExpressionFunctionCall": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "functionId": {
                            "type": "string"
                        },
                        "arguments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineVariableAssignment"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionFunctionCall"
        },
        "EngineExpressionGetVariable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "variable": {
                            "$ref": "#/definitions/EngineVariableReference"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionGetVariable"
        },
        "EngineExpressionMemoize": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionMemoize"
        },
        "EngineExpressionRangeCheck": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "minRange": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "maxRange": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineExpressionRangeCheck"
        },
        "EngineInputParameter": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "EngineInputParameterBoolean": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineInputParameterBoolean"
        },
        "EngineInputParameterDateTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineInputParameterDateTime"
        },
        "EngineInputParameterDuration": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "NANOS",
                                "MICROS",
                                "MILLIS",
                                "SECONDS",
                                "MINUTES",
                                "HOURS",
                                "HALF_DAYS",
                                "DAYS",
                                "WEEKS",
                                "MONTHS",
                                "YEARS",
                                "DECADES",
                                "CENTURIES",
                                "MILLENNIA",
                                "ERAS",
                                "FOREVER"
                            ],
                            "x-optio3-enum-type": "java.time.temporal.ChronoUnit"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineInputParameterDuration"
        },
        "EngineInputParameterFromAlerts": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameter"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineInputParameterFromCore": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameter"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineInputParameterFromMetrics": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameter"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineInputParameterNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineInputParameterNumber"
        },
        "EngineInputParameterString": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineInputParameterString"
        },
        "EngineLiteral": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineLiteralBoolean": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralBoolean"
        },
        "EngineLiteralDateTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "zoneCreated": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralDateTime"
        },
        "EngineLiteralDuration": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "NANOS",
                                "MICROS",
                                "MILLIS",
                                "SECONDS",
                                "MINUTES",
                                "HOURS",
                                "HALF_DAYS",
                                "DAYS",
                                "WEEKS",
                                "MONTHS",
                                "YEARS",
                                "DECADES",
                                "CENTURIES",
                                "MILLENNIA",
                                "ERAS",
                                "FOREVER"
                            ],
                            "x-optio3-enum-type": "java.time.temporal.ChronoUnit"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralDuration"
        },
        "EngineLiteralEngineeringUnits": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralEngineeringUnits"
        },
        "EngineLiteralFromAlerts": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteral"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineLiteralFromCore": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteral"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineLiteralFromMetrics": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteral"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineLiteralFromNormalization": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteral"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineLiteralList": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineExpression"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralList"
        },
        "EngineLiteralLookupTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "entries": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupEntry"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralLookupTable"
        },
        "EngineLiteralNull": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralNull"
        },
        "EngineLiteralNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralNumber"
        },
        "EngineLiteralRegexReplaceTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "replacements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RegexReplacement"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralRegexReplaceTable"
        },
        "EngineLiteralString": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralString"
        },
        "EngineLiteralStringSet": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralStringSet"
        },
        "EngineLiteralTimeZone": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralTimeZone"
        },
        "EngineLiteralWeeklySchedule": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecurringWeeklySchedule"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineLiteralWeeklySchedule"
        },
        "EngineOperatorBinary": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "a": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "b": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ]
        },
        "EngineOperatorBinaryForStringSet": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Add",
                                "Subtract",
                                "Intersect"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineSetOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorBinaryForStringSet"
        },
        "EngineOperatorBinaryFromAlerts": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorBinaryFromCore": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorBinaryFromMetrics": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorBinaryFromNormalization": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorUnary": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "a": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ]
        },
        "EngineOperatorUnaryAsList": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryAsList"
        },
        "EngineOperatorUnaryDateTimeGetField": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "unit": {
                            "type": "string",
                            "enum": [
                                "NANOS",
                                "MICROS",
                                "MILLIS",
                                "SECONDS",
                                "MINUTES",
                                "HOURS",
                                "HALF_DAYS",
                                "DAYS",
                                "WEEKS",
                                "MONTHS",
                                "YEARS",
                                "DECADES",
                                "CENTURIES",
                                "MILLENNIA",
                                "ERAS",
                                "FOREVER"
                            ],
                            "x-optio3-enum-type": "java.time.temporal.ChronoUnit"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryDateTimeGetField"
        },
        "EngineOperatorUnaryDateTimeRangeFromCurrentTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryDateTimeRangeFromCurrentTime"
        },
        "EngineOperatorUnaryFromAlerts": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorUnaryFromCore": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorUnaryFromMetrics": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorUnaryFromNormalization": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineOperatorUnaryIsEmpty": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryIsEmpty"
        },
        "EngineOperatorUnaryIsNotEmpty": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryIsNotEmpty"
        },
        "EngineOperatorUnaryIsNotNull": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryIsNotNull"
        },
        "EngineOperatorUnaryIsNotValidNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryIsNotValidNumber"
        },
        "EngineOperatorUnaryIsNull": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryIsNull"
        },
        "EngineOperatorUnaryIsValidNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryIsValidNumber"
        },
        "EngineOperatorUnaryListLength": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryListLength"
        },
        "EngineOperatorUnaryLogicNot": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryLogicNot"
        },
        "EngineOperatorUnaryRegexGetGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryRegexGetGroup"
        },
        "EngineOperatorUnaryStringToLowerCase": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryStringToLowerCase"
        },
        "EngineOperatorUnaryStringToNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryStringToNumber"
        },
        "EngineOperatorUnaryStringToUpperCase": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineOperatorUnaryStringToUpperCase"
        },
        "EngineProcedureDeclaration": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineComputation"
                },
                {
                    "type": "object",
                    "properties": {
                        "functionId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "arguments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineVariableReference"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineProcedureDeclaration"
        },
        "EngineStatement": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineBlock"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineStatementBreak": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementBreak"
        },
        "EngineStatementComment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "text": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementComment"
        },
        "EngineStatementCommentSection": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "text": {
                            "type": "string"
                        },
                        "statements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineStatement"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementCommentSection"
        },
        "EngineStatementContinue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementContinue"
        },
        "EngineStatementForEach": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "list": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "variable": {
                            "$ref": "#/definitions/EngineVariable"
                        },
                        "statements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineStatement"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementForEach"
        },
        "EngineStatementFromAlerts": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatement"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineStatementFromCore": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatement"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineStatementFromMetrics": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatement"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineStatementFromNormalization": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatement"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "EngineStatementFunctionReturn": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementFunctionReturn"
        },
        "EngineStatementFunctionReturnValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementFunctionReturnValue"
        },
        "EngineStatementLog": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "format": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "arguments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineExpression"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementLog"
        },
        "EngineStatementLogicIf": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "ifElseBlocks": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineConditionBlock"
                            }
                        },
                        "elseStatements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineStatement"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementLogicIf"
        },
        "EngineStatementLookupTablePut": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "table": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "key": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "caseInsensitive": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementLookupTablePut"
        },
        "EngineStatementProcedureCall": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "functionId": {
                            "type": "string"
                        },
                        "arguments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineVariableAssignment"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementProcedureCall"
        },
        "EngineStatementRepeatWhile": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "condition": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "statements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineStatement"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementRepeatWhile"
        },
        "EngineStatementThreadEnd": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineStatementThreadEnd"
        },
        "EngineTab": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "blockChains": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/EngineBlock"
                        }
                    }
                }
            }
        },
        "EngineThread": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineComputation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "EngineThread"
        },
        "EngineValue": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AlertEngineValueAlert",
                    "subtype_model": "AlertEngineValueAlert"
                },
                {
                    "subtype_name": "AlertEngineValueAlertSeverity",
                    "subtype_model": "AlertEngineValueAlertSeverity"
                },
                {
                    "subtype_name": "AlertEngineValueAlertStatus",
                    "subtype_model": "AlertEngineValueAlertStatus"
                },
                {
                    "subtype_name": "AlertEngineValueAsset",
                    "subtype_model": "AlertEngineValueAsset"
                },
                {
                    "subtype_name": "AlertEngineValueAssetQueryCondition",
                    "subtype_model": "AlertEngineValueAssetQueryCondition"
                },
                {
                    "subtype_name": "AlertEngineValueAssets",
                    "subtype_model": "AlertEngineValueAssets"
                },
                {
                    "subtype_name": "AlertEngineValueControlPoint",
                    "subtype_model": "AlertEngineValueControlPoint"
                },
                {
                    "subtype_name": "AlertEngineValueControlPointCoordinates",
                    "subtype_model": "AlertEngineValueControlPointCoordinates"
                },
                {
                    "subtype_name": "AlertEngineValueControlPoints",
                    "subtype_model": "AlertEngineValueControlPoints"
                },
                {
                    "subtype_name": "AlertEngineValueDeliveryOptions",
                    "subtype_model": "AlertEngineValueDeliveryOptions"
                },
                {
                    "subtype_name": "AlertEngineValueDevice",
                    "subtype_model": "AlertEngineValueDevice"
                },
                {
                    "subtype_name": "AlertEngineValueEmail",
                    "subtype_model": "AlertEngineValueEmail"
                },
                {
                    "subtype_name": "AlertEngineValueLocation",
                    "subtype_model": "AlertEngineValueLocation"
                },
                {
                    "subtype_name": "AlertEngineValueLogicalAsset",
                    "subtype_model": "AlertEngineValueLogicalAsset"
                },
                {
                    "subtype_name": "AlertEngineValueSample",
                    "subtype_model": "AlertEngineValueSample"
                },
                {
                    "subtype_name": "AlertEngineValueSamples",
                    "subtype_model": "AlertEngineValueSamples"
                },
                {
                    "subtype_name": "AlertEngineValueSms",
                    "subtype_model": "AlertEngineValueSms"
                },
                {
                    "subtype_name": "AlertEngineValueTicket",
                    "subtype_model": "AlertEngineValueTicket"
                },
                {
                    "subtype_name": "AlertEngineValueTravelEntry",
                    "subtype_model": "AlertEngineValueTravelEntry"
                },
                {
                    "subtype_name": "AlertEngineValueTravelLog",
                    "subtype_model": "AlertEngineValueTravelLog"
                },
                {
                    "subtype_name": "EngineValueDateTime",
                    "subtype_model": "EngineValueDateTime"
                },
                {
                    "subtype_name": "EngineValueDateTimeList",
                    "subtype_model": "EngineValueDateTimeList"
                },
                {
                    "subtype_name": "EngineValueDateTimeRange",
                    "subtype_model": "EngineValueDateTimeRange"
                },
                {
                    "subtype_name": "EngineValueDuration",
                    "subtype_model": "EngineValueDuration"
                },
                {
                    "subtype_name": "EngineValueEngineeringUnits",
                    "subtype_model": "EngineValueEngineeringUnits"
                },
                {
                    "subtype_name": "EngineValueList",
                    "subtype_model": "EngineValueList"
                },
                {
                    "subtype_name": "EngineValueListConcrete",
                    "subtype_model": "EngineValueListConcrete"
                },
                {
                    "subtype_name": "EngineValueLookupTable",
                    "subtype_model": "EngineValueLookupTable"
                },
                {
                    "subtype_name": "EngineValuePrimitiveBoolean",
                    "subtype_model": "EngineValuePrimitiveBoolean"
                },
                {
                    "subtype_name": "EngineValuePrimitiveNumber",
                    "subtype_model": "EngineValuePrimitiveNumber"
                },
                {
                    "subtype_name": "EngineValuePrimitiveString",
                    "subtype_model": "EngineValuePrimitiveString"
                },
                {
                    "subtype_name": "EngineValueRegexMatch",
                    "subtype_model": "EngineValueRegexMatch"
                },
                {
                    "subtype_name": "EngineValueRegexReplaceTable",
                    "subtype_model": "EngineValueRegexReplaceTable"
                },
                {
                    "subtype_name": "EngineValueTimeZone",
                    "subtype_model": "EngineValueTimeZone"
                },
                {
                    "subtype_name": "EngineValueWeeklySchedule",
                    "subtype_model": "EngineValueWeeklySchedule"
                },
                {
                    "subtype_name": "MetricsEngineSelectValue",
                    "subtype_model": "MetricsEngineSelectValue"
                },
                {
                    "subtype_name": "MetricsEngineValueScalar",
                    "subtype_model": "MetricsEngineValueScalar"
                },
                {
                    "subtype_name": "MetricsEngineValueSeries",
                    "subtype_model": "MetricsEngineValueSeries"
                },
                {
                    "subtype_name": "MetricsEngineValueSetOfSeries",
                    "subtype_model": "MetricsEngineValueSetOfSeries"
                },
                {
                    "subtype_name": "NormalizationEngineValueController",
                    "subtype_model": "NormalizationEngineValueController"
                },
                {
                    "subtype_name": "NormalizationEngineValueDocument",
                    "subtype_model": "NormalizationEngineValueDocument"
                },
                {
                    "subtype_name": "NormalizationEngineValueEquipment",
                    "subtype_model": "NormalizationEngineValueEquipment"
                },
                {
                    "subtype_name": "NormalizationEngineValueLocation",
                    "subtype_model": "NormalizationEngineValueLocation"
                },
                {
                    "subtype_name": "NormalizationEngineValuePoint",
                    "subtype_model": "NormalizationEngineValuePoint"
                }
            ]
        },
        "EngineValueDateTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueDateTime"
        },
        "EngineValueDateTimeList": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValueListConcrete"
                },
                {
                    "type": "object",
                    "properties": {
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineValueDateTime"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueDateTimeList"
        },
        "EngineValueDateTimeRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "start": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "end": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueDateTimeRange"
        },
        "EngineValueDuration": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "NANOS",
                                "MICROS",
                                "MILLIS",
                                "SECONDS",
                                "MINUTES",
                                "HOURS",
                                "HALF_DAYS",
                                "DAYS",
                                "WEEKS",
                                "MONTHS",
                                "YEARS",
                                "DECADES",
                                "CENTURIES",
                                "MILLENNIA",
                                "ERAS",
                                "FOREVER"
                            ],
                            "x-optio3-enum-type": "java.time.temporal.ChronoUnit"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueDuration"
        },
        "EngineValueEngineeringUnits": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueEngineeringUnits"
        },
        "EngineValueList": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "length": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueList"
        },
        "EngineValueListConcrete": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValueList"
                },
                {
                    "type": "object",
                    "properties": {
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineValue"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueListConcrete"
        },
        "EngineValueListIterator": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object"
                }
            ]
        },
        "EngineValueLookupTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "EngineValueLookupTable"
        },
        "EngineValuePrimitive": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object"
                }
            ]
        },
        "EngineValuePrimitiveBoolean": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValuePrimitive"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValuePrimitiveBoolean"
        },
        "EngineValuePrimitiveNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValuePrimitive"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValuePrimitiveNumber"
        },
        "EngineValuePrimitiveString": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValuePrimitive"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValuePrimitiveString"
        },
        "EngineValueRegexMatch": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "regEx": {
                            "type": "string"
                        },
                        "input": {
                            "type": "string"
                        },
                        "caseSensitive": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueRegexMatch"
        },
        "EngineValueRegexReplaceTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "replacements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RegexReplacement"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueRegexReplaceTable"
        },
        "EngineValueTimeZone": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueTimeZone"
        },
        "EngineValueWeeklySchedule": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecurringWeeklySchedule"
                        },
                        "zoneCreated": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineValueWeeklySchedule"
        },
        "EngineVariable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "EngineVariableAssignment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromCore"
                },
                {
                    "type": "object",
                    "properties": {
                        "variable": {
                            "$ref": "#/definitions/EngineVariable"
                        },
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EngineVariableAssignment"
        },
        "EngineVariableReference": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "EngineeringUnitsConversionRequest": {
            "type": "object",
            "properties": {
                "convertFrom": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "convertTo": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "value": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "EngineeringUnitsConversionResponse": {
            "type": "object",
            "properties": {
                "units": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "value": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "EngineeringUnitsDescriptor": {
            "type": "object",
            "properties": {
                "units": {
                    "type": "string",
                    "enum": [
                        "enumerated",
                        "onOff",
                        "activeInactive",
                        "constant",
                        "log",
                        "meters",
                        "nanometers",
                        "micrometers",
                        "millimeters",
                        "centimeters",
                        "kilometers",
                        "inches",
                        "feet",
                        "miles",
                        "seconds",
                        "hundredths_seconds",
                        "milliseconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "years",
                        "grams",
                        "nanograms",
                        "micrograms",
                        "milligrams",
                        "kilograms",
                        "pounds_mass",
                        "tons",
                        "meters_per_second",
                        "meters_per_minute",
                        "meters_per_hour",
                        "millimeters_per_second",
                        "millimeters_per_minute",
                        "millimeters_per_hour",
                        "kilometers_per_hour",
                        "feet_per_second",
                        "feet_per_minute",
                        "miles_per_hour",
                        "knots",
                        "longitude",
                        "latitude",
                        "meters_per_second_per_second",
                        "millig",
                        "cubic_meters",
                        "cubic_feet",
                        "liters",
                        "milliliters",
                        "imperial_gallons",
                        "us_gallons",
                        "cubic_feet_per_minute",
                        "cubic_feet_per_second",
                        "cubic_feet_per_hour",
                        "cubic_feet_per_day",
                        "thousand_cubic_feet_per_day",
                        "standard_cubic_feet_per_day",
                        "million_standard_cubic_feet_per_minute",
                        "million_standard_cubic_feet_per_day",
                        "thousand_standard_cubic_feet_per_day",
                        "cubic_meters_per_minute",
                        "cubic_meters_per_second",
                        "cubic_meters_per_hour",
                        "cubic_meters_per_day",
                        "liters_per_second",
                        "liters_per_minute",
                        "liters_per_hour",
                        "milliliters_per_second",
                        "pounds_mass_per_day",
                        "imperial_gallons_per_minute",
                        "us_gallons_per_minute",
                        "us_gallons_per_hour",
                        "square_meters",
                        "square_centimeters",
                        "square_feet",
                        "square_inches",
                        "currency_dollar_US",
                        "currency_dollar_Canadian",
                        "currency_euro",
                        "currency_generic",
                        "amperes",
                        "milliamperes",
                        "kiloamperes",
                        "megaamperes",
                        "volts",
                        "millivolts",
                        "kilovolts",
                        "megavolts",
                        "watts",
                        "milliwatts",
                        "kilowatts",
                        "megawatts",
                        "amperes_per_meter",
                        "amperes_per_square_meter",
                        "ampere_square_meters",
                        "ohms",
                        "milliohms",
                        "kilohms",
                        "megohms",
                        "ohm_meters",
                        "ohm_meter_squared_per_meter",
                        "siemens",
                        "millisiemens",
                        "microsiemens",
                        "siemens_per_meter",
                        "microsiemens_per_millimeter",
                        "decibels",
                        "decibels_milliwatts",
                        "decibels_millivolt",
                        "decibels_volt",
                        "farads",
                        "henrys",
                        "teslas",
                        "webers",
                        "power_factor",
                        "volt_amperes",
                        "kilovolt_amperes",
                        "megavolt_amperes",
                        "volt_amperes_reactive",
                        "kilovolt_amperes_reactive",
                        "megavolt_amperes_reactive",
                        "volts_per_meter",
                        "volts_per_degree_kelvin",
                        "degrees_phase",
                        "ampere_seconds",
                        "ampere_hours",
                        "volt_ampere_hours",
                        "kilovolt_ampere_hours",
                        "megavolt_ampere_hours",
                        "volt_ampere_hours_reactive",
                        "kilovolt_ampere_hours_reactive",
                        "megavolt_ampere_hours_reactive",
                        "volt_square_hours",
                        "ampere_square_hours",
                        "joules",
                        "kilojoules",
                        "megajoules",
                        "kilojoules_per_kilogram",
                        "watt_hours",
                        "kilowatt_hours",
                        "megawatt_hours",
                        "watt_hours_reactive",
                        "kilowatt_hours_reactive",
                        "megawatt_hours_reactive",
                        "btus",
                        "kilo_btus",
                        "mega_btus",
                        "therms",
                        "ton_hours",
                        "joules_per_kilogram_dry_air",
                        "kilojoules_per_kilogram_dry_air",
                        "megajoules_per_kilogram_dry_air",
                        "btus_per_pound_dry_air",
                        "btus_per_pound",
                        "joules_per_degree_kelvin",
                        "kilojoules_per_degree_kelvin",
                        "megajoules_per_degree_kelvin",
                        "joules_per_kilogram_degree_kelvin",
                        "newton",
                        "newton_meters",
                        "hertz",
                        "kilohertz",
                        "megahertz",
                        "cycles_per_minute",
                        "cycles_per_hour",
                        "per_hour",
                        "per_minute",
                        "per_second",
                        "grams_of_water_per_kilogram_dry_air",
                        "percent_relative_humidity",
                        "watts_per_square_foot",
                        "watts_per_square_meter",
                        "milliwatts_per_square_centimeter",
                        "candelas",
                        "candelas_per_square_meter",
                        "lumens",
                        "luxes",
                        "foot_candles",
                        "grams_per_second",
                        "grams_per_minute",
                        "kilograms_per_second",
                        "kilograms_per_minute",
                        "kilograms_per_hour",
                        "pounds_mass_per_second",
                        "pounds_mass_per_minute",
                        "pounds_mass_per_hour",
                        "tons_per_hour",
                        "btus_per_hour",
                        "kilo_btus_per_hour",
                        "joule_per_hours",
                        "horsepower",
                        "tons_refrigeration",
                        "pascals",
                        "hectopascals",
                        "kilopascals",
                        "megapascals",
                        "millibars",
                        "bars",
                        "pounds_force_per_square_inch",
                        "millimeters_of_water",
                        "centimeters_of_water",
                        "inches_of_water",
                        "millimeters_of_mercury",
                        "centimeters_of_mercury",
                        "inches_of_mercury",
                        "degrees_celsius",
                        "degrees_kelvin",
                        "degrees_fahrenheit",
                        "degrees_kelvin_per_hour",
                        "degrees_kelvin_per_minute",
                        "degrees_celsius_per_hour",
                        "degrees_celsius_per_minute",
                        "degrees_fahrenheit_per_hour",
                        "degrees_fahrenheit_per_minute",
                        "degree_days_celsius",
                        "degree_days_fahrenheit",
                        "delta_degrees_kelvin",
                        "delta_degrees_fahrenheit",
                        "no_units",
                        "ticks",
                        "counts",
                        "bytes",
                        "kilo_bytes",
                        "mega_bytes",
                        "giga_bytes",
                        "tera_bytes",
                        "degrees_angular",
                        "radians",
                        "degrees_angular_per_second",
                        "radians_per_second",
                        "mole_percent",
                        "percent",
                        "per_mille",
                        "percent_per_second",
                        "percent_obscuration_per_meter",
                        "percent_obscuration_per_foot",
                        "parts_per_million",
                        "parts_per_billion",
                        "revolutions_per_minute",
                        "joule_seconds",
                        "newton_seconds",
                        "newtons_per_meter",
                        "pascal_seconds",
                        "psi_per_degree_fahrenheit",
                        "kilograms_per_cubic_meter",
                        "kilometers_per_liter",
                        "miles_per_us_gallon",
                        "kilowatts_per_ton",
                        "kilowatt_hours_per_square_meter",
                        "kilowatt_hours_per_square_foot",
                        "watt_hours_per_cubic_meter",
                        "joules_per_cubic_meter",
                        "megajoules_per_square_meter",
                        "megajoules_per_square_foot",
                        "square_meters_per_newton",
                        "watts_per_meter_per_degree_kelvin",
                        "watts_per_square_meter_degree_kelvin",
                        "grams_per_gram",
                        "kilograms_per_kilogram",
                        "grams_per_kilogram",
                        "milligrams_per_gram",
                        "milligrams_per_kilogram",
                        "grams_per_milliliter",
                        "grams_per_liter",
                        "grams_per_square_meter",
                        "milligrams_per_liter",
                        "micrograms_per_liter",
                        "grams_per_cubic_meter",
                        "milligrams_per_cubic_meter",
                        "micrograms_per_cubic_meter",
                        "nanograms_per_cubic_meter",
                        "grams_per_cubic_centimeter",
                        "becquerels",
                        "kilobecquerels",
                        "megabecquerels",
                        "gray",
                        "milligray",
                        "microgray",
                        "sieverts",
                        "millisieverts",
                        "microsieverts",
                        "microsieverts_per_hour",
                        "millirems",
                        "millirems_per_hour",
                        "decibels_a",
                        "nephelometric_turbidity_unit",
                        "pH",
                        "minutes_per_degree_kelvin"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "family": {
                    "type": "string",
                    "enum": [
                        "Acceleration",
                        "Area",
                        "Currency",
                        "Electrical",
                        "Energy",
                        "Enthalpy",
                        "Entropy",
                        "Force",
                        "Frequency",
                        "Humidity",
                        "Length",
                        "Light",
                        "Mass",
                        "MassFlow",
                        "Power",
                        "Pressure",
                        "Temperature",
                        "Time",
                        "Torque",
                        "Velocity",
                        "Volume",
                        "VolumetricFlow",
                        "Other",
                        "Constant",
                        "Enumerated",
                        "Binary"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnitsFamily"
                },
                "factors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                }
            }
        },
        "EngineeringUnitsFactors": {
            "type": "object",
            "properties": {
                "scaling": {
                    "$ref": "#/definitions/EngineeringUnitsFactorsScaling"
                },
                "numeratorUnits": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "enumerated",
                            "onOff",
                            "activeInactive",
                            "constant",
                            "log",
                            "meters",
                            "nanometers",
                            "micrometers",
                            "millimeters",
                            "centimeters",
                            "kilometers",
                            "inches",
                            "feet",
                            "miles",
                            "seconds",
                            "hundredths_seconds",
                            "milliseconds",
                            "minutes",
                            "hours",
                            "days",
                            "weeks",
                            "months",
                            "years",
                            "grams",
                            "nanograms",
                            "micrograms",
                            "milligrams",
                            "kilograms",
                            "pounds_mass",
                            "tons",
                            "meters_per_second",
                            "meters_per_minute",
                            "meters_per_hour",
                            "millimeters_per_second",
                            "millimeters_per_minute",
                            "millimeters_per_hour",
                            "kilometers_per_hour",
                            "feet_per_second",
                            "feet_per_minute",
                            "miles_per_hour",
                            "knots",
                            "longitude",
                            "latitude",
                            "meters_per_second_per_second",
                            "millig",
                            "cubic_meters",
                            "cubic_feet",
                            "liters",
                            "milliliters",
                            "imperial_gallons",
                            "us_gallons",
                            "cubic_feet_per_minute",
                            "cubic_feet_per_second",
                            "cubic_feet_per_hour",
                            "cubic_feet_per_day",
                            "thousand_cubic_feet_per_day",
                            "standard_cubic_feet_per_day",
                            "million_standard_cubic_feet_per_minute",
                            "million_standard_cubic_feet_per_day",
                            "thousand_standard_cubic_feet_per_day",
                            "cubic_meters_per_minute",
                            "cubic_meters_per_second",
                            "cubic_meters_per_hour",
                            "cubic_meters_per_day",
                            "liters_per_second",
                            "liters_per_minute",
                            "liters_per_hour",
                            "milliliters_per_second",
                            "pounds_mass_per_day",
                            "imperial_gallons_per_minute",
                            "us_gallons_per_minute",
                            "us_gallons_per_hour",
                            "square_meters",
                            "square_centimeters",
                            "square_feet",
                            "square_inches",
                            "currency_dollar_US",
                            "currency_dollar_Canadian",
                            "currency_euro",
                            "currency_generic",
                            "amperes",
                            "milliamperes",
                            "kiloamperes",
                            "megaamperes",
                            "volts",
                            "millivolts",
                            "kilovolts",
                            "megavolts",
                            "watts",
                            "milliwatts",
                            "kilowatts",
                            "megawatts",
                            "amperes_per_meter",
                            "amperes_per_square_meter",
                            "ampere_square_meters",
                            "ohms",
                            "milliohms",
                            "kilohms",
                            "megohms",
                            "ohm_meters",
                            "ohm_meter_squared_per_meter",
                            "siemens",
                            "millisiemens",
                            "microsiemens",
                            "siemens_per_meter",
                            "microsiemens_per_millimeter",
                            "decibels",
                            "decibels_milliwatts",
                            "decibels_millivolt",
                            "decibels_volt",
                            "farads",
                            "henrys",
                            "teslas",
                            "webers",
                            "power_factor",
                            "volt_amperes",
                            "kilovolt_amperes",
                            "megavolt_amperes",
                            "volt_amperes_reactive",
                            "kilovolt_amperes_reactive",
                            "megavolt_amperes_reactive",
                            "volts_per_meter",
                            "volts_per_degree_kelvin",
                            "degrees_phase",
                            "ampere_seconds",
                            "ampere_hours",
                            "volt_ampere_hours",
                            "kilovolt_ampere_hours",
                            "megavolt_ampere_hours",
                            "volt_ampere_hours_reactive",
                            "kilovolt_ampere_hours_reactive",
                            "megavolt_ampere_hours_reactive",
                            "volt_square_hours",
                            "ampere_square_hours",
                            "joules",
                            "kilojoules",
                            "megajoules",
                            "kilojoules_per_kilogram",
                            "watt_hours",
                            "kilowatt_hours",
                            "megawatt_hours",
                            "watt_hours_reactive",
                            "kilowatt_hours_reactive",
                            "megawatt_hours_reactive",
                            "btus",
                            "kilo_btus",
                            "mega_btus",
                            "therms",
                            "ton_hours",
                            "joules_per_kilogram_dry_air",
                            "kilojoules_per_kilogram_dry_air",
                            "megajoules_per_kilogram_dry_air",
                            "btus_per_pound_dry_air",
                            "btus_per_pound",
                            "joules_per_degree_kelvin",
                            "kilojoules_per_degree_kelvin",
                            "megajoules_per_degree_kelvin",
                            "joules_per_kilogram_degree_kelvin",
                            "newton",
                            "newton_meters",
                            "hertz",
                            "kilohertz",
                            "megahertz",
                            "cycles_per_minute",
                            "cycles_per_hour",
                            "per_hour",
                            "per_minute",
                            "per_second",
                            "grams_of_water_per_kilogram_dry_air",
                            "percent_relative_humidity",
                            "watts_per_square_foot",
                            "watts_per_square_meter",
                            "milliwatts_per_square_centimeter",
                            "candelas",
                            "candelas_per_square_meter",
                            "lumens",
                            "luxes",
                            "foot_candles",
                            "grams_per_second",
                            "grams_per_minute",
                            "kilograms_per_second",
                            "kilograms_per_minute",
                            "kilograms_per_hour",
                            "pounds_mass_per_second",
                            "pounds_mass_per_minute",
                            "pounds_mass_per_hour",
                            "tons_per_hour",
                            "btus_per_hour",
                            "kilo_btus_per_hour",
                            "joule_per_hours",
                            "horsepower",
                            "tons_refrigeration",
                            "pascals",
                            "hectopascals",
                            "kilopascals",
                            "megapascals",
                            "millibars",
                            "bars",
                            "pounds_force_per_square_inch",
                            "millimeters_of_water",
                            "centimeters_of_water",
                            "inches_of_water",
                            "millimeters_of_mercury",
                            "centimeters_of_mercury",
                            "inches_of_mercury",
                            "degrees_celsius",
                            "degrees_kelvin",
                            "degrees_fahrenheit",
                            "degrees_kelvin_per_hour",
                            "degrees_kelvin_per_minute",
                            "degrees_celsius_per_hour",
                            "degrees_celsius_per_minute",
                            "degrees_fahrenheit_per_hour",
                            "degrees_fahrenheit_per_minute",
                            "degree_days_celsius",
                            "degree_days_fahrenheit",
                            "delta_degrees_kelvin",
                            "delta_degrees_fahrenheit",
                            "no_units",
                            "ticks",
                            "counts",
                            "bytes",
                            "kilo_bytes",
                            "mega_bytes",
                            "giga_bytes",
                            "tera_bytes",
                            "degrees_angular",
                            "radians",
                            "degrees_angular_per_second",
                            "radians_per_second",
                            "mole_percent",
                            "percent",
                            "per_mille",
                            "percent_per_second",
                            "percent_obscuration_per_meter",
                            "percent_obscuration_per_foot",
                            "parts_per_million",
                            "parts_per_billion",
                            "revolutions_per_minute",
                            "joule_seconds",
                            "newton_seconds",
                            "newtons_per_meter",
                            "pascal_seconds",
                            "psi_per_degree_fahrenheit",
                            "kilograms_per_cubic_meter",
                            "kilometers_per_liter",
                            "miles_per_us_gallon",
                            "kilowatts_per_ton",
                            "kilowatt_hours_per_square_meter",
                            "kilowatt_hours_per_square_foot",
                            "watt_hours_per_cubic_meter",
                            "joules_per_cubic_meter",
                            "megajoules_per_square_meter",
                            "megajoules_per_square_foot",
                            "square_meters_per_newton",
                            "watts_per_meter_per_degree_kelvin",
                            "watts_per_square_meter_degree_kelvin",
                            "grams_per_gram",
                            "kilograms_per_kilogram",
                            "grams_per_kilogram",
                            "milligrams_per_gram",
                            "milligrams_per_kilogram",
                            "grams_per_milliliter",
                            "grams_per_liter",
                            "grams_per_square_meter",
                            "milligrams_per_liter",
                            "micrograms_per_liter",
                            "grams_per_cubic_meter",
                            "milligrams_per_cubic_meter",
                            "micrograms_per_cubic_meter",
                            "nanograms_per_cubic_meter",
                            "grams_per_cubic_centimeter",
                            "becquerels",
                            "kilobecquerels",
                            "megabecquerels",
                            "gray",
                            "milligray",
                            "microgray",
                            "sieverts",
                            "millisieverts",
                            "microsieverts",
                            "microsieverts_per_hour",
                            "millirems",
                            "millirems_per_hour",
                            "decibels_a",
                            "nephelometric_turbidity_unit",
                            "pH",
                            "minutes_per_degree_kelvin"
                        ],
                        "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                    }
                },
                "denominatorUnits": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "enumerated",
                            "onOff",
                            "activeInactive",
                            "constant",
                            "log",
                            "meters",
                            "nanometers",
                            "micrometers",
                            "millimeters",
                            "centimeters",
                            "kilometers",
                            "inches",
                            "feet",
                            "miles",
                            "seconds",
                            "hundredths_seconds",
                            "milliseconds",
                            "minutes",
                            "hours",
                            "days",
                            "weeks",
                            "months",
                            "years",
                            "grams",
                            "nanograms",
                            "micrograms",
                            "milligrams",
                            "kilograms",
                            "pounds_mass",
                            "tons",
                            "meters_per_second",
                            "meters_per_minute",
                            "meters_per_hour",
                            "millimeters_per_second",
                            "millimeters_per_minute",
                            "millimeters_per_hour",
                            "kilometers_per_hour",
                            "feet_per_second",
                            "feet_per_minute",
                            "miles_per_hour",
                            "knots",
                            "longitude",
                            "latitude",
                            "meters_per_second_per_second",
                            "millig",
                            "cubic_meters",
                            "cubic_feet",
                            "liters",
                            "milliliters",
                            "imperial_gallons",
                            "us_gallons",
                            "cubic_feet_per_minute",
                            "cubic_feet_per_second",
                            "cubic_feet_per_hour",
                            "cubic_feet_per_day",
                            "thousand_cubic_feet_per_day",
                            "standard_cubic_feet_per_day",
                            "million_standard_cubic_feet_per_minute",
                            "million_standard_cubic_feet_per_day",
                            "thousand_standard_cubic_feet_per_day",
                            "cubic_meters_per_minute",
                            "cubic_meters_per_second",
                            "cubic_meters_per_hour",
                            "cubic_meters_per_day",
                            "liters_per_second",
                            "liters_per_minute",
                            "liters_per_hour",
                            "milliliters_per_second",
                            "pounds_mass_per_day",
                            "imperial_gallons_per_minute",
                            "us_gallons_per_minute",
                            "us_gallons_per_hour",
                            "square_meters",
                            "square_centimeters",
                            "square_feet",
                            "square_inches",
                            "currency_dollar_US",
                            "currency_dollar_Canadian",
                            "currency_euro",
                            "currency_generic",
                            "amperes",
                            "milliamperes",
                            "kiloamperes",
                            "megaamperes",
                            "volts",
                            "millivolts",
                            "kilovolts",
                            "megavolts",
                            "watts",
                            "milliwatts",
                            "kilowatts",
                            "megawatts",
                            "amperes_per_meter",
                            "amperes_per_square_meter",
                            "ampere_square_meters",
                            "ohms",
                            "milliohms",
                            "kilohms",
                            "megohms",
                            "ohm_meters",
                            "ohm_meter_squared_per_meter",
                            "siemens",
                            "millisiemens",
                            "microsiemens",
                            "siemens_per_meter",
                            "microsiemens_per_millimeter",
                            "decibels",
                            "decibels_milliwatts",
                            "decibels_millivolt",
                            "decibels_volt",
                            "farads",
                            "henrys",
                            "teslas",
                            "webers",
                            "power_factor",
                            "volt_amperes",
                            "kilovolt_amperes",
                            "megavolt_amperes",
                            "volt_amperes_reactive",
                            "kilovolt_amperes_reactive",
                            "megavolt_amperes_reactive",
                            "volts_per_meter",
                            "volts_per_degree_kelvin",
                            "degrees_phase",
                            "ampere_seconds",
                            "ampere_hours",
                            "volt_ampere_hours",
                            "kilovolt_ampere_hours",
                            "megavolt_ampere_hours",
                            "volt_ampere_hours_reactive",
                            "kilovolt_ampere_hours_reactive",
                            "megavolt_ampere_hours_reactive",
                            "volt_square_hours",
                            "ampere_square_hours",
                            "joules",
                            "kilojoules",
                            "megajoules",
                            "kilojoules_per_kilogram",
                            "watt_hours",
                            "kilowatt_hours",
                            "megawatt_hours",
                            "watt_hours_reactive",
                            "kilowatt_hours_reactive",
                            "megawatt_hours_reactive",
                            "btus",
                            "kilo_btus",
                            "mega_btus",
                            "therms",
                            "ton_hours",
                            "joules_per_kilogram_dry_air",
                            "kilojoules_per_kilogram_dry_air",
                            "megajoules_per_kilogram_dry_air",
                            "btus_per_pound_dry_air",
                            "btus_per_pound",
                            "joules_per_degree_kelvin",
                            "kilojoules_per_degree_kelvin",
                            "megajoules_per_degree_kelvin",
                            "joules_per_kilogram_degree_kelvin",
                            "newton",
                            "newton_meters",
                            "hertz",
                            "kilohertz",
                            "megahertz",
                            "cycles_per_minute",
                            "cycles_per_hour",
                            "per_hour",
                            "per_minute",
                            "per_second",
                            "grams_of_water_per_kilogram_dry_air",
                            "percent_relative_humidity",
                            "watts_per_square_foot",
                            "watts_per_square_meter",
                            "milliwatts_per_square_centimeter",
                            "candelas",
                            "candelas_per_square_meter",
                            "lumens",
                            "luxes",
                            "foot_candles",
                            "grams_per_second",
                            "grams_per_minute",
                            "kilograms_per_second",
                            "kilograms_per_minute",
                            "kilograms_per_hour",
                            "pounds_mass_per_second",
                            "pounds_mass_per_minute",
                            "pounds_mass_per_hour",
                            "tons_per_hour",
                            "btus_per_hour",
                            "kilo_btus_per_hour",
                            "joule_per_hours",
                            "horsepower",
                            "tons_refrigeration",
                            "pascals",
                            "hectopascals",
                            "kilopascals",
                            "megapascals",
                            "millibars",
                            "bars",
                            "pounds_force_per_square_inch",
                            "millimeters_of_water",
                            "centimeters_of_water",
                            "inches_of_water",
                            "millimeters_of_mercury",
                            "centimeters_of_mercury",
                            "inches_of_mercury",
                            "degrees_celsius",
                            "degrees_kelvin",
                            "degrees_fahrenheit",
                            "degrees_kelvin_per_hour",
                            "degrees_kelvin_per_minute",
                            "degrees_celsius_per_hour",
                            "degrees_celsius_per_minute",
                            "degrees_fahrenheit_per_hour",
                            "degrees_fahrenheit_per_minute",
                            "degree_days_celsius",
                            "degree_days_fahrenheit",
                            "delta_degrees_kelvin",
                            "delta_degrees_fahrenheit",
                            "no_units",
                            "ticks",
                            "counts",
                            "bytes",
                            "kilo_bytes",
                            "mega_bytes",
                            "giga_bytes",
                            "tera_bytes",
                            "degrees_angular",
                            "radians",
                            "degrees_angular_per_second",
                            "radians_per_second",
                            "mole_percent",
                            "percent",
                            "per_mille",
                            "percent_per_second",
                            "percent_obscuration_per_meter",
                            "percent_obscuration_per_foot",
                            "parts_per_million",
                            "parts_per_billion",
                            "revolutions_per_minute",
                            "joule_seconds",
                            "newton_seconds",
                            "newtons_per_meter",
                            "pascal_seconds",
                            "psi_per_degree_fahrenheit",
                            "kilograms_per_cubic_meter",
                            "kilometers_per_liter",
                            "miles_per_us_gallon",
                            "kilowatts_per_ton",
                            "kilowatt_hours_per_square_meter",
                            "kilowatt_hours_per_square_foot",
                            "watt_hours_per_cubic_meter",
                            "joules_per_cubic_meter",
                            "megajoules_per_square_meter",
                            "megajoules_per_square_foot",
                            "square_meters_per_newton",
                            "watts_per_meter_per_degree_kelvin",
                            "watts_per_square_meter_degree_kelvin",
                            "grams_per_gram",
                            "kilograms_per_kilogram",
                            "grams_per_kilogram",
                            "milligrams_per_gram",
                            "milligrams_per_kilogram",
                            "grams_per_milliliter",
                            "grams_per_liter",
                            "grams_per_square_meter",
                            "milligrams_per_liter",
                            "micrograms_per_liter",
                            "grams_per_cubic_meter",
                            "milligrams_per_cubic_meter",
                            "micrograms_per_cubic_meter",
                            "nanograms_per_cubic_meter",
                            "grams_per_cubic_centimeter",
                            "becquerels",
                            "kilobecquerels",
                            "megabecquerels",
                            "gray",
                            "milligray",
                            "microgray",
                            "sieverts",
                            "millisieverts",
                            "microsieverts",
                            "microsieverts_per_hour",
                            "millirems",
                            "millirems_per_hour",
                            "decibels_a",
                            "nephelometric_turbidity_unit",
                            "pH",
                            "minutes_per_degree_kelvin"
                        ],
                        "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                    }
                },
                "primary": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "enumerated",
                        "onOff",
                        "activeInactive",
                        "constant",
                        "log",
                        "meters",
                        "nanometers",
                        "micrometers",
                        "millimeters",
                        "centimeters",
                        "kilometers",
                        "inches",
                        "feet",
                        "miles",
                        "seconds",
                        "hundredths_seconds",
                        "milliseconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "years",
                        "grams",
                        "nanograms",
                        "micrograms",
                        "milligrams",
                        "kilograms",
                        "pounds_mass",
                        "tons",
                        "meters_per_second",
                        "meters_per_minute",
                        "meters_per_hour",
                        "millimeters_per_second",
                        "millimeters_per_minute",
                        "millimeters_per_hour",
                        "kilometers_per_hour",
                        "feet_per_second",
                        "feet_per_minute",
                        "miles_per_hour",
                        "knots",
                        "longitude",
                        "latitude",
                        "meters_per_second_per_second",
                        "millig",
                        "cubic_meters",
                        "cubic_feet",
                        "liters",
                        "milliliters",
                        "imperial_gallons",
                        "us_gallons",
                        "cubic_feet_per_minute",
                        "cubic_feet_per_second",
                        "cubic_feet_per_hour",
                        "cubic_feet_per_day",
                        "thousand_cubic_feet_per_day",
                        "standard_cubic_feet_per_day",
                        "million_standard_cubic_feet_per_minute",
                        "million_standard_cubic_feet_per_day",
                        "thousand_standard_cubic_feet_per_day",
                        "cubic_meters_per_minute",
                        "cubic_meters_per_second",
                        "cubic_meters_per_hour",
                        "cubic_meters_per_day",
                        "liters_per_second",
                        "liters_per_minute",
                        "liters_per_hour",
                        "milliliters_per_second",
                        "pounds_mass_per_day",
                        "imperial_gallons_per_minute",
                        "us_gallons_per_minute",
                        "us_gallons_per_hour",
                        "square_meters",
                        "square_centimeters",
                        "square_feet",
                        "square_inches",
                        "currency_dollar_US",
                        "currency_dollar_Canadian",
                        "currency_euro",
                        "currency_generic",
                        "amperes",
                        "milliamperes",
                        "kiloamperes",
                        "megaamperes",
                        "volts",
                        "millivolts",
                        "kilovolts",
                        "megavolts",
                        "watts",
                        "milliwatts",
                        "kilowatts",
                        "megawatts",
                        "amperes_per_meter",
                        "amperes_per_square_meter",
                        "ampere_square_meters",
                        "ohms",
                        "milliohms",
                        "kilohms",
                        "megohms",
                        "ohm_meters",
                        "ohm_meter_squared_per_meter",
                        "siemens",
                        "millisiemens",
                        "microsiemens",
                        "siemens_per_meter",
                        "microsiemens_per_millimeter",
                        "decibels",
                        "decibels_milliwatts",
                        "decibels_millivolt",
                        "decibels_volt",
                        "farads",
                        "henrys",
                        "teslas",
                        "webers",
                        "power_factor",
                        "volt_amperes",
                        "kilovolt_amperes",
                        "megavolt_amperes",
                        "volt_amperes_reactive",
                        "kilovolt_amperes_reactive",
                        "megavolt_amperes_reactive",
                        "volts_per_meter",
                        "volts_per_degree_kelvin",
                        "degrees_phase",
                        "ampere_seconds",
                        "ampere_hours",
                        "volt_ampere_hours",
                        "kilovolt_ampere_hours",
                        "megavolt_ampere_hours",
                        "volt_ampere_hours_reactive",
                        "kilovolt_ampere_hours_reactive",
                        "megavolt_ampere_hours_reactive",
                        "volt_square_hours",
                        "ampere_square_hours",
                        "joules",
                        "kilojoules",
                        "megajoules",
                        "kilojoules_per_kilogram",
                        "watt_hours",
                        "kilowatt_hours",
                        "megawatt_hours",
                        "watt_hours_reactive",
                        "kilowatt_hours_reactive",
                        "megawatt_hours_reactive",
                        "btus",
                        "kilo_btus",
                        "mega_btus",
                        "therms",
                        "ton_hours",
                        "joules_per_kilogram_dry_air",
                        "kilojoules_per_kilogram_dry_air",
                        "megajoules_per_kilogram_dry_air",
                        "btus_per_pound_dry_air",
                        "btus_per_pound",
                        "joules_per_degree_kelvin",
                        "kilojoules_per_degree_kelvin",
                        "megajoules_per_degree_kelvin",
                        "joules_per_kilogram_degree_kelvin",
                        "newton",
                        "newton_meters",
                        "hertz",
                        "kilohertz",
                        "megahertz",
                        "cycles_per_minute",
                        "cycles_per_hour",
                        "per_hour",
                        "per_minute",
                        "per_second",
                        "grams_of_water_per_kilogram_dry_air",
                        "percent_relative_humidity",
                        "watts_per_square_foot",
                        "watts_per_square_meter",
                        "milliwatts_per_square_centimeter",
                        "candelas",
                        "candelas_per_square_meter",
                        "lumens",
                        "luxes",
                        "foot_candles",
                        "grams_per_second",
                        "grams_per_minute",
                        "kilograms_per_second",
                        "kilograms_per_minute",
                        "kilograms_per_hour",
                        "pounds_mass_per_second",
                        "pounds_mass_per_minute",
                        "pounds_mass_per_hour",
                        "tons_per_hour",
                        "btus_per_hour",
                        "kilo_btus_per_hour",
                        "joule_per_hours",
                        "horsepower",
                        "tons_refrigeration",
                        "pascals",
                        "hectopascals",
                        "kilopascals",
                        "megapascals",
                        "millibars",
                        "bars",
                        "pounds_force_per_square_inch",
                        "millimeters_of_water",
                        "centimeters_of_water",
                        "inches_of_water",
                        "millimeters_of_mercury",
                        "centimeters_of_mercury",
                        "inches_of_mercury",
                        "degrees_celsius",
                        "degrees_kelvin",
                        "degrees_fahrenheit",
                        "degrees_kelvin_per_hour",
                        "degrees_kelvin_per_minute",
                        "degrees_celsius_per_hour",
                        "degrees_celsius_per_minute",
                        "degrees_fahrenheit_per_hour",
                        "degrees_fahrenheit_per_minute",
                        "degree_days_celsius",
                        "degree_days_fahrenheit",
                        "delta_degrees_kelvin",
                        "delta_degrees_fahrenheit",
                        "no_units",
                        "ticks",
                        "counts",
                        "bytes",
                        "kilo_bytes",
                        "mega_bytes",
                        "giga_bytes",
                        "tera_bytes",
                        "degrees_angular",
                        "radians",
                        "degrees_angular_per_second",
                        "radians_per_second",
                        "mole_percent",
                        "percent",
                        "per_mille",
                        "percent_per_second",
                        "percent_obscuration_per_meter",
                        "percent_obscuration_per_foot",
                        "parts_per_million",
                        "parts_per_billion",
                        "revolutions_per_minute",
                        "joule_seconds",
                        "newton_seconds",
                        "newtons_per_meter",
                        "pascal_seconds",
                        "psi_per_degree_fahrenheit",
                        "kilograms_per_cubic_meter",
                        "kilometers_per_liter",
                        "miles_per_us_gallon",
                        "kilowatts_per_ton",
                        "kilowatt_hours_per_square_meter",
                        "kilowatt_hours_per_square_foot",
                        "watt_hours_per_cubic_meter",
                        "joules_per_cubic_meter",
                        "megajoules_per_square_meter",
                        "megajoules_per_square_foot",
                        "square_meters_per_newton",
                        "watts_per_meter_per_degree_kelvin",
                        "watts_per_square_meter_degree_kelvin",
                        "grams_per_gram",
                        "kilograms_per_kilogram",
                        "grams_per_kilogram",
                        "milligrams_per_gram",
                        "milligrams_per_kilogram",
                        "grams_per_milliliter",
                        "grams_per_liter",
                        "grams_per_square_meter",
                        "milligrams_per_liter",
                        "micrograms_per_liter",
                        "grams_per_cubic_meter",
                        "milligrams_per_cubic_meter",
                        "micrograms_per_cubic_meter",
                        "nanograms_per_cubic_meter",
                        "grams_per_cubic_centimeter",
                        "becquerels",
                        "kilobecquerels",
                        "megabecquerels",
                        "gray",
                        "milligray",
                        "microgray",
                        "sieverts",
                        "millisieverts",
                        "microsieverts",
                        "microsieverts_per_hour",
                        "millirems",
                        "millirems_per_hour",
                        "decibels_a",
                        "nephelometric_turbidity_unit",
                        "pH",
                        "minutes_per_degree_kelvin"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                }
            }
        },
        "EngineeringUnitsFactorsScaling": {
            "type": "object",
            "properties": {
                "multiplier": {
                    "type": "number",
                    "format": "double"
                },
                "offset": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "EngineeringUnitsPreference": {
            "type": "object",
            "properties": {
                "units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EngineeringUnitsPreferencePair"
                    }
                }
            }
        },
        "EngineeringUnitsPreferencePair": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "selected": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                }
            }
        },
        "EnumDescriptor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "EquipmentAggregation": {
            "type": "object",
            "properties": {
                "equipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EquipmentHierarchy"
                    }
                },
                "controllers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locationHierarchy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocationHierarchy"
                    }
                },
                "pointClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PointClass"
                    }
                },
                "equipmentClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EquipmentClass"
                    }
                },
                "locationClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocationClass"
                    }
                }
            }
        },
        "EquipmentClass": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "equipClassName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "azureDigitalTwin": {
                    "type": "string"
                },
                "wellKnown": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Deployment",
                        "Tractor",
                        "Trailer",
                        "Microgrid",
                        "Substation",
                        "Machine",
                        "RTU",
                        "GPS",
                        "ChargeController",
                        "Liftgate",
                        "HVAC",
                        "OnBoardDiagnostics",
                        "NoIdle",
                        "Sensor",
                        "SensorDiagnostics",
                        "SensorAlerts",
                        "SensorEvents",
                        "LevelSensor",
                        "Accelerometer",
                        "Vibration",
                        "SensorSecondary",
                        "SensorTertiary",
                        "TireSensor",
                        "TemperatureSensor",
                        "HumiditySensor",
                        "VoltageSensor",
                        "CurrentSensor",
                        "SensorCluster",
                        "SmartLock",
                        "AssetTag"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.WellKnownEquipmentClass"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "EquipmentClassAssignment": {
            "type": "object",
            "properties": {
                "regex": {
                    "type": "string"
                },
                "equipmentClassId": {
                    "type": "string"
                },
                "caseSensitive": {
                    "type": "boolean"
                }
            }
        },
        "EquipmentHierarchy": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "equipmentClassId": {
                    "type": "string"
                },
                "locationSysId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EquipmentHierarchy"
                    }
                }
            }
        },
        "EquipmentReportProgress": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "ACTIVE_BUT_CANCELLING",
                        "PAUSED",
                        "PAUSED_BUT_CANCELLING",
                        "WAITING",
                        "WAITING_BUT_CANCELLING",
                        "SLEEPING",
                        "SLEEPING_BUT_CANCELLIN",
                        "EXECUTING",
                        "EXECUTING_BUT_CANCELLING",
                        "CANCELLED",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.logic.BackgroundActivityStatus"
                },
                "report": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "totalEquipment": {
                    "type": "integer",
                    "format": "int32"
                },
                "equipmentProcessed": {
                    "type": "integer",
                    "format": "int32"
                },
                "generatingFile": {
                    "type": "boolean"
                }
            }
        },
        "EquipmentSearchRequestFilters": {
            "allOf": [
                {
                    "$ref": "#/definitions/SearchRequestFilters"
                },
                {
                    "type": "object",
                    "properties": {
                        "isClassified": {
                            "type": "boolean"
                        },
                        "isUnclassified": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EquipmentSearchRequestFilters"
        },
        "EthernetTransportAddress": {
            "allOf": [
                {
                    "$ref": "#/definitions/TransportAddress"
                },
                {
                    "type": "object",
                    "properties": {
                        "d1": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "d2": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "d3": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "d4": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "d5": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "d6": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "EthernetTransportAddress"
        },
        "Event": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "asset": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "location": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "extendedDescription": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "Alert",
                    "subtype_model": "Alert"
                },
                {
                    "subtype_name": "Audit",
                    "subtype_model": "Audit"
                },
                {
                    "subtype_name": "Workflow",
                    "subtype_model": "Workflow"
                }
            ],
            "x-optio3-external-record-id": "Event"
        },
        "EventFilterRequest": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "startOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxResults": {
                    "type": "integer",
                    "format": "int32"
                },
                "assetIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locationIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locationInclusive": {
                    "type": "boolean"
                },
                "likeDeviceManufacturerName": {
                    "type": "string"
                },
                "likeDeviceProductName": {
                    "type": "string"
                },
                "likeDeviceModelName": {
                    "type": "string"
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                },
                "evaluateUpdatedOn": {
                    "type": "boolean"
                },
                "rangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "rangeEnd": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "x-optio3-type-name": "EventFilterRequest",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AlertFilterRequest",
                    "subtype_model": "AlertFilterRequest"
                },
                {
                    "subtype_name": "AuditFilterRequest",
                    "subtype_model": "AuditFilterRequest"
                },
                {
                    "subtype_name": "WorkflowFilterRequest",
                    "subtype_model": "WorkflowFilterRequest"
                }
            ]
        },
        "ExportCell": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "decimal": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ExportColumn": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "dateFormatter": {
                    "type": "string"
                },
                "numberFormatter": {
                    "type": "string"
                }
            }
        },
        "ExportHeader": {
            "type": "object",
            "properties": {
                "sheetName": {
                    "type": "string"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExportColumn"
                    }
                }
            }
        },
        "FilterPreferences": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "locationIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alertRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "alertStatusIDs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "active",
                            "muted",
                            "resolved",
                            "closed"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertStatus"
                    }
                },
                "alertSeverityIDs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "CRITICAL",
                            "SIGNIFICANT",
                            "NORMAL",
                            "LOW"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                    }
                },
                "alertTypeIDs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ALARM",
                            "COMMUNICATION_PROBLEM",
                            "DEVICE_FAILURE",
                            "END_OF_LIFE",
                            "INFORMATIONAL",
                            "OPERATOR_SUMMARY",
                            "RECALL",
                            "THRESHOLD_EXCEEDED",
                            "WARNING",
                            "WARRANTY"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertType"
                    }
                },
                "likeDeviceManufacturerName": {
                    "type": "string"
                },
                "likeDeviceProductName": {
                    "type": "string"
                },
                "likeDeviceModelName": {
                    "type": "string"
                },
                "equipmentIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "equipmentClassIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pointClassIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isSampling": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.FilterPreferenceBoolean"
                },
                "isClassified": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.FilterPreferenceBoolean"
                },
                "assignedToIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdByIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workflowTypeIDs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "RenameControlPoint",
                            "SamplingControlPoint",
                            "SamplingPeriod",
                            "HidingControlPoint",
                            "AssignControlPointsToEquipment",
                            "SetControlPointsClass",
                            "IgnoreDevice",
                            "RenameDevice",
                            "SetDeviceLocation",
                            "RenameEquipment",
                            "RemoveEquipment",
                            "MergeEquipments",
                            "NewEquipment",
                            "SetEquipmentClass",
                            "SetEquipmentParent",
                            "SetEquipmentLocation",
                            "SetLocationParent"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowType"
                    }
                },
                "workflowStatusIDs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Resolved",
                            "Closed",
                            "Disabling",
                            "Disabled"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowStatus"
                    }
                },
                "workflowPriorityIDs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Urgent",
                            "High",
                            "Normal",
                            "Low"
                        ],
                        "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowPriority"
                    }
                }
            }
        },
        "FilterableTimeRange": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "range": {
                    "$ref": "#/definitions/RangeSelection"
                },
                "isFilterApplied": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/definitions/RecurringWeeklySchedule"
                }
            }
        },
        "FilteredSubnet": {
            "type": "object",
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "GatewayAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/Asset"
                },
                {
                    "type": "object",
                    "properties": {
                        "instanceId": {
                            "type": "string"
                        },
                        "warningThreshold": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "alertThreshold": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "cpuLoadLast4Hours": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "cpuLoadPrevious4Hours": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "details": {
                            "$ref": "#/definitions/GatewayDetails"
                        },
                        "lastOutput": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "lastOffset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "GatewayAsset",
            "x-optio3-external-record-id": "GatewayAsset"
        },
        "GatewayDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "sysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "GatewayDescriptor"
        },
        "GatewayDetails": {
            "type": "object",
            "properties": {
                "lastRefresh": {
                    "type": "string",
                    "format": "date-time"
                },
                "availableProcessors": {
                    "type": "integer",
                    "format": "int32"
                },
                "freeMemory": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalMemory": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxMemory": {
                    "type": "integer",
                    "format": "int64"
                },
                "hardwareVersion": {
                    "type": "integer",
                    "format": "int32"
                },
                "firmwareVersion": {
                    "type": "integer",
                    "format": "int32"
                },
                "networkInterfaces": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "queueStatus": {
                    "$ref": "#/definitions/GatewayQueueStatus"
                }
            }
        },
        "GatewayFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "GatewayFilterRequest"
        },
        "GatewayPerfDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "transportAddress": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "GatewayPerfDescriptor"
        },
        "GatewayProberOperation": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastHeartbeat": {
                    "type": "string",
                    "format": "date-time"
                },
                "gateway": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "inputDetails": {
                    "$ref": "#/definitions/ProberOperation"
                },
                "outputDetails": {
                    "$ref": "#/definitions/ProberOperationBaseResults"
                },
                "lastOutput": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "currentActivity": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            },
            "x-optio3-external-record-id": "GatewayProberOperation"
        },
        "GatewayQueueStatus": {
            "type": "object",
            "properties": {
                "oldestEntry": {
                    "type": "string",
                    "format": "date-time"
                },
                "numberOfUnbatchedEntries": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfBatchedEntries": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfBatches": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "GeoFence": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "uniqueId": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "GeoFenceByPolygon",
                    "subtype_model": "GeoFenceByPolygon"
                },
                {
                    "subtype_name": "GeoFenceByRadius",
                    "subtype_model": "GeoFenceByRadius"
                }
            ]
        },
        "GeoFenceByPolygon": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoFence"
                },
                {
                    "type": "object",
                    "properties": {
                        "boundary": {
                            "$ref": "#/definitions/LocationPolygon"
                        },
                        "innerExclusions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocationPolygon"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "GeoFenceByPolygon"
        },
        "GeoFenceByRadius": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoFence"
                },
                {
                    "type": "object",
                    "properties": {
                        "center": {
                            "$ref": "#/definitions/LongitudeLatitude"
                        },
                        "radius": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "GeoFenceByRadius"
        },
        "GroupingWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "numCols": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numRows": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "widgets": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WidgetComposition"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "GroupingWidgetConfiguration"
        },
        "HierarchicalVisualization": {
            "type": "object",
            "properties": {
                "virtualNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VirtualAssetGraphNode"
                    }
                },
                "interactionBehavior": {
                    "$ref": "#/definitions/InteractionBehavior"
                },
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HierarchicalVisualizationBinding"
                    }
                }
            }
        },
        "HierarchicalVisualizationBinding": {
            "type": "object",
            "properties": {
                "leafNodeId": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/HierarchicalVisualizationConfiguration"
                },
                "color": {
                    "$ref": "#/definitions/ColorConfiguration"
                }
            }
        },
        "HierarchicalVisualizationConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "HEATMAP",
                        "LINE",
                        "TABLE",
                        "TABLE_WITH_BAR",
                        "BUBBLEMAP",
                        "TREEMAP",
                        "SUNBURST",
                        "PIEBURST",
                        "DONUT",
                        "PIE"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.HierarchicalVisualizationType"
                },
                "sizing": {
                    "type": "string",
                    "enum": [
                        "FIT",
                        "FIXED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.HierarchicalVisualizationSizing"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "axisSizing": {
                    "type": "string",
                    "enum": [
                        "INDIVIDUAL",
                        "SHARED",
                        "FIXED"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.HierarchicalVisualizationAxisSizing"
                },
                "axisRange": {
                    "$ref": "#/definitions/NumericRange"
                }
            }
        },
        "HostAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/Asset"
                },
                {
                    "type": "object",
                    "properties": {
                        "lastOutput": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "lastOffset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "HostAsset",
            "x-optio3-external-record-id": "HostAsset"
        },
        "HostFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "HostFilterRequest"
        },
        "I2CSensor": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "bus": {
                    "type": "integer",
                    "format": "int32"
                },
                "samplingPeriod": {
                    "type": "number",
                    "format": "float"
                },
                "averagingSamples": {
                    "type": "integer",
                    "format": "int32"
                },
                "equipmentClass": {
                    "$ref": "#/definitions/WellKnownEquipmentClassOrCustom"
                },
                "instanceSelector": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "I2CSensor_MCP3428",
                    "subtype_model": "I2CSensor_MCP3428"
                },
                {
                    "subtype_name": "I2CSensor_SHT3x",
                    "subtype_model": "I2CSensor_SHT3x"
                }
            ]
        },
        "I2CSensor_MCP3428": {
            "allOf": [
                {
                    "$ref": "#/definitions/I2CSensor"
                },
                {
                    "type": "object",
                    "properties": {
                        "channel": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "gain": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "conversionScale": {
                            "type": "number",
                            "format": "float"
                        },
                        "conversionOffsetPre": {
                            "type": "number",
                            "format": "float"
                        },
                        "conversionOffsetPost": {
                            "type": "number",
                            "format": "float"
                        },
                        "pointClass": {
                            "$ref": "#/definitions/WellKnownPointClassOrCustom"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "I2CSensor_MCP3428"
        },
        "I2CSensor_SHT3x": {
            "allOf": [
                {
                    "$ref": "#/definitions/I2CSensor"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "I2CSensor_SHT3x"
        },
        "ImageWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "image": {
                            "$ref": "#/definitions/BrandingConfiguration"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ImageWidgetConfiguration"
        },
        "ImportExportData": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                },
                "deviceDescription": {
                    "type": "string"
                },
                "deviceLocation": {
                    "type": "string"
                },
                "deviceStructure": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceVendor": {
                    "type": "string"
                },
                "deviceModel": {
                    "type": "string"
                },
                "dashboardName": {
                    "type": "string"
                },
                "dashboardEquipmentName": {
                    "type": "string"
                },
                "dashboardStructure": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "normalizedName": {
                    "type": "string"
                },
                "isSampled": {
                    "type": "boolean"
                },
                "pointClassId": {
                    "type": "string"
                },
                "pointClassAdt": {
                    "type": "string"
                },
                "pointTags": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "locationName": {
                    "type": "string"
                },
                "locationSysId": {
                    "type": "string"
                },
                "units": {
                    "type": "string",
                    "enum": [
                        "enumerated",
                        "onOff",
                        "activeInactive",
                        "constant",
                        "log",
                        "meters",
                        "nanometers",
                        "micrometers",
                        "millimeters",
                        "centimeters",
                        "kilometers",
                        "inches",
                        "feet",
                        "miles",
                        "seconds",
                        "hundredths_seconds",
                        "milliseconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "years",
                        "grams",
                        "nanograms",
                        "micrograms",
                        "milligrams",
                        "kilograms",
                        "pounds_mass",
                        "tons",
                        "meters_per_second",
                        "meters_per_minute",
                        "meters_per_hour",
                        "millimeters_per_second",
                        "millimeters_per_minute",
                        "millimeters_per_hour",
                        "kilometers_per_hour",
                        "feet_per_second",
                        "feet_per_minute",
                        "miles_per_hour",
                        "knots",
                        "longitude",
                        "latitude",
                        "meters_per_second_per_second",
                        "millig",
                        "cubic_meters",
                        "cubic_feet",
                        "liters",
                        "milliliters",
                        "imperial_gallons",
                        "us_gallons",
                        "cubic_feet_per_minute",
                        "cubic_feet_per_second",
                        "cubic_feet_per_hour",
                        "cubic_feet_per_day",
                        "thousand_cubic_feet_per_day",
                        "standard_cubic_feet_per_day",
                        "million_standard_cubic_feet_per_minute",
                        "million_standard_cubic_feet_per_day",
                        "thousand_standard_cubic_feet_per_day",
                        "cubic_meters_per_minute",
                        "cubic_meters_per_second",
                        "cubic_meters_per_hour",
                        "cubic_meters_per_day",
                        "liters_per_second",
                        "liters_per_minute",
                        "liters_per_hour",
                        "milliliters_per_second",
                        "pounds_mass_per_day",
                        "imperial_gallons_per_minute",
                        "us_gallons_per_minute",
                        "us_gallons_per_hour",
                        "square_meters",
                        "square_centimeters",
                        "square_feet",
                        "square_inches",
                        "currency_dollar_US",
                        "currency_dollar_Canadian",
                        "currency_euro",
                        "currency_generic",
                        "amperes",
                        "milliamperes",
                        "kiloamperes",
                        "megaamperes",
                        "volts",
                        "millivolts",
                        "kilovolts",
                        "megavolts",
                        "watts",
                        "milliwatts",
                        "kilowatts",
                        "megawatts",
                        "amperes_per_meter",
                        "amperes_per_square_meter",
                        "ampere_square_meters",
                        "ohms",
                        "milliohms",
                        "kilohms",
                        "megohms",
                        "ohm_meters",
                        "ohm_meter_squared_per_meter",
                        "siemens",
                        "millisiemens",
                        "microsiemens",
                        "siemens_per_meter",
                        "microsiemens_per_millimeter",
                        "decibels",
                        "decibels_milliwatts",
                        "decibels_millivolt",
                        "decibels_volt",
                        "farads",
                        "henrys",
                        "teslas",
                        "webers",
                        "power_factor",
                        "volt_amperes",
                        "kilovolt_amperes",
                        "megavolt_amperes",
                        "volt_amperes_reactive",
                        "kilovolt_amperes_reactive",
                        "megavolt_amperes_reactive",
                        "volts_per_meter",
                        "volts_per_degree_kelvin",
                        "degrees_phase",
                        "ampere_seconds",
                        "ampere_hours",
                        "volt_ampere_hours",
                        "kilovolt_ampere_hours",
                        "megavolt_ampere_hours",
                        "volt_ampere_hours_reactive",
                        "kilovolt_ampere_hours_reactive",
                        "megavolt_ampere_hours_reactive",
                        "volt_square_hours",
                        "ampere_square_hours",
                        "joules",
                        "kilojoules",
                        "megajoules",
                        "kilojoules_per_kilogram",
                        "watt_hours",
                        "kilowatt_hours",
                        "megawatt_hours",
                        "watt_hours_reactive",
                        "kilowatt_hours_reactive",
                        "megawatt_hours_reactive",
                        "btus",
                        "kilo_btus",
                        "mega_btus",
                        "therms",
                        "ton_hours",
                        "joules_per_kilogram_dry_air",
                        "kilojoules_per_kilogram_dry_air",
                        "megajoules_per_kilogram_dry_air",
                        "btus_per_pound_dry_air",
                        "btus_per_pound",
                        "joules_per_degree_kelvin",
                        "kilojoules_per_degree_kelvin",
                        "megajoules_per_degree_kelvin",
                        "joules_per_kilogram_degree_kelvin",
                        "newton",
                        "newton_meters",
                        "hertz",
                        "kilohertz",
                        "megahertz",
                        "cycles_per_minute",
                        "cycles_per_hour",
                        "per_hour",
                        "per_minute",
                        "per_second",
                        "grams_of_water_per_kilogram_dry_air",
                        "percent_relative_humidity",
                        "watts_per_square_foot",
                        "watts_per_square_meter",
                        "milliwatts_per_square_centimeter",
                        "candelas",
                        "candelas_per_square_meter",
                        "lumens",
                        "luxes",
                        "foot_candles",
                        "grams_per_second",
                        "grams_per_minute",
                        "kilograms_per_second",
                        "kilograms_per_minute",
                        "kilograms_per_hour",
                        "pounds_mass_per_second",
                        "pounds_mass_per_minute",
                        "pounds_mass_per_hour",
                        "tons_per_hour",
                        "btus_per_hour",
                        "kilo_btus_per_hour",
                        "joule_per_hours",
                        "horsepower",
                        "tons_refrigeration",
                        "pascals",
                        "hectopascals",
                        "kilopascals",
                        "megapascals",
                        "millibars",
                        "bars",
                        "pounds_force_per_square_inch",
                        "millimeters_of_water",
                        "centimeters_of_water",
                        "inches_of_water",
                        "millimeters_of_mercury",
                        "centimeters_of_mercury",
                        "inches_of_mercury",
                        "degrees_celsius",
                        "degrees_kelvin",
                        "degrees_fahrenheit",
                        "degrees_kelvin_per_hour",
                        "degrees_kelvin_per_minute",
                        "degrees_celsius_per_hour",
                        "degrees_celsius_per_minute",
                        "degrees_fahrenheit_per_hour",
                        "degrees_fahrenheit_per_minute",
                        "degree_days_celsius",
                        "degree_days_fahrenheit",
                        "delta_degrees_kelvin",
                        "delta_degrees_fahrenheit",
                        "no_units",
                        "ticks",
                        "counts",
                        "bytes",
                        "kilo_bytes",
                        "mega_bytes",
                        "giga_bytes",
                        "tera_bytes",
                        "degrees_angular",
                        "radians",
                        "degrees_angular_per_second",
                        "radians_per_second",
                        "mole_percent",
                        "percent",
                        "per_mille",
                        "percent_per_second",
                        "percent_obscuration_per_meter",
                        "percent_obscuration_per_foot",
                        "parts_per_million",
                        "parts_per_billion",
                        "revolutions_per_minute",
                        "joule_seconds",
                        "newton_seconds",
                        "newtons_per_meter",
                        "pascal_seconds",
                        "psi_per_degree_fahrenheit",
                        "kilograms_per_cubic_meter",
                        "kilometers_per_liter",
                        "miles_per_us_gallon",
                        "kilowatts_per_ton",
                        "kilowatt_hours_per_square_meter",
                        "kilowatt_hours_per_square_foot",
                        "watt_hours_per_cubic_meter",
                        "joules_per_cubic_meter",
                        "megajoules_per_square_meter",
                        "megajoules_per_square_foot",
                        "square_meters_per_newton",
                        "watts_per_meter_per_degree_kelvin",
                        "watts_per_square_meter_degree_kelvin",
                        "grams_per_gram",
                        "kilograms_per_kilogram",
                        "grams_per_kilogram",
                        "milligrams_per_gram",
                        "milligrams_per_kilogram",
                        "grams_per_milliliter",
                        "grams_per_liter",
                        "grams_per_square_meter",
                        "milligrams_per_liter",
                        "micrograms_per_liter",
                        "grams_per_cubic_meter",
                        "milligrams_per_cubic_meter",
                        "micrograms_per_cubic_meter",
                        "nanograms_per_cubic_meter",
                        "grams_per_cubic_centimeter",
                        "becquerels",
                        "kilobecquerels",
                        "megabecquerels",
                        "gray",
                        "milligray",
                        "microgray",
                        "sieverts",
                        "millisieverts",
                        "microsieverts",
                        "microsieverts_per_hour",
                        "millirems",
                        "millirems_per_hour",
                        "decibels_a",
                        "nephelometric_turbidity_unit",
                        "pH",
                        "minutes_per_degree_kelvin"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                },
                "value": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "BACnetBulkRenamingData",
                    "subtype_model": "BACnetBulkRenamingData"
                },
                {
                    "subtype_name": "BACnetImportExportData",
                    "subtype_model": "BACnetImportExportData"
                }
            ]
        },
        "ImportedMetadata": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportExportData"
                    }
                }
            },
            "x-optio3-external-record-id": "ImportedMetadata"
        },
        "InputStream": {
            "type": "object"
        },
        "InstanceConfiguration": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "InstanceConfigurationDoNothing",
                    "subtype_model": "InstanceConfigurationDoNothing"
                },
                {
                    "subtype_name": "InstanceConfigurationForCRE",
                    "subtype_model": "InstanceConfigurationForCRE"
                },
                {
                    "subtype_name": "InstanceConfigurationForDigineous",
                    "subtype_model": "InstanceConfigurationForDigineous"
                },
                {
                    "subtype_name": "InstanceConfigurationForDigitalMatter",
                    "subtype_model": "InstanceConfigurationForDigitalMatter"
                },
                {
                    "subtype_name": "InstanceConfigurationForEPower_Amazon",
                    "subtype_model": "InstanceConfigurationForEPower_Amazon"
                },
                {
                    "subtype_name": "InstanceConfigurationForMerlinSolar",
                    "subtype_model": "InstanceConfigurationForMerlinSolar"
                },
                {
                    "subtype_name": "InstanceConfigurationForMontageWalmart",
                    "subtype_model": "InstanceConfigurationForMontageWalmart"
                },
                {
                    "subtype_name": "InstanceConfigurationForPalfinger",
                    "subtype_model": "InstanceConfigurationForPalfinger"
                },
                {
                    "subtype_name": "InstanceConfigurationForStealthPower",
                    "subtype_model": "InstanceConfigurationForStealthPower"
                }
            ]
        },
        "InstanceConfigurationDoNothing": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfiguration"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationDoNothing"
        },
        "InstanceConfigurationForCRE": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfiguration"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForCRE"
        },
        "InstanceConfigurationForDigineous": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationWithWellKnownClasses"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForDigineous"
        },
        "InstanceConfigurationForDigitalMatter": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationWithWellKnownClasses"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForDigitalMatter"
        },
        "InstanceConfigurationForEPower": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationForTransportation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "InstanceConfigurationForEPower_Amazon": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationForEPower"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForEPower_Amazon"
        },
        "InstanceConfigurationForMerlinSolar": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationForTransportation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForMerlinSolar"
        },
        "InstanceConfigurationForMontageWalmart": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationForTransportation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForMontageWalmart"
        },
        "InstanceConfigurationForPalfinger": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationForTransportation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForPalfinger"
        },
        "InstanceConfigurationForStealthPower": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationForTransportation"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "InstanceConfigurationForStealthPower"
        },
        "InstanceConfigurationForTransportation": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfigurationWithWellKnownClasses"
                },
                {
                    "type": "object",
                    "properties": {
                        "disableAutoConfig": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "InstanceConfigurationWithWellKnownClasses": {
            "allOf": [
                {
                    "$ref": "#/definitions/InstanceConfiguration"
                },
                {
                    "type": "object"
                }
            ]
        },
        "InteractionBehavior": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "NavigateDataExplorer",
                        "NavigateDeviceElem",
                        "None",
                        "Pane",
                        "Standard"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.InteractionBehaviorType"
                },
                "paneConfigId": {
                    "type": "string"
                }
            }
        },
        "IpTransportAddress": {
            "allOf": [
                {
                    "$ref": "#/definitions/TransportAddress"
                },
                {
                    "type": "object",
                    "properties": {
                        "host": {
                            "type": "string",
                            "readOnly": true
                        }
                    }
                }
            ],
            "x-optio3-type-name": "IpTransportAddress"
        },
        "IpnDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "IpnDevice",
            "x-optio3-external-record-id": "IpnDevice"
        },
        "IpnDeviceDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "IpnDeviceDescriptor"
        },
        "Location": {
            "allOf": [
                {
                    "$ref": "#/definitions/Asset"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "ADMITTING",
                                "APARTMENT",
                                "ATRIUM",
                                "AUDITORIUM",
                                "BACKOFFICE",
                                "BALCONY",
                                "BAR_ROOM",
                                "BATHROOM",
                                "BEDROOM",
                                "BREAK_ROOM",
                                "BUILDING",
                                "CABLE_ROOM",
                                "CAFETERIA_ROOM",
                                "CAMPUS",
                                "CINEMA",
                                "CLASSROOM",
                                "CLEANING_ROOM",
                                "CLIMATE_CONTROL_ROOM",
                                "CLOAK_ROOM",
                                "CONFERENCE_ROOM",
                                "CONVERSATION_ROOM",
                                "COOKING_ROOM",
                                "COPYING_ROOM",
                                "COPY_ROOM",
                                "DATAS_ERVER_ROOM",
                                "DELIVERY_ROOM",
                                "DINING_ROOM",
                                "DISTRIBUTION_CENTER",
                                "DRESSING_ROOM",
                                "EDUCATIONAL_ROOM",
                                "ELECTRICAL_ROOM",
                                "ELEVATOR",
                                "ELEVATOR_ROOM",
                                "ELEVATOR_SHAFT",
                                "ENTRANCE",
                                "EXERCISE_ROOM",
                                "EXHIBITION_ROOM",
                                "FACADE",
                                "FACTORY",
                                "FITTING_ROOM",
                                "FLOOR",
                                "FOOD_HANDLING_ROOM",
                                "FRONT_DESK",
                                "GARAGE",
                                "GROUP_ROOM",
                                "HALLWAY",
                                "HOME",
                                "HOSPITAL",
                                "ICU",
                                "INPATIENT_SERVICES",
                                "KITCHEN",
                                "LABORATORY",
                                "LAB_SERVICES",
                                "LAND",
                                "LAUNDRY_ROOM",
                                "LEVEL",
                                "LIBRARY",
                                "LIVING_ROOM",
                                "LOADING_RECEIVING_ROOM",
                                "LOBBY",
                                "LOCKER_ROOM",
                                "LOUNGE",
                                "MEDITATION_ROOM",
                                "MORGUE",
                                "MOTHERS_ROOM",
                                "MULTI_PURPOSE_ROOM",
                                "NURSERY",
                                "NURSING_FACILITY",
                                "OFFICE",
                                "OFFICE_ROOM",
                                "OPERATING_ROOM",
                                "OUTPATIENT_SERVICES",
                                "PANTRY",
                                "PARKING",
                                "PERSONAL_HYGIENE",
                                "PHARMACY",
                                "RADIOLOGY",
                                "RECEPTION",
                                "RECORDING_ROOM",
                                "RECOVERY_ROOM",
                                "RECREATIONAL_ROOM",
                                "REGION",
                                "REGIONAL_CENTER",
                                "RESTROOM",
                                "RESTING_ROOM",
                                "RETAIL_ROOM",
                                "ROOF_INNER",
                                "ROOF_OUTER",
                                "ROOF_TOP",
                                "ROOM",
                                "SCHOOL",
                                "SECTION",
                                "SECURITY_ROOM",
                                "SERVER_ROOM",
                                "SERVICE_SHAFT",
                                "SHELTER",
                                "SHIP",
                                "SHOPPING_MALL",
                                "SLAB",
                                "SMALL_STUDY_ROOM",
                                "SPRINKLER_ROOM",
                                "STADIUM",
                                "STAFF_ROOM",
                                "STAIRWELL",
                                "STAIRS",
                                "STORAGE",
                                "STORAGE_ROOM",
                                "SUB_BUILDING",
                                "SUPPLY_ROOM",
                                "TELECOMMUNICATION_ROOM",
                                "TENANT_UNIT",
                                "TERRACE",
                                "THEATER",
                                "THERAPY",
                                "TRAILER",
                                "TREATMENT_ROOM",
                                "TREATMENT_WAITING_ROOM",
                                "TRUCK",
                                "UTILITIES_ROOM",
                                "WARD",
                                "WASTE_MANAGEMENT_ROOM",
                                "WORKSHOP",
                                "ZONE",
                                "OTHER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "address": {
                            "type": "string"
                        },
                        "timeZone": {
                            "type": "string"
                        },
                        "geo": {
                            "$ref": "#/definitions/LongitudeLatitude"
                        },
                        "fences": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GeoFence"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "Location",
            "x-optio3-external-record-id": "Location"
        },
        "LocationClass": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "enum": [
                        "ADMITTING",
                        "APARTMENT",
                        "ATRIUM",
                        "AUDITORIUM",
                        "BACKOFFICE",
                        "BALCONY",
                        "BAR_ROOM",
                        "BATHROOM",
                        "BEDROOM",
                        "BREAK_ROOM",
                        "BUILDING",
                        "CABLE_ROOM",
                        "CAFETERIA_ROOM",
                        "CAMPUS",
                        "CINEMA",
                        "CLASSROOM",
                        "CLEANING_ROOM",
                        "CLIMATE_CONTROL_ROOM",
                        "CLOAK_ROOM",
                        "CONFERENCE_ROOM",
                        "CONVERSATION_ROOM",
                        "COOKING_ROOM",
                        "COPYING_ROOM",
                        "COPY_ROOM",
                        "DATAS_ERVER_ROOM",
                        "DELIVERY_ROOM",
                        "DINING_ROOM",
                        "DISTRIBUTION_CENTER",
                        "DRESSING_ROOM",
                        "EDUCATIONAL_ROOM",
                        "ELECTRICAL_ROOM",
                        "ELEVATOR",
                        "ELEVATOR_ROOM",
                        "ELEVATOR_SHAFT",
                        "ENTRANCE",
                        "EXERCISE_ROOM",
                        "EXHIBITION_ROOM",
                        "FACADE",
                        "FACTORY",
                        "FITTING_ROOM",
                        "FLOOR",
                        "FOOD_HANDLING_ROOM",
                        "FRONT_DESK",
                        "GARAGE",
                        "GROUP_ROOM",
                        "HALLWAY",
                        "HOME",
                        "HOSPITAL",
                        "ICU",
                        "INPATIENT_SERVICES",
                        "KITCHEN",
                        "LABORATORY",
                        "LAB_SERVICES",
                        "LAND",
                        "LAUNDRY_ROOM",
                        "LEVEL",
                        "LIBRARY",
                        "LIVING_ROOM",
                        "LOADING_RECEIVING_ROOM",
                        "LOBBY",
                        "LOCKER_ROOM",
                        "LOUNGE",
                        "MEDITATION_ROOM",
                        "MORGUE",
                        "MOTHERS_ROOM",
                        "MULTI_PURPOSE_ROOM",
                        "NURSERY",
                        "NURSING_FACILITY",
                        "OFFICE",
                        "OFFICE_ROOM",
                        "OPERATING_ROOM",
                        "OUTPATIENT_SERVICES",
                        "PANTRY",
                        "PARKING",
                        "PERSONAL_HYGIENE",
                        "PHARMACY",
                        "RADIOLOGY",
                        "RECEPTION",
                        "RECORDING_ROOM",
                        "RECOVERY_ROOM",
                        "RECREATIONAL_ROOM",
                        "REGION",
                        "REGIONAL_CENTER",
                        "RESTROOM",
                        "RESTING_ROOM",
                        "RETAIL_ROOM",
                        "ROOF_INNER",
                        "ROOF_OUTER",
                        "ROOF_TOP",
                        "ROOM",
                        "SCHOOL",
                        "SECTION",
                        "SECURITY_ROOM",
                        "SERVER_ROOM",
                        "SERVICE_SHAFT",
                        "SHELTER",
                        "SHIP",
                        "SHOPPING_MALL",
                        "SLAB",
                        "SMALL_STUDY_ROOM",
                        "SPRINKLER_ROOM",
                        "STADIUM",
                        "STAFF_ROOM",
                        "STAIRWELL",
                        "STAIRS",
                        "STORAGE",
                        "STORAGE_ROOM",
                        "SUB_BUILDING",
                        "SUPPLY_ROOM",
                        "TELECOMMUNICATION_ROOM",
                        "TENANT_UNIT",
                        "TERRACE",
                        "THEATER",
                        "THERAPY",
                        "TRAILER",
                        "TREATMENT_ROOM",
                        "TREATMENT_WAITING_ROOM",
                        "TRUCK",
                        "UTILITIES_ROOM",
                        "WARD",
                        "WASTE_MANAGEMENT_ROOM",
                        "WORKSHOP",
                        "ZONE",
                        "OTHER"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                },
                "description": {
                    "type": "string"
                },
                "azureDigitalTwin": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "LocationFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "hasGeoFences": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "LocationFilterRequest"
        },
        "LocationHierarchy": {
            "type": "object",
            "properties": {
                "ri": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "ADMITTING",
                        "APARTMENT",
                        "ATRIUM",
                        "AUDITORIUM",
                        "BACKOFFICE",
                        "BALCONY",
                        "BAR_ROOM",
                        "BATHROOM",
                        "BEDROOM",
                        "BREAK_ROOM",
                        "BUILDING",
                        "CABLE_ROOM",
                        "CAFETERIA_ROOM",
                        "CAMPUS",
                        "CINEMA",
                        "CLASSROOM",
                        "CLEANING_ROOM",
                        "CLIMATE_CONTROL_ROOM",
                        "CLOAK_ROOM",
                        "CONFERENCE_ROOM",
                        "CONVERSATION_ROOM",
                        "COOKING_ROOM",
                        "COPYING_ROOM",
                        "COPY_ROOM",
                        "DATAS_ERVER_ROOM",
                        "DELIVERY_ROOM",
                        "DINING_ROOM",
                        "DISTRIBUTION_CENTER",
                        "DRESSING_ROOM",
                        "EDUCATIONAL_ROOM",
                        "ELECTRICAL_ROOM",
                        "ELEVATOR",
                        "ELEVATOR_ROOM",
                        "ELEVATOR_SHAFT",
                        "ENTRANCE",
                        "EXERCISE_ROOM",
                        "EXHIBITION_ROOM",
                        "FACADE",
                        "FACTORY",
                        "FITTING_ROOM",
                        "FLOOR",
                        "FOOD_HANDLING_ROOM",
                        "FRONT_DESK",
                        "GARAGE",
                        "GROUP_ROOM",
                        "HALLWAY",
                        "HOME",
                        "HOSPITAL",
                        "ICU",
                        "INPATIENT_SERVICES",
                        "KITCHEN",
                        "LABORATORY",
                        "LAB_SERVICES",
                        "LAND",
                        "LAUNDRY_ROOM",
                        "LEVEL",
                        "LIBRARY",
                        "LIVING_ROOM",
                        "LOADING_RECEIVING_ROOM",
                        "LOBBY",
                        "LOCKER_ROOM",
                        "LOUNGE",
                        "MEDITATION_ROOM",
                        "MORGUE",
                        "MOTHERS_ROOM",
                        "MULTI_PURPOSE_ROOM",
                        "NURSERY",
                        "NURSING_FACILITY",
                        "OFFICE",
                        "OFFICE_ROOM",
                        "OPERATING_ROOM",
                        "OUTPATIENT_SERVICES",
                        "PANTRY",
                        "PARKING",
                        "PERSONAL_HYGIENE",
                        "PHARMACY",
                        "RADIOLOGY",
                        "RECEPTION",
                        "RECORDING_ROOM",
                        "RECOVERY_ROOM",
                        "RECREATIONAL_ROOM",
                        "REGION",
                        "REGIONAL_CENTER",
                        "RESTROOM",
                        "RESTING_ROOM",
                        "RETAIL_ROOM",
                        "ROOF_INNER",
                        "ROOF_OUTER",
                        "ROOF_TOP",
                        "ROOM",
                        "SCHOOL",
                        "SECTION",
                        "SECURITY_ROOM",
                        "SERVER_ROOM",
                        "SERVICE_SHAFT",
                        "SHELTER",
                        "SHIP",
                        "SHOPPING_MALL",
                        "SLAB",
                        "SMALL_STUDY_ROOM",
                        "SPRINKLER_ROOM",
                        "STADIUM",
                        "STAFF_ROOM",
                        "STAIRWELL",
                        "STAIRS",
                        "STORAGE",
                        "STORAGE_ROOM",
                        "SUB_BUILDING",
                        "SUPPLY_ROOM",
                        "TELECOMMUNICATION_ROOM",
                        "TENANT_UNIT",
                        "TERRACE",
                        "THEATER",
                        "THERAPY",
                        "TRAILER",
                        "TREATMENT_ROOM",
                        "TREATMENT_WAITING_ROOM",
                        "TRUCK",
                        "UTILITIES_ROOM",
                        "WARD",
                        "WASTE_MANAGEMENT_ROOM",
                        "WORKSHOP",
                        "ZONE",
                        "OTHER"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                },
                "subLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocationHierarchy"
                    }
                }
            }
        },
        "LocationPolygon": {
            "type": "object",
            "properties": {
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LongitudeLatitude"
                    }
                }
            }
        },
        "LogEntryFilterRequest": {
            "type": "object",
            "properties": {
                "fromOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "toOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "threads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string"
                }
            }
        },
        "LogLine": {
            "type": "object",
            "properties": {
                "fd": {
                    "type": "integer",
                    "format": "int32"
                },
                "host": {
                    "type": "string"
                },
                "thread": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "Error",
                        "Warn",
                        "Info",
                        "Debug",
                        "DebugVerbose",
                        "DebugObnoxious"
                    ],
                    "x-optio3-enum-type": "LogSeverity"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "line": {
                    "type": "string"
                },
                "lineNumber": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "LogRange": {
            "type": "object",
            "properties": {
                "startOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "endOffset": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "LoggerConfiguration": {
            "type": "object",
            "properties": {
                "parent": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "levels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "LogicalAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/Asset"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "LogicalAsset",
            "x-optio3-external-record-id": "LogicalAsset"
        },
        "LongitudeLatitude": {
            "type": "object",
            "properties": {
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "LookupEntry": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "caseSensitive": {
                    "type": "boolean"
                }
            }
        },
        "MbControl": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageBusPayload"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "MbControl_ExchangeCapabilities": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "available": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "required": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlExchangeCapabilities"
        },
        "MbControl_ExchangeCapabilities_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "available": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlExchangeCapabilitiesReply"
        },
        "MbControl_GetIdentity": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlGetIdentity"
        },
        "MbControl_GetIdentity_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "endpointIdentity": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlGetIdentityReply"
        },
        "MbControl_JoinChannel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "channel": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlJoinChannel"
        },
        "MbControl_JoinChannel_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "success": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlJoinChannelReply"
        },
        "MbControl_KeepAlive": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlKeepAlive"
        },
        "MbControl_KeepAlive_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlKeepAliveReply"
        },
        "MbControl_LeaveChannel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "channel": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlLeaveChannel"
        },
        "MbControl_LeaveChannel_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "success": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlLeaveChannelReply"
        },
        "MbControl_ListChannels": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlListChannels"
        },
        "MbControl_ListChannels_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "availableChannels": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListChannelsReply"
        },
        "MbControl_ListMembers": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "channel": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListMembers"
        },
        "MbControl_ListMembers_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "members": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListMembersReply"
        },
        "MbControl_ListSubscriptions": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlListSubscriptions"
        },
        "MbControl_ListSubscriptions_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "subscribedChannels": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlListSubscriptionsReply"
        },
        "MbControl_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageBusPayload"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbControlReply"
        },
        "MbControl_UpgradeToUDP": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl"
                },
                {
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isARM": {
                            "type": "boolean"
                        },
                        "isIntel": {
                            "type": "boolean"
                        },
                        "registerWidth": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "hostId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlUpgradeToUDP"
        },
        "MbControl_UpgradeToUDP_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbControl_Reply"
                },
                {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headerId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "headerKey": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        },
                        "sessionId": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "sessionKey": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        },
                        "sessionValidity": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "endpointId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MbControlUpgradeToUDPReply"
        },
        "MbData": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageBusPayload"
                },
                {
                    "type": "object",
                    "properties": {
                        "origin": {
                            "type": "string"
                        },
                        "destination": {
                            "type": "string"
                        },
                        "channel": {
                            "type": "string"
                        },
                        "payload": {
                            "type": "object"
                        },
                        "brokersPath": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "MbData_Message": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbData"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbDataMessage"
        },
        "MbData_Message_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/MbData"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MbDataMessageReply"
        },
        "MessageBusDatagramSession": {
            "type": "object",
            "properties": {
                "sessionId": {
                    "type": "string"
                },
                "contextSysId": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "udpAddress": {
                    "type": "string"
                },
                "lastPacket": {
                    "type": "string",
                    "format": "date-time"
                },
                "rpcId": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/MessageBusStatistics"
                }
            }
        },
        "MessageBusPayload": {
            "type": "object",
            "discriminator": "type",
            "properties": {
                "messageId": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "MbControlExchangeCapabilities",
                    "subtype_model": "MbControl_ExchangeCapabilities"
                },
                {
                    "subtype_name": "MbControlExchangeCapabilitiesReply",
                    "subtype_model": "MbControl_ExchangeCapabilities_Reply"
                },
                {
                    "subtype_name": "MbControlGetIdentity",
                    "subtype_model": "MbControl_GetIdentity"
                },
                {
                    "subtype_name": "MbControlGetIdentityReply",
                    "subtype_model": "MbControl_GetIdentity_Reply"
                },
                {
                    "subtype_name": "MbControlJoinChannel",
                    "subtype_model": "MbControl_JoinChannel"
                },
                {
                    "subtype_name": "MbControlJoinChannelReply",
                    "subtype_model": "MbControl_JoinChannel_Reply"
                },
                {
                    "subtype_name": "MbControlKeepAlive",
                    "subtype_model": "MbControl_KeepAlive"
                },
                {
                    "subtype_name": "MbControlKeepAliveReply",
                    "subtype_model": "MbControl_KeepAlive_Reply"
                },
                {
                    "subtype_name": "MbControlLeaveChannel",
                    "subtype_model": "MbControl_LeaveChannel"
                },
                {
                    "subtype_name": "MbControlLeaveChannelReply",
                    "subtype_model": "MbControl_LeaveChannel_Reply"
                },
                {
                    "subtype_name": "MbControlListChannels",
                    "subtype_model": "MbControl_ListChannels"
                },
                {
                    "subtype_name": "MbControlListChannelsReply",
                    "subtype_model": "MbControl_ListChannels_Reply"
                },
                {
                    "subtype_name": "MbControlListMembers",
                    "subtype_model": "MbControl_ListMembers"
                },
                {
                    "subtype_name": "MbControlListMembersReply",
                    "subtype_model": "MbControl_ListMembers_Reply"
                },
                {
                    "subtype_name": "MbControlListSubscriptions",
                    "subtype_model": "MbControl_ListSubscriptions"
                },
                {
                    "subtype_name": "MbControlListSubscriptionsReply",
                    "subtype_model": "MbControl_ListSubscriptions_Reply"
                },
                {
                    "subtype_name": "MbControlReply",
                    "subtype_model": "MbControl_Reply"
                },
                {
                    "subtype_name": "MbControlUpgradeToUDP",
                    "subtype_model": "MbControl_UpgradeToUDP"
                },
                {
                    "subtype_name": "MbControlUpgradeToUDPReply",
                    "subtype_model": "MbControl_UpgradeToUDP_Reply"
                },
                {
                    "subtype_name": "MbDataMessage",
                    "subtype_model": "MbData_Message"
                },
                {
                    "subtype_name": "MbDataMessageReply",
                    "subtype_model": "MbData_Message_Reply"
                }
            ]
        },
        "MessageBusStatistics": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetTx": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetTxBytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "packetTxBytesResent": {
                    "type": "integer",
                    "format": "int64"
                },
                "messageTx": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetRx": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetRxBytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "packetRxBytesResent": {
                    "type": "integer",
                    "format": "int64"
                },
                "messageRx": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MetadataAggregation": {
            "type": "object",
            "properties": {
                "buildingEquipments": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "equipmentNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "equipmentClassIds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "controllerNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "MetadataAggregationPoint": {
            "type": "object",
            "properties": {
                "pointId": {
                    "type": "string"
                },
                "pointName": {
                    "type": "string"
                },
                "pointNameRaw": {
                    "type": "string"
                },
                "pointNameBackup": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "pointClassId": {
                    "type": "string"
                },
                "buildingId": {
                    "type": "string"
                },
                "locationSysId": {
                    "type": "string"
                },
                "equipmentId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "MetricsBinding": {
            "type": "object",
            "properties": {
                "detailsHash": {
                    "type": "string"
                },
                "namedOutput": {
                    "type": "string"
                },
                "schema": {
                    "$ref": "#/definitions/TimeSeriesPropertyType"
                },
                "bindingForSeries": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/MetricsBindingForSeries"
                    }
                },
                "bindingForSetOfSeries": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/MetricsBindingForSetOfSeries"
                    }
                }
            }
        },
        "MetricsBindingForSeries": {
            "type": "object",
            "properties": {
                "record": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            }
        },
        "MetricsBindingForSetOfSeries": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "MetricsDefinition": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "headVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "releaseVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "MetricsDefinition"
        },
        "MetricsDefinitionDetails": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EngineTab"
                    }
                },
                "temporary": {
                    "type": "boolean"
                },
                "graph": {
                    "$ref": "#/definitions/AssetGraph"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "MetricsDefinitionDetailsForUserProgram",
                    "subtype_model": "MetricsDefinitionDetailsForUserProgram"
                }
            ]
        },
        "MetricsDefinitionDetailsForUserProgram": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsDefinitionDetails"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsDefinitionDetailsForUserProgram"
        },
        "MetricsDefinitionFilterRequest": {
            "type": "object",
            "properties": {
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "MetricsDefinitionVersion": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "definition": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "details": {
                    "$ref": "#/definitions/MetricsDefinitionDetails"
                },
                "predecessor": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "successors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "MetricsDefinitionVersion"
        },
        "MetricsDeviceElement": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceElement"
                },
                {
                    "type": "object",
                    "properties": {
                        "bindings": {
                            "$ref": "#/definitions/MetricsBinding"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsDeviceElement",
            "x-optio3-external-record-id": "MetricsDeviceElement"
        },
        "MetricsEngineBaseSelectValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EngineExpression"
                            }
                        }
                    }
                }
            ]
        },
        "MetricsEngineCreateEnumeratedSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineBaseSelectValue"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineCreateEnumeratedSeries"
        },
        "MetricsEngineCreateMultiStableSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineBaseSelectValue"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineCreateMultiStableSeries"
        },
        "MetricsEngineCreateVector3": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "xSeries": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "ySeries": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "zSeries": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineCreateVector3"
        },
        "MetricsEngineExecutionStep": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineExecutionStep"
        },
        "MetricsEngineInputParameterScalar": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "format": "double"
                        },
                        "units": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineInputParameterScalar"
        },
        "MetricsEngineInputParameterSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineInputParameterSeries"
        },
        "MetricsEngineInputParameterSeriesWithTimeOffset": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string"
                        },
                        "timeShift": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "timeShiftUnit": {
                            "type": "string",
                            "enum": [
                                "NANOS",
                                "MICROS",
                                "MILLIS",
                                "SECONDS",
                                "MINUTES",
                                "HOURS",
                                "HALF_DAYS",
                                "DAYS",
                                "WEEKS",
                                "MONTHS",
                                "YEARS",
                                "DECADES",
                                "CENTURIES",
                                "MILLENNIA",
                                "ERAS",
                                "FOREVER"
                            ],
                            "x-optio3-enum-type": "java.time.temporal.ChronoUnit"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineInputParameterSeriesWithTimeOffset"
        },
        "MetricsEngineInputParameterSetOfSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineInputParameterFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineInputParameterSetOfSeries"
        },
        "MetricsEngineLiteralScalar": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "format": "double"
                        },
                        "units": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineLiteralScalar"
        },
        "MetricsEngineOperatorAggregate": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Min",
                                "Max",
                                "Mean"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineAggregateOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorAggregate"
        },
        "MetricsEngineOperatorBaseWithSchedule": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "MetricsEngineOperatorBinary": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Plus",
                                "Minus",
                                "Multiply",
                                "Divide",
                                "Power"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineArithmeticOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorBinary"
        },
        "MetricsEngineOperatorBinaryBistable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorBinaryBistable"
        },
        "MetricsEngineOperatorBinaryLogic": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Or",
                                "And",
                                "Xor",
                                "NotOr",
                                "NotAnd",
                                "NotXor"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineLogicOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorBinaryLogic"
        },
        "MetricsEngineOperatorFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Min",
                                "Max",
                                "Mean"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineAggregateOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorFilter"
        },
        "MetricsEngineOperatorFilterInsideSchedule": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineOperatorBaseWithSchedule"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorFilterInsideSchedule"
        },
        "MetricsEngineOperatorFilterOutsideSchedule": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineOperatorBaseWithSchedule"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorFilterOutsideSchedule"
        },
        "MetricsEngineOperatorGpsDistance": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "latitude": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "longitude": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "speed": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorGpsDistance"
        },
        "MetricsEngineOperatorGpsSunElevation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "latitude": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "longitude": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorGpsSunElevation"
        },
        "MetricsEngineOperatorThreshold": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "GreaterThan",
                                "GreaterThanOrEqual"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineCompareOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorThreshold"
        },
        "MetricsEngineOperatorThresholdCount": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "GreaterThan",
                                "GreaterThanOrEqual"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineCompareOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorThresholdCount"
        },
        "MetricsEngineOperatorThresholdDuration": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "GreaterThan",
                                "GreaterThanOrEqual"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineCompareOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorThresholdDuration"
        },
        "MetricsEngineOperatorThresholdEnum": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorThresholdEnum"
        },
        "MetricsEngineOperatorThresholdPartialDuration": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "operation": {
                            "type": "string",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "GreaterThan",
                                "GreaterThanOrEqual"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.shared.program.CommonEngineCompareOperation"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorThresholdPartialDuration"
        },
        "MetricsEngineOperatorThresholdRange": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "series": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "lowerBound": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "upperBound": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "inclusive": {
                            "type": "boolean"
                        },
                        "invert": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorThresholdRange"
        },
        "MetricsEngineOperatorUnaryAsSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorUnaryAsSeries"
        },
        "MetricsEngineOperatorUnaryNot": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorUnaryNot"
        },
        "MetricsEngineOperatorUnarySelectValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorUnarySelectValue"
        },
        "MetricsEngineOperatorVectorBinary": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ]
        },
        "MetricsEngineOperatorVectorBinaryAdd": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineOperatorVectorBinary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorVectorBinaryAdd"
        },
        "MetricsEngineOperatorVectorBinarySubtract": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineOperatorVectorBinary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineOperatorVectorBinarySubtract"
        },
        "MetricsEngineSelectValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string"
                        },
                        "values": {
                            "$ref": "#/definitions/TimeSeriesPropertyResponse"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineSelectValue"
        },
        "MetricsEngineStatementSetOutputToScalar": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "scalar": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineStatementSetOutputToScalar"
        },
        "MetricsEngineStatementSetOutputToSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "series": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineStatementSetOutputToSeries"
        },
        "MetricsEngineStatementSetOutputToSeriesWithName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromMetrics"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "series": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineStatementSetOutputToSeriesWithName"
        },
        "MetricsEngineValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object"
                }
            ]
        },
        "MetricsEngineValueScalar": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "format": "double"
                        },
                        "units": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineValueScalar"
        },
        "MetricsEngineValueSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/MetricsEngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "values": {
                            "$ref": "#/definitions/TimeSeriesPropertyResponse"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineValueSeries"
        },
        "MetricsEngineValueSetOfSeries": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValueListConcrete"
                },
                {
                    "type": "object",
                    "properties": {
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MetricsEngineValueSeries"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "MetricsEngineValueSetOfSeries"
        },
        "NetworkAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/Asset"
                },
                {
                    "type": "object",
                    "properties": {
                        "cidr": {
                            "type": "string"
                        },
                        "staticAddress": {
                            "type": "string"
                        },
                        "networkInterface": {
                            "type": "string"
                        },
                        "samplingPeriod": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "protocolsConfiguration": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProtocolConfig"
                            }
                        },
                        "discoveryState": {
                            "$ref": "#/definitions/DiscoveryState"
                        },
                        "lastOutput": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "lastOffset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NetworkAsset",
            "x-optio3-external-record-id": "NetworkAsset"
        },
        "NetworkDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "sysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NetworkDescriptor"
        },
        "NetworkFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/AssetFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NetworkFilterRequest"
        },
        "NonDiscoverableBACnetDevice": {
            "type": "object",
            "properties": {
                "networkNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "instanceNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "mstpAddress": {
                    "type": "integer",
                    "format": "int32"
                },
                "networkAddress": {
                    "type": "string"
                },
                "networkPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "NonDiscoverableMstpTrunk": {
            "type": "object",
            "properties": {
                "networkAddress": {
                    "type": "string"
                },
                "networkPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "networkNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "Normalization": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "type": "boolean"
                },
                "rules": {
                    "$ref": "#/definitions/NormalizationRules"
                }
            },
            "x-optio3-external-record-id": "Normalization"
        },
        "NormalizationDefinitionDetails": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EngineTab"
                    }
                },
                "temporary": {
                    "type": "boolean"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "NormalizationDefinitionDetailsForUserProgram",
                    "subtype_model": "NormalizationDefinitionDetailsForUserProgram"
                }
            ]
        },
        "NormalizationDefinitionDetailsForUserProgram": {
            "allOf": [
                {
                    "$ref": "#/definitions/NormalizationDefinitionDetails"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationDefinitionDetailsForUserProgram"
        },
        "NormalizationEngineExecutionStep": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExecutionStep"
        },
        "NormalizationEngineExecutionStepEquipmentClassification": {
            "allOf": [
                {
                    "$ref": "#/definitions/NormalizationEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipment": {
                            "$ref": "#/definitions/NormalizationEngineValueEquipment"
                        },
                        "classificationAssignment": {
                            "$ref": "#/definitions/EquipmentClassAssignment"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExecutionStepEquipmentClassification"
        },
        "NormalizationEngineExecutionStepPointClassification": {
            "allOf": [
                {
                    "$ref": "#/definitions/NormalizationEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "pointClassId": {
                            "type": "string"
                        },
                        "classificationAssignment": {
                            "$ref": "#/definitions/PointClassAssignment"
                        },
                        "classificationDocument": {
                            "$ref": "#/definitions/NormalizationEngineValueDocument"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExecutionStepPointClassification"
        },
        "NormalizationEngineExecutionStepPushEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/NormalizationEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "parentEquipment": {
                            "$ref": "#/definitions/NormalizationEngineValueEquipment"
                        },
                        "equipment": {
                            "$ref": "#/definitions/NormalizationEngineValueEquipment"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExecutionStepPushEquipment"
        },
        "NormalizationEngineExecutionStepUnits": {
            "allOf": [
                {
                    "$ref": "#/definitions/NormalizationEngineExecutionStep"
                },
                {
                    "type": "object",
                    "properties": {
                        "units": {
                            "type": "string",
                            "enum": [
                                "enumerated",
                                "onOff",
                                "activeInactive",
                                "constant",
                                "log",
                                "meters",
                                "nanometers",
                                "micrometers",
                                "millimeters",
                                "centimeters",
                                "kilometers",
                                "inches",
                                "feet",
                                "miles",
                                "seconds",
                                "hundredths_seconds",
                                "milliseconds",
                                "minutes",
                                "hours",
                                "days",
                                "weeks",
                                "months",
                                "years",
                                "grams",
                                "nanograms",
                                "micrograms",
                                "milligrams",
                                "kilograms",
                                "pounds_mass",
                                "tons",
                                "meters_per_second",
                                "meters_per_minute",
                                "meters_per_hour",
                                "millimeters_per_second",
                                "millimeters_per_minute",
                                "millimeters_per_hour",
                                "kilometers_per_hour",
                                "feet_per_second",
                                "feet_per_minute",
                                "miles_per_hour",
                                "knots",
                                "longitude",
                                "latitude",
                                "meters_per_second_per_second",
                                "millig",
                                "cubic_meters",
                                "cubic_feet",
                                "liters",
                                "milliliters",
                                "imperial_gallons",
                                "us_gallons",
                                "cubic_feet_per_minute",
                                "cubic_feet_per_second",
                                "cubic_feet_per_hour",
                                "cubic_feet_per_day",
                                "thousand_cubic_feet_per_day",
                                "standard_cubic_feet_per_day",
                                "million_standard_cubic_feet_per_minute",
                                "million_standard_cubic_feet_per_day",
                                "thousand_standard_cubic_feet_per_day",
                                "cubic_meters_per_minute",
                                "cubic_meters_per_second",
                                "cubic_meters_per_hour",
                                "cubic_meters_per_day",
                                "liters_per_second",
                                "liters_per_minute",
                                "liters_per_hour",
                                "milliliters_per_second",
                                "pounds_mass_per_day",
                                "imperial_gallons_per_minute",
                                "us_gallons_per_minute",
                                "us_gallons_per_hour",
                                "square_meters",
                                "square_centimeters",
                                "square_feet",
                                "square_inches",
                                "currency_dollar_US",
                                "currency_dollar_Canadian",
                                "currency_euro",
                                "currency_generic",
                                "amperes",
                                "milliamperes",
                                "kiloamperes",
                                "megaamperes",
                                "volts",
                                "millivolts",
                                "kilovolts",
                                "megavolts",
                                "watts",
                                "milliwatts",
                                "kilowatts",
                                "megawatts",
                                "amperes_per_meter",
                                "amperes_per_square_meter",
                                "ampere_square_meters",
                                "ohms",
                                "milliohms",
                                "kilohms",
                                "megohms",
                                "ohm_meters",
                                "ohm_meter_squared_per_meter",
                                "siemens",
                                "millisiemens",
                                "microsiemens",
                                "siemens_per_meter",
                                "microsiemens_per_millimeter",
                                "decibels",
                                "decibels_milliwatts",
                                "decibels_millivolt",
                                "decibels_volt",
                                "farads",
                                "henrys",
                                "teslas",
                                "webers",
                                "power_factor",
                                "volt_amperes",
                                "kilovolt_amperes",
                                "megavolt_amperes",
                                "volt_amperes_reactive",
                                "kilovolt_amperes_reactive",
                                "megavolt_amperes_reactive",
                                "volts_per_meter",
                                "volts_per_degree_kelvin",
                                "degrees_phase",
                                "ampere_seconds",
                                "ampere_hours",
                                "volt_ampere_hours",
                                "kilovolt_ampere_hours",
                                "megavolt_ampere_hours",
                                "volt_ampere_hours_reactive",
                                "kilovolt_ampere_hours_reactive",
                                "megavolt_ampere_hours_reactive",
                                "volt_square_hours",
                                "ampere_square_hours",
                                "joules",
                                "kilojoules",
                                "megajoules",
                                "kilojoules_per_kilogram",
                                "watt_hours",
                                "kilowatt_hours",
                                "megawatt_hours",
                                "watt_hours_reactive",
                                "kilowatt_hours_reactive",
                                "megawatt_hours_reactive",
                                "btus",
                                "kilo_btus",
                                "mega_btus",
                                "therms",
                                "ton_hours",
                                "joules_per_kilogram_dry_air",
                                "kilojoules_per_kilogram_dry_air",
                                "megajoules_per_kilogram_dry_air",
                                "btus_per_pound_dry_air",
                                "btus_per_pound",
                                "joules_per_degree_kelvin",
                                "kilojoules_per_degree_kelvin",
                                "megajoules_per_degree_kelvin",
                                "joules_per_kilogram_degree_kelvin",
                                "newton",
                                "newton_meters",
                                "hertz",
                                "kilohertz",
                                "megahertz",
                                "cycles_per_minute",
                                "cycles_per_hour",
                                "per_hour",
                                "per_minute",
                                "per_second",
                                "grams_of_water_per_kilogram_dry_air",
                                "percent_relative_humidity",
                                "watts_per_square_foot",
                                "watts_per_square_meter",
                                "milliwatts_per_square_centimeter",
                                "candelas",
                                "candelas_per_square_meter",
                                "lumens",
                                "luxes",
                                "foot_candles",
                                "grams_per_second",
                                "grams_per_minute",
                                "kilograms_per_second",
                                "kilograms_per_minute",
                                "kilograms_per_hour",
                                "pounds_mass_per_second",
                                "pounds_mass_per_minute",
                                "pounds_mass_per_hour",
                                "tons_per_hour",
                                "btus_per_hour",
                                "kilo_btus_per_hour",
                                "joule_per_hours",
                                "horsepower",
                                "tons_refrigeration",
                                "pascals",
                                "hectopascals",
                                "kilopascals",
                                "megapascals",
                                "millibars",
                                "bars",
                                "pounds_force_per_square_inch",
                                "millimeters_of_water",
                                "centimeters_of_water",
                                "inches_of_water",
                                "millimeters_of_mercury",
                                "centimeters_of_mercury",
                                "inches_of_mercury",
                                "degrees_celsius",
                                "degrees_kelvin",
                                "degrees_fahrenheit",
                                "degrees_kelvin_per_hour",
                                "degrees_kelvin_per_minute",
                                "degrees_celsius_per_hour",
                                "degrees_celsius_per_minute",
                                "degrees_fahrenheit_per_hour",
                                "degrees_fahrenheit_per_minute",
                                "degree_days_celsius",
                                "degree_days_fahrenheit",
                                "delta_degrees_kelvin",
                                "delta_degrees_fahrenheit",
                                "no_units",
                                "ticks",
                                "counts",
                                "bytes",
                                "kilo_bytes",
                                "mega_bytes",
                                "giga_bytes",
                                "tera_bytes",
                                "degrees_angular",
                                "radians",
                                "degrees_angular_per_second",
                                "radians_per_second",
                                "mole_percent",
                                "percent",
                                "per_mille",
                                "percent_per_second",
                                "percent_obscuration_per_meter",
                                "percent_obscuration_per_foot",
                                "parts_per_million",
                                "parts_per_billion",
                                "revolutions_per_minute",
                                "joule_seconds",
                                "newton_seconds",
                                "newtons_per_meter",
                                "pascal_seconds",
                                "psi_per_degree_fahrenheit",
                                "kilograms_per_cubic_meter",
                                "kilometers_per_liter",
                                "miles_per_us_gallon",
                                "kilowatts_per_ton",
                                "kilowatt_hours_per_square_meter",
                                "kilowatt_hours_per_square_foot",
                                "watt_hours_per_cubic_meter",
                                "joules_per_cubic_meter",
                                "megajoules_per_square_meter",
                                "megajoules_per_square_foot",
                                "square_meters_per_newton",
                                "watts_per_meter_per_degree_kelvin",
                                "watts_per_square_meter_degree_kelvin",
                                "grams_per_gram",
                                "kilograms_per_kilogram",
                                "grams_per_kilogram",
                                "milligrams_per_gram",
                                "milligrams_per_kilogram",
                                "grams_per_milliliter",
                                "grams_per_liter",
                                "grams_per_square_meter",
                                "milligrams_per_liter",
                                "micrograms_per_liter",
                                "grams_per_cubic_meter",
                                "milligrams_per_cubic_meter",
                                "micrograms_per_cubic_meter",
                                "nanograms_per_cubic_meter",
                                "grams_per_cubic_centimeter",
                                "becquerels",
                                "kilobecquerels",
                                "megabecquerels",
                                "gray",
                                "milligray",
                                "microgray",
                                "sieverts",
                                "millisieverts",
                                "microsieverts",
                                "microsieverts_per_hour",
                                "millirems",
                                "millirems_per_hour",
                                "decibels_a",
                                "nephelometric_turbidity_unit",
                                "pH",
                                "minutes_per_degree_kelvin"
                            ],
                            "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExecutionStepUnits"
        },
        "NormalizationEngineExpressionCreateChildEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "parent": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "name": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "equipmentClassId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionCreateChildEquipment"
        },
        "NormalizationEngineExpressionCreateEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "equipmentClassId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionCreateEquipment"
        },
        "NormalizationEngineExpressionGetControlPointClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointClass"
        },
        "NormalizationEngineExpressionGetControlPointDescription": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointDescription"
        },
        "NormalizationEngineExpressionGetControlPointIdentifier": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointIdentifier"
        },
        "NormalizationEngineExpressionGetControlPointLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointLocation"
        },
        "NormalizationEngineExpressionGetControlPointName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointName"
        },
        "NormalizationEngineExpressionGetControlPointNameRaw": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointNameRaw"
        },
        "NormalizationEngineExpressionGetControlPointOverrideName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointOverrideName"
        },
        "NormalizationEngineExpressionGetControlPointUnits": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointUnits"
        },
        "NormalizationEngineExpressionGetControlPointUnitsString": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControlPointUnitsString"
        },
        "NormalizationEngineExpressionGetControllerBackupName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerBackupName"
        },
        "NormalizationEngineExpressionGetControllerDescription": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerDescription"
        },
        "NormalizationEngineExpressionGetControllerIdentifier": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerIdentifier"
        },
        "NormalizationEngineExpressionGetControllerInSubnet": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "subnets": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FilteredSubnet"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerInSubnet"
        },
        "NormalizationEngineExpressionGetControllerLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerLocation"
        },
        "NormalizationEngineExpressionGetControllerModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerModel"
        },
        "NormalizationEngineExpressionGetControllerName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerName"
        },
        "NormalizationEngineExpressionGetControllerVendor": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllerVendor"
        },
        "NormalizationEngineExpressionGetControllers": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetControllers"
        },
        "NormalizationEngineExpressionGetDashboardEquipmentName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetDashboardEquipmentName"
        },
        "NormalizationEngineExpressionGetDashboardName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetDashboardName"
        },
        "NormalizationEngineExpressionGetEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetEquipment"
        },
        "NormalizationEngineExpressionGetEquipmentClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetEquipmentClass"
        },
        "NormalizationEngineExpressionGetEquipments": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetEquipments"
        },
        "NormalizationEngineExpressionGetImportedStructure": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetImportedStructure"
        },
        "NormalizationEngineExpressionGetInputValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetInputValue"
        },
        "NormalizationEngineExpressionGetLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetLocation"
        },
        "NormalizationEngineExpressionGetMetadataNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetMetadataNumber"
        },
        "NormalizationEngineExpressionGetMetadataString": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetMetadataString"
        },
        "NormalizationEngineExpressionGetTags": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionGetTags"
        },
        "NormalizationEngineExpressionPushEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "equipmentClassId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionPushEquipment"
        },
        "NormalizationEngineExpressionPushEquipmentTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineExpressionFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "assignments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EquipmentClassAssignment"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineExpressionPushEquipmentTable"
        },
        "NormalizationEngineLiteralDocumentSet": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NormalizationEngineValueDocument"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineLiteralDocumentSet"
        },
        "NormalizationEngineLiteralEquipmentClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineLiteralFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineLiteralEquipmentClass"
        },
        "NormalizationEngineOperatorBinaryFilterDocumentSet": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "negativeTerms": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorBinaryFilterDocumentSet"
        },
        "NormalizationEngineOperatorBinaryGetJaccardIndex": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorBinaryGetJaccardIndex"
        },
        "NormalizationEngineOperatorBinaryScoreDocuments": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "minNgram": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "maxNgram": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "minDocFrequency": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "minScore": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorBinaryScoreDocuments"
        },
        "NormalizationEngineOperatorBinaryScoreTopDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorBinaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "minNgram": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "maxNgram": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "minDocFrequency": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorBinaryScoreTopDocument"
        },
        "NormalizationEngineOperatorUnaryGetControllerPoints": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetControllerPoints"
        },
        "NormalizationEngineOperatorUnaryGetControllerProperty": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "property": {
                            "type": "string",
                            "enum": [
                                "ObjectId",
                                "Name",
                                "BackupName",
                                "Description",
                                "Location",
                                "Vendor",
                                "Model",
                                "Transport"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.engine.normalizations.value.NormalizationEngineValueController$PropertyType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetControllerProperty"
        },
        "NormalizationEngineOperatorUnaryGetDocumentScore": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetDocumentScore"
        },
        "NormalizationEngineOperatorUnaryGetEquipmentClassId": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetEquipmentClassId"
        },
        "NormalizationEngineOperatorUnaryGetEquipmentClassName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetEquipmentClassName"
        },
        "NormalizationEngineOperatorUnaryGetPointClassDescription": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetPointClassDescription"
        },
        "NormalizationEngineOperatorUnaryGetPointClassName": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetPointClassName"
        },
        "NormalizationEngineOperatorUnaryGetPointProperty": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "property": {
                            "type": "string",
                            "enum": [
                                "ObjectId",
                                "Name",
                                "BackupName",
                                "Description",
                                "Location"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.engine.normalizations.value.NormalizationEngineValuePoint$PropertyType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryGetPointProperty"
        },
        "NormalizationEngineOperatorUnaryNormalize": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryNormalize"
        },
        "NormalizationEngineOperatorUnaryTokenizeString": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineOperatorUnaryFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineOperatorUnaryTokenizeString"
        },
        "NormalizationEngineStatementClearEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementClearEquipment"
        },
        "NormalizationEngineStatementPushEquipmentLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipment": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "ADMITTING",
                                "APARTMENT",
                                "ATRIUM",
                                "AUDITORIUM",
                                "BACKOFFICE",
                                "BALCONY",
                                "BAR_ROOM",
                                "BATHROOM",
                                "BEDROOM",
                                "BREAK_ROOM",
                                "BUILDING",
                                "CABLE_ROOM",
                                "CAFETERIA_ROOM",
                                "CAMPUS",
                                "CINEMA",
                                "CLASSROOM",
                                "CLEANING_ROOM",
                                "CLIMATE_CONTROL_ROOM",
                                "CLOAK_ROOM",
                                "CONFERENCE_ROOM",
                                "CONVERSATION_ROOM",
                                "COOKING_ROOM",
                                "COPYING_ROOM",
                                "COPY_ROOM",
                                "DATAS_ERVER_ROOM",
                                "DELIVERY_ROOM",
                                "DINING_ROOM",
                                "DISTRIBUTION_CENTER",
                                "DRESSING_ROOM",
                                "EDUCATIONAL_ROOM",
                                "ELECTRICAL_ROOM",
                                "ELEVATOR",
                                "ELEVATOR_ROOM",
                                "ELEVATOR_SHAFT",
                                "ENTRANCE",
                                "EXERCISE_ROOM",
                                "EXHIBITION_ROOM",
                                "FACADE",
                                "FACTORY",
                                "FITTING_ROOM",
                                "FLOOR",
                                "FOOD_HANDLING_ROOM",
                                "FRONT_DESK",
                                "GARAGE",
                                "GROUP_ROOM",
                                "HALLWAY",
                                "HOME",
                                "HOSPITAL",
                                "ICU",
                                "INPATIENT_SERVICES",
                                "KITCHEN",
                                "LABORATORY",
                                "LAB_SERVICES",
                                "LAND",
                                "LAUNDRY_ROOM",
                                "LEVEL",
                                "LIBRARY",
                                "LIVING_ROOM",
                                "LOADING_RECEIVING_ROOM",
                                "LOBBY",
                                "LOCKER_ROOM",
                                "LOUNGE",
                                "MEDITATION_ROOM",
                                "MORGUE",
                                "MOTHERS_ROOM",
                                "MULTI_PURPOSE_ROOM",
                                "NURSERY",
                                "NURSING_FACILITY",
                                "OFFICE",
                                "OFFICE_ROOM",
                                "OPERATING_ROOM",
                                "OUTPATIENT_SERVICES",
                                "PANTRY",
                                "PARKING",
                                "PERSONAL_HYGIENE",
                                "PHARMACY",
                                "RADIOLOGY",
                                "RECEPTION",
                                "RECORDING_ROOM",
                                "RECOVERY_ROOM",
                                "RECREATIONAL_ROOM",
                                "REGION",
                                "REGIONAL_CENTER",
                                "RESTROOM",
                                "RESTING_ROOM",
                                "RETAIL_ROOM",
                                "ROOF_INNER",
                                "ROOF_OUTER",
                                "ROOF_TOP",
                                "ROOM",
                                "SCHOOL",
                                "SECTION",
                                "SECURITY_ROOM",
                                "SERVER_ROOM",
                                "SERVICE_SHAFT",
                                "SHELTER",
                                "SHIP",
                                "SHOPPING_MALL",
                                "SLAB",
                                "SMALL_STUDY_ROOM",
                                "SPRINKLER_ROOM",
                                "STADIUM",
                                "STAFF_ROOM",
                                "STAIRWELL",
                                "STAIRS",
                                "STORAGE",
                                "STORAGE_ROOM",
                                "SUB_BUILDING",
                                "SUPPLY_ROOM",
                                "TELECOMMUNICATION_ROOM",
                                "TENANT_UNIT",
                                "TERRACE",
                                "THEATER",
                                "THERAPY",
                                "TRAILER",
                                "TREATMENT_ROOM",
                                "TREATMENT_WAITING_ROOM",
                                "TRUCK",
                                "UTILITIES_ROOM",
                                "WARD",
                                "WASTE_MANAGEMENT_ROOM",
                                "WORKSHOP",
                                "ZONE",
                                "OTHER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementPushEquipmentLocation"
        },
        "NormalizationEngineStatementPushEquipmentWithClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "equipmentClassId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementPushEquipmentWithClass"
        },
        "NormalizationEngineStatementPushLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "ADMITTING",
                                "APARTMENT",
                                "ATRIUM",
                                "AUDITORIUM",
                                "BACKOFFICE",
                                "BALCONY",
                                "BAR_ROOM",
                                "BATHROOM",
                                "BEDROOM",
                                "BREAK_ROOM",
                                "BUILDING",
                                "CABLE_ROOM",
                                "CAFETERIA_ROOM",
                                "CAMPUS",
                                "CINEMA",
                                "CLASSROOM",
                                "CLEANING_ROOM",
                                "CLIMATE_CONTROL_ROOM",
                                "CLOAK_ROOM",
                                "CONFERENCE_ROOM",
                                "CONVERSATION_ROOM",
                                "COOKING_ROOM",
                                "COPYING_ROOM",
                                "COPY_ROOM",
                                "DATAS_ERVER_ROOM",
                                "DELIVERY_ROOM",
                                "DINING_ROOM",
                                "DISTRIBUTION_CENTER",
                                "DRESSING_ROOM",
                                "EDUCATIONAL_ROOM",
                                "ELECTRICAL_ROOM",
                                "ELEVATOR",
                                "ELEVATOR_ROOM",
                                "ELEVATOR_SHAFT",
                                "ENTRANCE",
                                "EXERCISE_ROOM",
                                "EXHIBITION_ROOM",
                                "FACADE",
                                "FACTORY",
                                "FITTING_ROOM",
                                "FLOOR",
                                "FOOD_HANDLING_ROOM",
                                "FRONT_DESK",
                                "GARAGE",
                                "GROUP_ROOM",
                                "HALLWAY",
                                "HOME",
                                "HOSPITAL",
                                "ICU",
                                "INPATIENT_SERVICES",
                                "KITCHEN",
                                "LABORATORY",
                                "LAB_SERVICES",
                                "LAND",
                                "LAUNDRY_ROOM",
                                "LEVEL",
                                "LIBRARY",
                                "LIVING_ROOM",
                                "LOADING_RECEIVING_ROOM",
                                "LOBBY",
                                "LOCKER_ROOM",
                                "LOUNGE",
                                "MEDITATION_ROOM",
                                "MORGUE",
                                "MOTHERS_ROOM",
                                "MULTI_PURPOSE_ROOM",
                                "NURSERY",
                                "NURSING_FACILITY",
                                "OFFICE",
                                "OFFICE_ROOM",
                                "OPERATING_ROOM",
                                "OUTPATIENT_SERVICES",
                                "PANTRY",
                                "PARKING",
                                "PERSONAL_HYGIENE",
                                "PHARMACY",
                                "RADIOLOGY",
                                "RECEPTION",
                                "RECORDING_ROOM",
                                "RECOVERY_ROOM",
                                "RECREATIONAL_ROOM",
                                "REGION",
                                "REGIONAL_CENTER",
                                "RESTROOM",
                                "RESTING_ROOM",
                                "RETAIL_ROOM",
                                "ROOF_INNER",
                                "ROOF_OUTER",
                                "ROOF_TOP",
                                "ROOM",
                                "SCHOOL",
                                "SECTION",
                                "SECURITY_ROOM",
                                "SERVER_ROOM",
                                "SERVICE_SHAFT",
                                "SHELTER",
                                "SHIP",
                                "SHOPPING_MALL",
                                "SLAB",
                                "SMALL_STUDY_ROOM",
                                "SPRINKLER_ROOM",
                                "STADIUM",
                                "STAFF_ROOM",
                                "STAIRWELL",
                                "STAIRS",
                                "STORAGE",
                                "STORAGE_ROOM",
                                "SUB_BUILDING",
                                "SUPPLY_ROOM",
                                "TELECOMMUNICATION_ROOM",
                                "TENANT_UNIT",
                                "TERRACE",
                                "THEATER",
                                "THERAPY",
                                "TRAILER",
                                "TREATMENT_ROOM",
                                "TREATMENT_WAITING_ROOM",
                                "TRUCK",
                                "UTILITIES_ROOM",
                                "WARD",
                                "WASTE_MANAGEMENT_ROOM",
                                "WORKSHOP",
                                "ZONE",
                                "OTHER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementPushLocation"
        },
        "NormalizationEngineStatementSetEngineeringUnits": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "units": {
                            "type": "string",
                            "enum": [
                                "enumerated",
                                "onOff",
                                "activeInactive",
                                "constant",
                                "log",
                                "meters",
                                "nanometers",
                                "micrometers",
                                "millimeters",
                                "centimeters",
                                "kilometers",
                                "inches",
                                "feet",
                                "miles",
                                "seconds",
                                "hundredths_seconds",
                                "milliseconds",
                                "minutes",
                                "hours",
                                "days",
                                "weeks",
                                "months",
                                "years",
                                "grams",
                                "nanograms",
                                "micrograms",
                                "milligrams",
                                "kilograms",
                                "pounds_mass",
                                "tons",
                                "meters_per_second",
                                "meters_per_minute",
                                "meters_per_hour",
                                "millimeters_per_second",
                                "millimeters_per_minute",
                                "millimeters_per_hour",
                                "kilometers_per_hour",
                                "feet_per_second",
                                "feet_per_minute",
                                "miles_per_hour",
                                "knots",
                                "longitude",
                                "latitude",
                                "meters_per_second_per_second",
                                "millig",
                                "cubic_meters",
                                "cubic_feet",
                                "liters",
                                "milliliters",
                                "imperial_gallons",
                                "us_gallons",
                                "cubic_feet_per_minute",
                                "cubic_feet_per_second",
                                "cubic_feet_per_hour",
                                "cubic_feet_per_day",
                                "thousand_cubic_feet_per_day",
                                "standard_cubic_feet_per_day",
                                "million_standard_cubic_feet_per_minute",
                                "million_standard_cubic_feet_per_day",
                                "thousand_standard_cubic_feet_per_day",
                                "cubic_meters_per_minute",
                                "cubic_meters_per_second",
                                "cubic_meters_per_hour",
                                "cubic_meters_per_day",
                                "liters_per_second",
                                "liters_per_minute",
                                "liters_per_hour",
                                "milliliters_per_second",
                                "pounds_mass_per_day",
                                "imperial_gallons_per_minute",
                                "us_gallons_per_minute",
                                "us_gallons_per_hour",
                                "square_meters",
                                "square_centimeters",
                                "square_feet",
                                "square_inches",
                                "currency_dollar_US",
                                "currency_dollar_Canadian",
                                "currency_euro",
                                "currency_generic",
                                "amperes",
                                "milliamperes",
                                "kiloamperes",
                                "megaamperes",
                                "volts",
                                "millivolts",
                                "kilovolts",
                                "megavolts",
                                "watts",
                                "milliwatts",
                                "kilowatts",
                                "megawatts",
                                "amperes_per_meter",
                                "amperes_per_square_meter",
                                "ampere_square_meters",
                                "ohms",
                                "milliohms",
                                "kilohms",
                                "megohms",
                                "ohm_meters",
                                "ohm_meter_squared_per_meter",
                                "siemens",
                                "millisiemens",
                                "microsiemens",
                                "siemens_per_meter",
                                "microsiemens_per_millimeter",
                                "decibels",
                                "decibels_milliwatts",
                                "decibels_millivolt",
                                "decibels_volt",
                                "farads",
                                "henrys",
                                "teslas",
                                "webers",
                                "power_factor",
                                "volt_amperes",
                                "kilovolt_amperes",
                                "megavolt_amperes",
                                "volt_amperes_reactive",
                                "kilovolt_amperes_reactive",
                                "megavolt_amperes_reactive",
                                "volts_per_meter",
                                "volts_per_degree_kelvin",
                                "degrees_phase",
                                "ampere_seconds",
                                "ampere_hours",
                                "volt_ampere_hours",
                                "kilovolt_ampere_hours",
                                "megavolt_ampere_hours",
                                "volt_ampere_hours_reactive",
                                "kilovolt_ampere_hours_reactive",
                                "megavolt_ampere_hours_reactive",
                                "volt_square_hours",
                                "ampere_square_hours",
                                "joules",
                                "kilojoules",
                                "megajoules",
                                "kilojoules_per_kilogram",
                                "watt_hours",
                                "kilowatt_hours",
                                "megawatt_hours",
                                "watt_hours_reactive",
                                "kilowatt_hours_reactive",
                                "megawatt_hours_reactive",
                                "btus",
                                "kilo_btus",
                                "mega_btus",
                                "therms",
                                "ton_hours",
                                "joules_per_kilogram_dry_air",
                                "kilojoules_per_kilogram_dry_air",
                                "megajoules_per_kilogram_dry_air",
                                "btus_per_pound_dry_air",
                                "btus_per_pound",
                                "joules_per_degree_kelvin",
                                "kilojoules_per_degree_kelvin",
                                "megajoules_per_degree_kelvin",
                                "joules_per_kilogram_degree_kelvin",
                                "newton",
                                "newton_meters",
                                "hertz",
                                "kilohertz",
                                "megahertz",
                                "cycles_per_minute",
                                "cycles_per_hour",
                                "per_hour",
                                "per_minute",
                                "per_second",
                                "grams_of_water_per_kilogram_dry_air",
                                "percent_relative_humidity",
                                "watts_per_square_foot",
                                "watts_per_square_meter",
                                "milliwatts_per_square_centimeter",
                                "candelas",
                                "candelas_per_square_meter",
                                "lumens",
                                "luxes",
                                "foot_candles",
                                "grams_per_second",
                                "grams_per_minute",
                                "kilograms_per_second",
                                "kilograms_per_minute",
                                "kilograms_per_hour",
                                "pounds_mass_per_second",
                                "pounds_mass_per_minute",
                                "pounds_mass_per_hour",
                                "tons_per_hour",
                                "btus_per_hour",
                                "kilo_btus_per_hour",
                                "joule_per_hours",
                                "horsepower",
                                "tons_refrigeration",
                                "pascals",
                                "hectopascals",
                                "kilopascals",
                                "megapascals",
                                "millibars",
                                "bars",
                                "pounds_force_per_square_inch",
                                "millimeters_of_water",
                                "centimeters_of_water",
                                "inches_of_water",
                                "millimeters_of_mercury",
                                "centimeters_of_mercury",
                                "inches_of_mercury",
                                "degrees_celsius",
                                "degrees_kelvin",
                                "degrees_fahrenheit",
                                "degrees_kelvin_per_hour",
                                "degrees_kelvin_per_minute",
                                "degrees_celsius_per_hour",
                                "degrees_celsius_per_minute",
                                "degrees_fahrenheit_per_hour",
                                "degrees_fahrenheit_per_minute",
                                "degree_days_celsius",
                                "degree_days_fahrenheit",
                                "delta_degrees_kelvin",
                                "delta_degrees_fahrenheit",
                                "no_units",
                                "ticks",
                                "counts",
                                "bytes",
                                "kilo_bytes",
                                "mega_bytes",
                                "giga_bytes",
                                "tera_bytes",
                                "degrees_angular",
                                "radians",
                                "degrees_angular_per_second",
                                "radians_per_second",
                                "mole_percent",
                                "percent",
                                "per_mille",
                                "percent_per_second",
                                "percent_obscuration_per_meter",
                                "percent_obscuration_per_foot",
                                "parts_per_million",
                                "parts_per_billion",
                                "revolutions_per_minute",
                                "joule_seconds",
                                "newton_seconds",
                                "newtons_per_meter",
                                "pascal_seconds",
                                "psi_per_degree_fahrenheit",
                                "kilograms_per_cubic_meter",
                                "kilometers_per_liter",
                                "miles_per_us_gallon",
                                "kilowatts_per_ton",
                                "kilowatt_hours_per_square_meter",
                                "kilowatt_hours_per_square_foot",
                                "watt_hours_per_cubic_meter",
                                "joules_per_cubic_meter",
                                "megajoules_per_square_meter",
                                "megajoules_per_square_foot",
                                "square_meters_per_newton",
                                "watts_per_meter_per_degree_kelvin",
                                "watts_per_square_meter_degree_kelvin",
                                "grams_per_gram",
                                "kilograms_per_kilogram",
                                "grams_per_kilogram",
                                "milligrams_per_gram",
                                "milligrams_per_kilogram",
                                "grams_per_milliliter",
                                "grams_per_liter",
                                "grams_per_square_meter",
                                "milligrams_per_liter",
                                "micrograms_per_liter",
                                "grams_per_cubic_meter",
                                "milligrams_per_cubic_meter",
                                "micrograms_per_cubic_meter",
                                "nanograms_per_cubic_meter",
                                "grams_per_cubic_centimeter",
                                "becquerels",
                                "kilobecquerels",
                                "megabecquerels",
                                "gray",
                                "milligray",
                                "microgray",
                                "sieverts",
                                "millisieverts",
                                "microsieverts",
                                "microsieverts_per_hour",
                                "millirems",
                                "millirems_per_hour",
                                "decibels_a",
                                "nephelometric_turbidity_unit",
                                "pH",
                                "minutes_per_degree_kelvin"
                            ],
                            "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetEngineeringUnits"
        },
        "NormalizationEngineStatementSetEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetEquipment"
        },
        "NormalizationEngineStatementSetEquipmentAndClassHint": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "hint": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetEquipmentAndClassHint"
        },
        "NormalizationEngineStatementSetEquipmentClassTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "assignments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EquipmentClassAssignment"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetEquipmentClassTable"
        },
        "NormalizationEngineStatementSetMetadata": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetMetadata"
        },
        "NormalizationEngineStatementSetOutputValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetOutputValue"
        },
        "NormalizationEngineStatementSetPointClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "pointClassId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetPointClass"
        },
        "NormalizationEngineStatementSetPointClassFromDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetPointClassFromDocument"
        },
        "NormalizationEngineStatementSetPointClassFromTermScoring": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetPointClassFromTermScoring"
        },
        "NormalizationEngineStatementSetPointClassTable": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        },
                        "assignments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PointClassAssignment"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetPointClassTable"
        },
        "NormalizationEngineStatementSetSamplingPeriod": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "samplingPeriod": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetSamplingPeriod"
        },
        "NormalizationEngineStatementSetTags": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineStatementFromNormalization"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/EngineExpression"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineStatementSetTags"
        },
        "NormalizationEngineValueController": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "locator": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "objectId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "backupName": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "vendorName": {
                            "type": "string"
                        },
                        "modelName": {
                            "type": "string"
                        },
                        "transport": {
                            "$ref": "#/definitions/TransportAddress"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineValueController"
        },
        "NormalizationEngineValueDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "text": {
                            "type": "string"
                        },
                        "score": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineValueDocument"
        },
        "NormalizationEngineValueEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "equipmentClassId": {
                            "type": "string"
                        },
                        "equipmentClassHint": {
                            "type": "string"
                        },
                        "setUnclassified": {
                            "type": "boolean"
                        },
                        "locations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NormalizationEngineValueLocation"
                            }
                        },
                        "childEquipment": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NormalizationEngineValueEquipment"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineValueEquipment"
        },
        "NormalizationEngineValueLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "ADMITTING",
                                "APARTMENT",
                                "ATRIUM",
                                "AUDITORIUM",
                                "BACKOFFICE",
                                "BALCONY",
                                "BAR_ROOM",
                                "BATHROOM",
                                "BEDROOM",
                                "BREAK_ROOM",
                                "BUILDING",
                                "CABLE_ROOM",
                                "CAFETERIA_ROOM",
                                "CAMPUS",
                                "CINEMA",
                                "CLASSROOM",
                                "CLEANING_ROOM",
                                "CLIMATE_CONTROL_ROOM",
                                "CLOAK_ROOM",
                                "CONFERENCE_ROOM",
                                "CONVERSATION_ROOM",
                                "COOKING_ROOM",
                                "COPYING_ROOM",
                                "COPY_ROOM",
                                "DATAS_ERVER_ROOM",
                                "DELIVERY_ROOM",
                                "DINING_ROOM",
                                "DISTRIBUTION_CENTER",
                                "DRESSING_ROOM",
                                "EDUCATIONAL_ROOM",
                                "ELECTRICAL_ROOM",
                                "ELEVATOR",
                                "ELEVATOR_ROOM",
                                "ELEVATOR_SHAFT",
                                "ENTRANCE",
                                "EXERCISE_ROOM",
                                "EXHIBITION_ROOM",
                                "FACADE",
                                "FACTORY",
                                "FITTING_ROOM",
                                "FLOOR",
                                "FOOD_HANDLING_ROOM",
                                "FRONT_DESK",
                                "GARAGE",
                                "GROUP_ROOM",
                                "HALLWAY",
                                "HOME",
                                "HOSPITAL",
                                "ICU",
                                "INPATIENT_SERVICES",
                                "KITCHEN",
                                "LABORATORY",
                                "LAB_SERVICES",
                                "LAND",
                                "LAUNDRY_ROOM",
                                "LEVEL",
                                "LIBRARY",
                                "LIVING_ROOM",
                                "LOADING_RECEIVING_ROOM",
                                "LOBBY",
                                "LOCKER_ROOM",
                                "LOUNGE",
                                "MEDITATION_ROOM",
                                "MORGUE",
                                "MOTHERS_ROOM",
                                "MULTI_PURPOSE_ROOM",
                                "NURSERY",
                                "NURSING_FACILITY",
                                "OFFICE",
                                "OFFICE_ROOM",
                                "OPERATING_ROOM",
                                "OUTPATIENT_SERVICES",
                                "PANTRY",
                                "PARKING",
                                "PERSONAL_HYGIENE",
                                "PHARMACY",
                                "RADIOLOGY",
                                "RECEPTION",
                                "RECORDING_ROOM",
                                "RECOVERY_ROOM",
                                "RECREATIONAL_ROOM",
                                "REGION",
                                "REGIONAL_CENTER",
                                "RESTROOM",
                                "RESTING_ROOM",
                                "RETAIL_ROOM",
                                "ROOF_INNER",
                                "ROOF_OUTER",
                                "ROOF_TOP",
                                "ROOM",
                                "SCHOOL",
                                "SECTION",
                                "SECURITY_ROOM",
                                "SERVER_ROOM",
                                "SERVICE_SHAFT",
                                "SHELTER",
                                "SHIP",
                                "SHOPPING_MALL",
                                "SLAB",
                                "SMALL_STUDY_ROOM",
                                "SPRINKLER_ROOM",
                                "STADIUM",
                                "STAFF_ROOM",
                                "STAIRWELL",
                                "STAIRS",
                                "STORAGE",
                                "STORAGE_ROOM",
                                "SUB_BUILDING",
                                "SUPPLY_ROOM",
                                "TELECOMMUNICATION_ROOM",
                                "TENANT_UNIT",
                                "TERRACE",
                                "THEATER",
                                "THERAPY",
                                "TRAILER",
                                "TREATMENT_ROOM",
                                "TREATMENT_WAITING_ROOM",
                                "TRUCK",
                                "UTILITIES_ROOM",
                                "WARD",
                                "WASTE_MANAGEMENT_ROOM",
                                "WORKSHOP",
                                "ZONE",
                                "OTHER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineValueLocation"
        },
        "NormalizationEngineValuePoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/EngineValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "locator": {
                            "$ref": "#/definitions/RecordLocator"
                        },
                        "objectId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "backupName": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "NormalizationEngineValuePoint"
        },
        "NormalizationEquipment": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "sysId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "equipmentClassId": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NormalizationEquipmentLocation"
                    }
                }
            }
        },
        "NormalizationEquipmentLocation": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "ADMITTING",
                        "APARTMENT",
                        "ATRIUM",
                        "AUDITORIUM",
                        "BACKOFFICE",
                        "BALCONY",
                        "BAR_ROOM",
                        "BATHROOM",
                        "BEDROOM",
                        "BREAK_ROOM",
                        "BUILDING",
                        "CABLE_ROOM",
                        "CAFETERIA_ROOM",
                        "CAMPUS",
                        "CINEMA",
                        "CLASSROOM",
                        "CLEANING_ROOM",
                        "CLIMATE_CONTROL_ROOM",
                        "CLOAK_ROOM",
                        "CONFERENCE_ROOM",
                        "CONVERSATION_ROOM",
                        "COOKING_ROOM",
                        "COPYING_ROOM",
                        "COPY_ROOM",
                        "DATAS_ERVER_ROOM",
                        "DELIVERY_ROOM",
                        "DINING_ROOM",
                        "DISTRIBUTION_CENTER",
                        "DRESSING_ROOM",
                        "EDUCATIONAL_ROOM",
                        "ELECTRICAL_ROOM",
                        "ELEVATOR",
                        "ELEVATOR_ROOM",
                        "ELEVATOR_SHAFT",
                        "ENTRANCE",
                        "EXERCISE_ROOM",
                        "EXHIBITION_ROOM",
                        "FACADE",
                        "FACTORY",
                        "FITTING_ROOM",
                        "FLOOR",
                        "FOOD_HANDLING_ROOM",
                        "FRONT_DESK",
                        "GARAGE",
                        "GROUP_ROOM",
                        "HALLWAY",
                        "HOME",
                        "HOSPITAL",
                        "ICU",
                        "INPATIENT_SERVICES",
                        "KITCHEN",
                        "LABORATORY",
                        "LAB_SERVICES",
                        "LAND",
                        "LAUNDRY_ROOM",
                        "LEVEL",
                        "LIBRARY",
                        "LIVING_ROOM",
                        "LOADING_RECEIVING_ROOM",
                        "LOBBY",
                        "LOCKER_ROOM",
                        "LOUNGE",
                        "MEDITATION_ROOM",
                        "MORGUE",
                        "MOTHERS_ROOM",
                        "MULTI_PURPOSE_ROOM",
                        "NURSERY",
                        "NURSING_FACILITY",
                        "OFFICE",
                        "OFFICE_ROOM",
                        "OPERATING_ROOM",
                        "OUTPATIENT_SERVICES",
                        "PANTRY",
                        "PARKING",
                        "PERSONAL_HYGIENE",
                        "PHARMACY",
                        "RADIOLOGY",
                        "RECEPTION",
                        "RECORDING_ROOM",
                        "RECOVERY_ROOM",
                        "RECREATIONAL_ROOM",
                        "REGION",
                        "REGIONAL_CENTER",
                        "RESTROOM",
                        "RESTING_ROOM",
                        "RETAIL_ROOM",
                        "ROOF_INNER",
                        "ROOF_OUTER",
                        "ROOF_TOP",
                        "ROOM",
                        "SCHOOL",
                        "SECTION",
                        "SECURITY_ROOM",
                        "SERVER_ROOM",
                        "SERVICE_SHAFT",
                        "SHELTER",
                        "SHIP",
                        "SHOPPING_MALL",
                        "SLAB",
                        "SMALL_STUDY_ROOM",
                        "SPRINKLER_ROOM",
                        "STADIUM",
                        "STAFF_ROOM",
                        "STAIRWELL",
                        "STAIRS",
                        "STORAGE",
                        "STORAGE_ROOM",
                        "SUB_BUILDING",
                        "SUPPLY_ROOM",
                        "TELECOMMUNICATION_ROOM",
                        "TENANT_UNIT",
                        "TERRACE",
                        "THEATER",
                        "THERAPY",
                        "TRAILER",
                        "TREATMENT_ROOM",
                        "TREATMENT_WAITING_ROOM",
                        "TRUCK",
                        "UTILITIES_ROOM",
                        "WARD",
                        "WASTE_MANAGEMENT_ROOM",
                        "WORKSHOP",
                        "ZONE",
                        "OTHER"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.location.LocationType"
                }
            }
        },
        "NormalizationEvaluation": {
            "type": "object",
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NormalizationEngineExecutionStep"
                    }
                },
                "logEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LogLine"
                    }
                }
            }
        },
        "NormalizationMatch": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "enum": [
                        "Disambiguation",
                        "Synonym",
                        "Abbreviation",
                        "Acronym",
                        "StartsWith",
                        "EndsWith",
                        "Contains"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.logic.normalizations.NormalizationMatchKind"
                },
                "match": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                }
            }
        },
        "NormalizationMatchHistory": {
            "type": "object",
            "properties": {
                "match": {
                    "$ref": "#/definitions/NormalizationMatch"
                },
                "before": {
                    "type": "string"
                },
                "after": {
                    "type": "string"
                }
            }
        },
        "NormalizationRules": {
            "type": "object",
            "properties": {
                "pointClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PointClass"
                    }
                },
                "equipmentClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EquipmentClass"
                    }
                },
                "locationClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocationClass"
                    }
                },
                "knownTerms": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/NormalizationRulesKnownTerm"
                    }
                },
                "abbreviations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "startsWith": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "endsWith": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "contains": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "disambiguations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "scoreThreshold": {
                    "type": "number",
                    "format": "double"
                },
                "validation": {
                    "$ref": "#/definitions/ValidationRules"
                },
                "equipmentRelationships": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "equipments": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/NormalizationEquipment"
                    }
                },
                "pointOverrides": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DeviceElementClassificationOverrides"
                    }
                },
                "logic": {
                    "$ref": "#/definitions/NormalizationDefinitionDetails"
                }
            }
        },
        "NormalizationRulesKnownTerm": {
            "type": "object",
            "properties": {
                "acronym": {
                    "type": "string"
                },
                "positiveWeight": {
                    "type": "number",
                    "format": "double"
                },
                "negativeWeight": {
                    "type": "number",
                    "format": "double"
                },
                "weightReason": {
                    "type": "string"
                },
                "synonyms": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "NumericRange": {
            "type": "object",
            "properties": {
                "min": {
                    "type": "number",
                    "format": "double"
                },
                "max": {
                    "type": "number",
                    "format": "double"
                },
                "minInvalid": {
                    "type": "boolean"
                },
                "maxInvalid": {
                    "type": "boolean"
                }
            }
        },
        "PaginatedRecordIdentityList": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32"
                },
                "nextOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "Pane": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "branding": {
                    "$ref": "#/definitions/BrandingConfiguration"
                },
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaneCard"
                    }
                }
            }
        },
        "PaneCard": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaneField"
                    }
                }
            }
        },
        "PaneCardConfiguration": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaneFieldConfiguration"
                    }
                }
            }
        },
        "PaneConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "branding": {
                    "$ref": "#/definitions/BrandingConfiguration"
                },
                "titleInput": {
                    "$ref": "#/definitions/AssetGraphBinding"
                },
                "graph": {
                    "$ref": "#/definitions/AssetGraph"
                },
                "elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaneCardConfiguration"
                    }
                }
            }
        },
        "PaneField": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "label": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "PaneFieldAggregatedValue",
                    "subtype_model": "PaneFieldAggregatedValue"
                },
                {
                    "subtype_name": "PaneFieldAlertCount",
                    "subtype_model": "PaneFieldAlertCount"
                },
                {
                    "subtype_name": "PaneFieldAlertFeed",
                    "subtype_model": "PaneFieldAlertFeed"
                },
                {
                    "subtype_name": "PaneFieldChart",
                    "subtype_model": "PaneFieldChart"
                },
                {
                    "subtype_name": "PaneFieldCurrentValue",
                    "subtype_model": "PaneFieldCurrentValue"
                },
                {
                    "subtype_name": "PaneFieldGauge",
                    "subtype_model": "PaneFieldGauge"
                },
                {
                    "subtype_name": "PaneFieldNumber",
                    "subtype_model": "PaneFieldNumber"
                },
                {
                    "subtype_name": "PaneFieldPathMap",
                    "subtype_model": "PaneFieldPathMap"
                },
                {
                    "subtype_name": "PaneFieldString",
                    "subtype_model": "PaneFieldString"
                }
            ]
        },
        "PaneFieldAggregatedValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/ControlPointsGroup"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldAggregatedValue"
        },
        "PaneFieldAlertCount": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "onlyActive": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldAlertCount"
        },
        "PaneFieldAlertFeed": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldAlertFeed"
        },
        "PaneFieldChart": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/TimeSeriesChartConfiguration"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldChart"
        },
        "PaneFieldConfiguration": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "label": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "PaneFieldConfigurationAggregatedValue",
                    "subtype_model": "PaneFieldConfigurationAggregatedValue"
                },
                {
                    "subtype_name": "PaneFieldConfigurationAlertCount",
                    "subtype_model": "PaneFieldConfigurationAlertCount"
                },
                {
                    "subtype_name": "PaneFieldConfigurationAlertFeed",
                    "subtype_model": "PaneFieldConfigurationAlertFeed"
                },
                {
                    "subtype_name": "PaneFieldConfigurationChart",
                    "subtype_model": "PaneFieldConfigurationChart"
                },
                {
                    "subtype_name": "PaneFieldConfigurationCurrentValue",
                    "subtype_model": "PaneFieldConfigurationCurrentValue"
                },
                {
                    "subtype_name": "PaneFieldConfigurationPathMap",
                    "subtype_model": "PaneFieldConfigurationPathMap"
                }
            ]
        },
        "PaneFieldConfigurationAggregatedValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneFieldConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPointGroup": {
                            "$ref": "#/definitions/ControlPointsGroup"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldConfigurationAggregatedValue"
        },
        "PaneFieldConfigurationAlertCount": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneFieldConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "locationInput": {
                            "$ref": "#/definitions/AssetGraphBinding"
                        },
                        "onlyActive": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldConfigurationAlertCount"
        },
        "PaneFieldConfigurationAlertFeed": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneFieldConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "locationInput": {
                            "$ref": "#/definitions/AssetGraphBinding"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldConfigurationAlertFeed"
        },
        "PaneFieldConfigurationChart": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneFieldConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "config": {
                            "$ref": "#/definitions/TimeSeriesChartConfiguration"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldConfigurationChart"
        },
        "PaneFieldConfigurationCurrentValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneFieldConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        },
                        "suffix": {
                            "type": "string"
                        },
                        "pointInput": {
                            "$ref": "#/definitions/AssetGraphBinding"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldConfigurationCurrentValue"
        },
        "PaneFieldConfigurationPathMap": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneFieldConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "locationInput": {
                            "$ref": "#/definitions/AssetGraphBinding"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldConfigurationPathMap"
        },
        "PaneFieldCurrentValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        },
                        "suffix": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldCurrentValue"
        },
        "PaneFieldGauge": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "SIGNIFICANT",
                                "NORMAL",
                                "LOW"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.alert.AlertSeverity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldGauge"
        },
        "PaneFieldNumber": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "format": "double"
                        },
                        "unitsFactors": {
                            "$ref": "#/definitions/EngineeringUnitsFactors"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldNumber"
        },
        "PaneFieldPathMap": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldPathMap"
        },
        "PaneFieldString": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaneField"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "PaneFieldString"
        },
        "PointClass": {
            "type": "object",
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "ignorePointIfMatched": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "pointClassName": {
                    "type": "string"
                },
                "pointClassDescription": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Analytic",
                        "Command",
                        "Setpoint",
                        "Status",
                        "Value"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.logic.normalizations.PointClassType"
                },
                "unitId": {
                    "type": "integer",
                    "format": "int32"
                },
                "unitDescription": {
                    "type": "string"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "enumerated",
                        "onOff",
                        "activeInactive",
                        "constant",
                        "log",
                        "meters",
                        "nanometers",
                        "micrometers",
                        "millimeters",
                        "centimeters",
                        "kilometers",
                        "inches",
                        "feet",
                        "miles",
                        "seconds",
                        "hundredths_seconds",
                        "milliseconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "years",
                        "grams",
                        "nanograms",
                        "micrograms",
                        "milligrams",
                        "kilograms",
                        "pounds_mass",
                        "tons",
                        "meters_per_second",
                        "meters_per_minute",
                        "meters_per_hour",
                        "millimeters_per_second",
                        "millimeters_per_minute",
                        "millimeters_per_hour",
                        "kilometers_per_hour",
                        "feet_per_second",
                        "feet_per_minute",
                        "miles_per_hour",
                        "knots",
                        "longitude",
                        "latitude",
                        "meters_per_second_per_second",
                        "millig",
                        "cubic_meters",
                        "cubic_feet",
                        "liters",
                        "milliliters",
                        "imperial_gallons",
                        "us_gallons",
                        "cubic_feet_per_minute",
                        "cubic_feet_per_second",
                        "cubic_feet_per_hour",
                        "cubic_feet_per_day",
                        "thousand_cubic_feet_per_day",
                        "standard_cubic_feet_per_day",
                        "million_standard_cubic_feet_per_minute",
                        "million_standard_cubic_feet_per_day",
                        "thousand_standard_cubic_feet_per_day",
                        "cubic_meters_per_minute",
                        "cubic_meters_per_second",
                        "cubic_meters_per_hour",
                        "cubic_meters_per_day",
                        "liters_per_second",
                        "liters_per_minute",
                        "liters_per_hour",
                        "milliliters_per_second",
                        "pounds_mass_per_day",
                        "imperial_gallons_per_minute",
                        "us_gallons_per_minute",
                        "us_gallons_per_hour",
                        "square_meters",
                        "square_centimeters",
                        "square_feet",
                        "square_inches",
                        "currency_dollar_US",
                        "currency_dollar_Canadian",
                        "currency_euro",
                        "currency_generic",
                        "amperes",
                        "milliamperes",
                        "kiloamperes",
                        "megaamperes",
                        "volts",
                        "millivolts",
                        "kilovolts",
                        "megavolts",
                        "watts",
                        "milliwatts",
                        "kilowatts",
                        "megawatts",
                        "amperes_per_meter",
                        "amperes_per_square_meter",
                        "ampere_square_meters",
                        "ohms",
                        "milliohms",
                        "kilohms",
                        "megohms",
                        "ohm_meters",
                        "ohm_meter_squared_per_meter",
                        "siemens",
                        "millisiemens",
                        "microsiemens",
                        "siemens_per_meter",
                        "microsiemens_per_millimeter",
                        "decibels",
                        "decibels_milliwatts",
                        "decibels_millivolt",
                        "decibels_volt",
                        "farads",
                        "henrys",
                        "teslas",
                        "webers",
                        "power_factor",
                        "volt_amperes",
                        "kilovolt_amperes",
                        "megavolt_amperes",
                        "volt_amperes_reactive",
                        "kilovolt_amperes_reactive",
                        "megavolt_amperes_reactive",
                        "volts_per_meter",
                        "volts_per_degree_kelvin",
                        "degrees_phase",
                        "ampere_seconds",
                        "ampere_hours",
                        "volt_ampere_hours",
                        "kilovolt_ampere_hours",
                        "megavolt_ampere_hours",
                        "volt_ampere_hours_reactive",
                        "kilovolt_ampere_hours_reactive",
                        "megavolt_ampere_hours_reactive",
                        "volt_square_hours",
                        "ampere_square_hours",
                        "joules",
                        "kilojoules",
                        "megajoules",
                        "kilojoules_per_kilogram",
                        "watt_hours",
                        "kilowatt_hours",
                        "megawatt_hours",
                        "watt_hours_reactive",
                        "kilowatt_hours_reactive",
                        "megawatt_hours_reactive",
                        "btus",
                        "kilo_btus",
                        "mega_btus",
                        "therms",
                        "ton_hours",
                        "joules_per_kilogram_dry_air",
                        "kilojoules_per_kilogram_dry_air",
                        "megajoules_per_kilogram_dry_air",
                        "btus_per_pound_dry_air",
                        "btus_per_pound",
                        "joules_per_degree_kelvin",
                        "kilojoules_per_degree_kelvin",
                        "megajoules_per_degree_kelvin",
                        "joules_per_kilogram_degree_kelvin",
                        "newton",
                        "newton_meters",
                        "hertz",
                        "kilohertz",
                        "megahertz",
                        "cycles_per_minute",
                        "cycles_per_hour",
                        "per_hour",
                        "per_minute",
                        "per_second",
                        "grams_of_water_per_kilogram_dry_air",
                        "percent_relative_humidity",
                        "watts_per_square_foot",
                        "watts_per_square_meter",
                        "milliwatts_per_square_centimeter",
                        "candelas",
                        "candelas_per_square_meter",
                        "lumens",
                        "luxes",
                        "foot_candles",
                        "grams_per_second",
                        "grams_per_minute",
                        "kilograms_per_second",
                        "kilograms_per_minute",
                        "kilograms_per_hour",
                        "pounds_mass_per_second",
                        "pounds_mass_per_minute",
                        "pounds_mass_per_hour",
                        "tons_per_hour",
                        "btus_per_hour",
                        "kilo_btus_per_hour",
                        "joule_per_hours",
                        "horsepower",
                        "tons_refrigeration",
                        "pascals",
                        "hectopascals",
                        "kilopascals",
                        "megapascals",
                        "millibars",
                        "bars",
                        "pounds_force_per_square_inch",
                        "millimeters_of_water",
                        "centimeters_of_water",
                        "inches_of_water",
                        "millimeters_of_mercury",
                        "centimeters_of_mercury",
                        "inches_of_mercury",
                        "degrees_celsius",
                        "degrees_kelvin",
                        "degrees_fahrenheit",
                        "degrees_kelvin_per_hour",
                        "degrees_kelvin_per_minute",
                        "degrees_celsius_per_hour",
                        "degrees_celsius_per_minute",
                        "degrees_fahrenheit_per_hour",
                        "degrees_fahrenheit_per_minute",
                        "degree_days_celsius",
                        "degree_days_fahrenheit",
                        "delta_degrees_kelvin",
                        "delta_degrees_fahrenheit",
                        "no_units",
                        "ticks",
                        "counts",
                        "bytes",
                        "kilo_bytes",
                        "mega_bytes",
                        "giga_bytes",
                        "tera_bytes",
                        "degrees_angular",
                        "radians",
                        "degrees_angular_per_second",
                        "radians_per_second",
                        "mole_percent",
                        "percent",
                        "per_mille",
                        "percent_per_second",
                        "percent_obscuration_per_meter",
                        "percent_obscuration_per_foot",
                        "parts_per_million",
                        "parts_per_billion",
                        "revolutions_per_minute",
                        "joule_seconds",
                        "newton_seconds",
                        "newtons_per_meter",
                        "pascal_seconds",
                        "psi_per_degree_fahrenheit",
                        "kilograms_per_cubic_meter",
                        "kilometers_per_liter",
                        "miles_per_us_gallon",
                        "kilowatts_per_ton",
                        "kilowatt_hours_per_square_meter",
                        "kilowatt_hours_per_square_foot",
                        "watt_hours_per_cubic_meter",
                        "joules_per_cubic_meter",
                        "megajoules_per_square_meter",
                        "megajoules_per_square_foot",
                        "square_meters_per_newton",
                        "watts_per_meter_per_degree_kelvin",
                        "watts_per_square_meter_degree_kelvin",
                        "grams_per_gram",
                        "kilograms_per_kilogram",
                        "grams_per_kilogram",
                        "milligrams_per_gram",
                        "milligrams_per_kilogram",
                        "grams_per_milliliter",
                        "grams_per_liter",
                        "grams_per_square_meter",
                        "milligrams_per_liter",
                        "micrograms_per_liter",
                        "grams_per_cubic_meter",
                        "milligrams_per_cubic_meter",
                        "micrograms_per_cubic_meter",
                        "nanograms_per_cubic_meter",
                        "grams_per_cubic_centimeter",
                        "becquerels",
                        "kilobecquerels",
                        "megabecquerels",
                        "gray",
                        "milligray",
                        "microgray",
                        "sieverts",
                        "millisieverts",
                        "microsieverts",
                        "microsieverts_per_hour",
                        "millirems",
                        "millirems_per_hour",
                        "decibels_a",
                        "nephelometric_turbidity_unit",
                        "pH",
                        "minutes_per_degree_kelvin"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.EngineeringUnits"
                },
                "kindId": {
                    "type": "integer",
                    "format": "int32"
                },
                "kindDescription": {
                    "type": "string"
                },
                "hints": {
                    "type": "string"
                },
                "aliasPointClassId": {
                    "type": "string"
                },
                "azureDigitalTwin": {
                    "type": "string"
                },
                "wellKnown": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Log",
                        "Ignored",
                        "LocationLongitude",
                        "LocationLatitude",
                        "LocationSpeed",
                        "LocationAltitude",
                        "LocationHeading",
                        "AccelerationX",
                        "AccelerationY",
                        "AccelerationZ",
                        "Acceleration",
                        "VelocityX",
                        "VelocityY",
                        "VelocityZ",
                        "Velocity",
                        "ArrayVoltage",
                        "ArrayCurrent",
                        "ArrayPower",
                        "BatteryVoltage",
                        "BatteryCurrent",
                        "BatteryPower",
                        "BatteryStateOfCharge",
                        "BatteryTemperature",
                        "ExternalVoltage1",
                        "ExternalVoltage2",
                        "LoadVoltage",
                        "LoadCurrent",
                        "LoadPower",
                        "LoadVoltAmpere",
                        "LoadPowerReactive",
                        "LoadPowerFactor",
                        "LoadEnergy",
                        "LoadEnergyReactive",
                        "ChargingStatus",
                        "TotalCharge",
                        "TotalDischarge",
                        "HeatsinkTemperature",
                        "FaultCode",
                        "FaultCodeCharging",
                        "FaultCodeDischarging",
                        "CounterResettable",
                        "CounterNonResettable",
                        "CommandOpen",
                        "CommandClose",
                        "CommandLift",
                        "CommandLower",
                        "CommandTiltUp",
                        "CommandTiltDown",
                        "CommandSlideIn",
                        "CommandSlideOut",
                        "DigitalOutput",
                        "DigitalInput",
                        "MotorSolenoid",
                        "HvacTemperature",
                        "HvacSetTemperature",
                        "HvacCompressorSpeed",
                        "HvacOperatingMode",
                        "HvacStateOfCharge",
                        "HvacStateOfHealth",
                        "NoIdleState",
                        "NoIdleSupplyVoltage",
                        "NoIdleOemVoltage",
                        "NoIdleParkNeutralVoltage",
                        "NoIdleParkingBrakeVoltage",
                        "NoIdleShorelineDetectionVoltage",
                        "NoIdleEmergencyLightsVoltage",
                        "NoIdleDischargeCurrent",
                        "NoIdleAlternatorCurrent",
                        "NoIdleRelays",
                        "NoIdleIgnitionSignal",
                        "NoIdleParkSignal",
                        "NoIdleParkingBrakeSignal",
                        "NoIdleHoodClosedSignal",
                        "NoIdleEmergencyLightsSignal",
                        "NoIdleTemperature",
                        "NoIdleMinTemperature",
                        "NoIdleMaxTemperature",
                        "NoIdleKeyInserted",
                        "NoIdleEngineRunning",
                        "NoIdleMaxDischargeTime",
                        "NoIdleCutoffVoltage",
                        "NoIdleEngineStartCounter",
                        "NoIdleEngineStopCounter",
                        "NoIdleEmergencyLight",
                        "NoIdleChargeEnable",
                        "NoIdleDischargeEnable",
                        "NoIdleRampDoorOpen",
                        "NoIdleACRequest",
                        "ObdiiFaultCodes",
                        "ObdiiTimeRunWithMalfunction",
                        "ObdiiDistanceTraveledWithMalfunction",
                        "ObdiiEngineRPM",
                        "ObdiiCalculatedEngineLoad",
                        "ObdiiEngineCoolantTemperature",
                        "ObdiiEngineOilTemperature",
                        "ObdiiVehicleSpeed",
                        "ObdiiVin",
                        "ObdiiSupportedPIDs",
                        "ObdiiOdometer",
                        "ObdiiEngineRuntime",
                        "ObdiiEngineRuntimeTotal",
                        "SensorTemperature",
                        "SensorPressure",
                        "SensorRSSI",
                        "SensorSignalQuality",
                        "SensorBitErrorRate",
                        "SensorEvent",
                        "SensorExtraTemperature1",
                        "SensorExtraTemperature2",
                        "SensorFlood",
                        "SensorAxisX",
                        "SensorAxisY",
                        "SensorAxisZ",
                        "SensorAxisPitch",
                        "SensorAxisYaw",
                        "SensorAxisRoll",
                        "SensorLevel",
                        "SensorNoise",
                        "SensorAcidity",
                        "SensorFrequency",
                        "SensorFlow",
                        "SensorStatus",
                        "SensorHumidity",
                        "SensorVoltage",
                        "SensorCurrent",
                        "SensorParticleMonitor",
                        "TrackerTrips",
                        "TrackerInTrip",
                        "TrackerTamperAlert",
                        "TrackerRecoveryModeActive",
                        "HolykellLevel",
                        "HolykellTemperature",
                        "SurvalentAnalog",
                        "SurvalentStatus",
                        "SurvalentText"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.WellKnownPointClass"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PointClassAssignment": {
            "type": "object",
            "properties": {
                "regex": {
                    "type": "string"
                },
                "pointClassId": {
                    "type": "string"
                },
                "caseSensitive": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "PrivateValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "PrivateValues": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PrivateValue"
                    }
                }
            }
        },
        "ProberBBMD": {
            "type": "object",
            "properties": {
                "descriptor": {
                    "$ref": "#/definitions/BACnetBBMD"
                },
                "bdt": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProberBroadcastDistributionTableEntry"
                    }
                },
                "fdt": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProberForeignDeviceTableEntry"
                    }
                }
            }
        },
        "ProberBroadcastDistributionTableEntry": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            }
        },
        "ProberForeignDeviceTableEntry": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "timeToLive": {
                    "type": "integer",
                    "format": "int32"
                },
                "remainingTimeToLive": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ProberNetworkStatus": {
            "type": "object",
            "properties": {
                "networkInterfaces": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ProberObject": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "device": {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                "objectId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "ProberObjectBACnet",
                    "subtype_model": "ProberObjectBACnet"
                },
                {
                    "subtype_name": "ProberObjectCANbus",
                    "subtype_model": "ProberObjectCANbus"
                },
                {
                    "subtype_name": "ProberObjectIpn",
                    "subtype_model": "ProberObjectIpn"
                }
            ]
        },
        "ProberObjectBACnet": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberObject"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "ProberObjectBACnet"
        },
        "ProberObjectCANbus": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberObjectCANbus"
        },
        "ProberObjectIpn": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberObjectIpn"
        },
        "ProberOperation": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "ProberOperationForBACnetToAutoDiscovery",
                    "subtype_model": "ProberOperationForBACnetToAutoDiscovery"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToDiscoverBBMDs",
                    "subtype_model": "ProberOperationForBACnetToDiscoverBBMDs"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToDiscoverDevices",
                    "subtype_model": "ProberOperationForBACnetToDiscoverDevices"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToDiscoverRouters",
                    "subtype_model": "ProberOperationForBACnetToDiscoverRouters"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadBBMDs",
                    "subtype_model": "ProberOperationForBACnetToReadBBMDs"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadDevices",
                    "subtype_model": "ProberOperationForBACnetToReadDevices"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadObjectNames",
                    "subtype_model": "ProberOperationForBACnetToReadObjectNames"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadObjects",
                    "subtype_model": "ProberOperationForBACnetToReadObjects"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToScanMstpTrunkForDevices",
                    "subtype_model": "ProberOperationForBACnetToScanMstpTrunkForDevices"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToScanSubnetForDevices",
                    "subtype_model": "ProberOperationForBACnetToScanSubnetForDevices"
                },
                {
                    "subtype_name": "ProberOperationForCANbusToDecodedRead",
                    "subtype_model": "ProberOperationForCANbusToDecodedRead"
                },
                {
                    "subtype_name": "ProberOperationForCANbusToRawRead",
                    "subtype_model": "ProberOperationForCANbusToRawRead"
                },
                {
                    "subtype_name": "ProberOperationForIpnToDecodedRead",
                    "subtype_model": "ProberOperationForIpnToDecodedRead"
                },
                {
                    "subtype_name": "ProberOperationForIpnToObdiiRead",
                    "subtype_model": "ProberOperationForIpnToObdiiRead"
                }
            ]
        },
        "ProberOperationBaseResults": {
            "type": "object",
            "discriminator": "__type_result",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "ProberOperationForBACnetToAutoDiscoveryResults",
                    "subtype_model": "ProberOperationForBACnetToAutoDiscoveryResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToDiscoverBBMDsResults",
                    "subtype_model": "ProberOperationForBACnetToDiscoverBBMDsResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToDiscoverDevicesResults",
                    "subtype_model": "ProberOperationForBACnetToDiscoverDevicesResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToDiscoverRoutersResults",
                    "subtype_model": "ProberOperationForBACnetToDiscoverRoutersResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadBBMDsResults",
                    "subtype_model": "ProberOperationForBACnetToReadBBMDsResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadDevicesResults",
                    "subtype_model": "ProberOperationForBACnetToReadDevicesResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadObjectNamesResults",
                    "subtype_model": "ProberOperationForBACnetToReadObjectNamesResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToReadObjectsResults",
                    "subtype_model": "ProberOperationForBACnetToReadObjectsResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToScanMstpTrunkForDevicesResults",
                    "subtype_model": "ProberOperationForBACnetToScanMstpTrunkForDevicesResults"
                },
                {
                    "subtype_name": "ProberOperationForBACnetToScanSubnetForDevicesResults",
                    "subtype_model": "ProberOperationForBACnetToScanSubnetForDevicesResults"
                },
                {
                    "subtype_name": "ProberOperationForCANbusToDecodedReadResults",
                    "subtype_model": "ProberOperationForCANbusToDecodedReadResults"
                },
                {
                    "subtype_name": "ProberOperationForCANbusToRawReadResults",
                    "subtype_model": "ProberOperationForCANbusToRawReadResults"
                },
                {
                    "subtype_name": "ProberOperationForIpnToDecodedReadResults",
                    "subtype_model": "ProberOperationForIpnToDecodedReadResults"
                },
                {
                    "subtype_name": "ProberOperationForIpnToObdiiReadResults",
                    "subtype_model": "ProberOperationForIpnToObdiiReadResults"
                }
            ]
        },
        "ProberOperationForBACnet": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "cidr": {
                            "type": "string"
                        },
                        "staticAddress": {
                            "type": "string"
                        },
                        "networkInterface": {
                            "type": "string"
                        },
                        "useUDP": {
                            "type": "boolean"
                        },
                        "udpPort": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "useEthernet": {
                            "type": "boolean"
                        },
                        "bbmds": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetBBMD"
                            }
                        },
                        "limitScan": {
                            "$ref": "#/definitions/WhoIsRange"
                        },
                        "defaultTimeout": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "maxParallelRequestsPerHost": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "maxParallelRequestsPerNetwork": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "limitPacketRate": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ProberOperationForBACnetBaseResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationBaseResults"
                },
                {
                    "type": "object"
                }
            ]
        },
        "ProberOperationForBACnetToAutoDiscovery": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "targetSubnet": {
                            "type": "string"
                        },
                        "maxRetries": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToAutoDiscovery"
        },
        "ProberOperationForBACnetToAutoDiscoveryResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "discoveredDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetDeviceDescriptor"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToAutoDiscoveryResults"
        },
        "ProberOperationForBACnetToDiscoverBBMDs": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "targetSubnet": {
                            "type": "string"
                        },
                        "broadcastRetries": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToDiscoverBBMDs"
        },
        "ProberOperationForBACnetToDiscoverBBMDsResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "discoveredDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetDeviceDescriptor"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToDiscoverBBMDsResults"
        },
        "ProberOperationForBACnetToDiscoverDevices": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "broadcastRetries": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sweepMSTP": {
                            "type": "boolean"
                        },
                        "includeNetworksFromRouters": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToDiscoverDevices"
        },
        "ProberOperationForBACnetToDiscoverDevicesResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "discoveredDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetDeviceDescriptor"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToDiscoverDevicesResults"
        },
        "ProberOperationForBACnetToDiscoverRouters": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToDiscoverRouters"
        },
        "ProberOperationForBACnetToDiscoverRoutersResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "discoveredRouters": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberOperationForBACnetToDiscoverRoutersRouterNetwork"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToDiscoverRoutersResults"
        },
        "ProberOperationForBACnetToDiscoverRoutersRouterNetwork": {
            "type": "object",
            "properties": {
                "device": {
                    "$ref": "#/definitions/BACnetDeviceDescriptor"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ProberOperationForBACnetToReadBBMDs": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "maxRetries": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadBBMDs"
        },
        "ProberOperationForBACnetToReadBBMDsResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "bbmds": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberBBMD"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadBBMDsResults"
        },
        "ProberOperationForBACnetToReadDevices": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "targetDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetDeviceDescriptor"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadDevices"
        },
        "ProberOperationForBACnetToReadDevicesResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "objects": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObjectBACnet"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadDevicesResults"
        },
        "ProberOperationForBACnetToReadObjectNames": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "targetDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetDeviceDescriptor"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadObjectNames"
        },
        "ProberOperationForBACnetToReadObjectNamesResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "objects": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObjectBACnet"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadObjectNamesResults"
        },
        "ProberOperationForBACnetToReadObjects": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "targetObjects": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObject"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadObjects"
        },
        "ProberOperationForBACnetToReadObjectsResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "objects": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObjectBACnet"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToReadObjectsResults"
        },
        "ProberOperationForBACnetToScanMstpTrunkForDevices": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "targets": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberOperationForBACnetToScanMstpTrunkForDevicesNetwork"
                            }
                        },
                        "maxRetries": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToScanMstpTrunkForDevices"
        },
        "ProberOperationForBACnetToScanMstpTrunkForDevicesNetwork": {
            "type": "object",
            "properties": {
                "transport": {
                    "$ref": "#/definitions/TransportAddress"
                },
                "networkNumber": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ProberOperationForBACnetToScanMstpTrunkForDevicesResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "discoveredDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetDeviceDescriptor"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToScanMstpTrunkForDevicesResults"
        },
        "ProberOperationForBACnetToScanSubnetForDevices": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnet"
                },
                {
                    "type": "object",
                    "properties": {
                        "targetSubnet": {
                            "type": "string"
                        },
                        "maxRetries": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToScanSubnetForDevices"
        },
        "ProberOperationForBACnetToScanSubnetForDevicesResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForBACnetBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "discoveredDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetDeviceDescriptor"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForBACnetToScanSubnetForDevicesResults"
        },
        "ProberOperationForCANbus": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "string"
                        },
                        "frequency": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "noTermination": {
                            "type": "boolean"
                        },
                        "invert": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "ProberOperationForCANbusBaseResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationBaseResults"
                },
                {
                    "type": "object"
                }
            ]
        },
        "ProberOperationForCANbusToDecodedRead": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForCANbus"
                },
                {
                    "type": "object",
                    "properties": {
                        "samplingSeconds": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForCANbusToDecodedRead"
        },
        "ProberOperationForCANbusToDecodedReadResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForCANbusBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "frames": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObjectCANbus"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForCANbusToDecodedReadResults"
        },
        "ProberOperationForCANbusToRawRead": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForCANbus"
                },
                {
                    "type": "object",
                    "properties": {
                        "samplingSeconds": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForCANbusToRawRead"
        },
        "ProberOperationForCANbusToRawReadResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForCANbusBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "frames": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObjectCANbus"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForCANbusToRawReadResults"
        },
        "ProberOperationForIpn": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperation"
                },
                {
                    "type": "object",
                    "properties": {
                        "accelerometerFrequency": {
                            "type": "number",
                            "format": "float"
                        },
                        "accelerometerRange": {
                            "type": "number",
                            "format": "float"
                        },
                        "accelerometerThreshold": {
                            "type": "number",
                            "format": "float"
                        },
                        "canPort": {
                            "type": "string"
                        },
                        "canFrequency": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "canNoTermination": {
                            "type": "boolean"
                        },
                        "canInvert": {
                            "type": "boolean"
                        },
                        "epsolarPort": {
                            "type": "string"
                        },
                        "epsolarInvert": {
                            "type": "boolean"
                        },
                        "gpsPort": {
                            "type": "string"
                        },
                        "holykellPort": {
                            "type": "string"
                        },
                        "holykellInvert": {
                            "type": "boolean"
                        },
                        "ipnPort": {
                            "type": "string"
                        },
                        "ipnBaudrate": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "ipnInvert": {
                            "type": "boolean"
                        },
                        "obdiiPort": {
                            "type": "string"
                        },
                        "obdiiFrequency": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "obdiiInvert": {
                            "type": "boolean"
                        },
                        "argohytosPort": {
                            "type": "string"
                        },
                        "stealthpowerPort": {
                            "type": "string"
                        },
                        "tristarPort": {
                            "type": "string"
                        },
                        "victronPort": {
                            "type": "string"
                        },
                        "montageBluetoothGatewayPort": {
                            "type": "string"
                        },
                        "samplingSeconds": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ProberOperationForIpnBaseResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationBaseResults"
                },
                {
                    "type": "object"
                }
            ]
        },
        "ProberOperationForIpnToDecodedRead": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForIpn"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForIpnToDecodedRead"
        },
        "ProberOperationForIpnToDecodedReadResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForIpnBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "frames": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObjectIpn"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForIpnToDecodedReadResults"
        },
        "ProberOperationForIpnToObdiiRead": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForIpn"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForIpnToObdiiRead"
        },
        "ProberOperationForIpnToObdiiReadResults": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProberOperationForIpnBaseResults"
                },
                {
                    "type": "object",
                    "properties": {
                        "frames": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProberObjectIpn"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProberOperationForIpnToObdiiReadResults"
        },
        "ProtocolConfig": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "samplingConfigurationId": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "ProtocolConfigForBACnet",
                    "subtype_model": "ProtocolConfigForBACnet"
                },
                {
                    "subtype_name": "ProtocolConfigForIpn",
                    "subtype_model": "ProtocolConfigForIpn"
                }
            ]
        },
        "ProtocolConfigForBACnet": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProtocolConfig"
                },
                {
                    "type": "object",
                    "properties": {
                        "useUDP": {
                            "type": "boolean"
                        },
                        "useEthernet": {
                            "type": "boolean"
                        },
                        "disableBroadcast": {
                            "type": "boolean"
                        },
                        "sweepSubnet": {
                            "type": "boolean"
                        },
                        "sweepMSTP": {
                            "type": "boolean"
                        },
                        "includeNetworksFromRouters": {
                            "type": "boolean"
                        },
                        "networkPort": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bbmds": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BACnetBBMD"
                            }
                        },
                        "scanSubnets": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FilteredSubnet"
                            }
                        },
                        "limitScan": {
                            "$ref": "#/definitions/WhoIsRange"
                        },
                        "maxParallelRequestsPerHost": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "maxParallelRequestsPerNetwork": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "limitPacketRate": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonDiscoverableDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NonDiscoverableBACnetDevice"
                            }
                        },
                        "nonDiscoverableMstpTrunks": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NonDiscoverableMstpTrunk"
                            }
                        },
                        "skippedDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SkippedBACnetDevice"
                            }
                        },
                        "filterSubnets": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FilteredSubnet"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProtocolConfigForBACnet"
        },
        "ProtocolConfigForIpn": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProtocolConfig"
                },
                {
                    "type": "object",
                    "properties": {
                        "accelerometerFrequency": {
                            "type": "number",
                            "format": "float"
                        },
                        "accelerometerRange": {
                            "type": "number",
                            "format": "float"
                        },
                        "accelerometerThreshold": {
                            "type": "number",
                            "format": "float"
                        },
                        "i2cSensors": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/I2CSensor"
                            }
                        },
                        "canPort": {
                            "type": "string"
                        },
                        "canFrequency": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "canNoTermination": {
                            "type": "boolean"
                        },
                        "canInvert": {
                            "type": "boolean"
                        },
                        "epsolarPort": {
                            "type": "string"
                        },
                        "epsolarInvert": {
                            "type": "boolean"
                        },
                        "gpsPort": {
                            "type": "string"
                        },
                        "holykellPort": {
                            "type": "string"
                        },
                        "holykellInvert": {
                            "type": "boolean"
                        },
                        "ipnPort": {
                            "type": "string"
                        },
                        "ipnBaudrate": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "ipnInvert": {
                            "type": "boolean"
                        },
                        "obdiiPort": {
                            "type": "string"
                        },
                        "obdiiFrequency": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "obdiiInvert": {
                            "type": "boolean"
                        },
                        "argohytosPort": {
                            "type": "string"
                        },
                        "stealthpowerPort": {
                            "type": "string"
                        },
                        "tristarPort": {
                            "type": "string"
                        },
                        "victronPort": {
                            "type": "string"
                        },
                        "montageBluetoothGatewayPort": {
                            "type": "string"
                        },
                        "simulate": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ProtocolConfigForIpn"
        },
        "RangeSelection": {
            "type": "object",
            "properties": {
                "range": {
                    "type": "string",
                    "enum": [
                        "Last15Minutes",
                        "Last30Minutes",
                        "Last60Minutes",
                        "Hour",
                        "PreviousHour",
                        "Last3Hours",
                        "Last6Hours",
                        "Last12Hours",
                        "Last24Hours",
                        "Today",
                        "Yesterday",
                        "Last2Days",
                        "Last3Days",
                        "Last7Days",
                        "Week",
                        "PreviousWeek",
                        "Month",
                        "PreviousMonth",
                        "Last30Days",
                        "Quarter",
                        "PreviousQuarter",
                        "Last3Months",
                        "Year",
                        "PreviousYear",
                        "Last365Days",
                        "All"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.TimeRangeId"
                },
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "end": {
                    "type": "string",
                    "format": "date-time"
                },
                "zoneCreated": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "RawImport": {
            "type": "object",
            "properties": {
                "contentsAsJSON": {
                    "type": "string"
                }
            }
        },
        "RecordIdentity": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time"
                },
                "table": {
                    "type": "string"
                }
            }
        },
        "RecordLocator": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "RecurringWeeklySchedule": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DailyScheduleWithDayOfWeek"
                    }
                }
            }
        },
        "RegexReplacement": {
            "type": "object",
            "properties": {
                "regex": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "caseSensitive": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "RelativeTimeRange": {
            "type": "object",
            "properties": {
                "offsetSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "durationSeconds": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RemoteArgument": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "callbackId": {
                    "type": "string"
                }
            }
        },
        "RemoteCallDescriptor": {
            "type": "object",
            "properties": {
                "classId": {
                    "type": "string"
                },
                "methodName": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RemoteArgument"
                    }
                }
            }
        },
        "RemoteExceptionResult": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "declaringClass": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "methodName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fileName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lineNumber": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "cause": {
                    "$ref": "#/definitions/RemoteExceptionResult"
                }
            }
        },
        "RemoteResult": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "exception": {
                    "$ref": "#/definitions/RemoteExceptionResult"
                }
            }
        },
        "Report": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "reportDefinition": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "reportDefinitionVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "rangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "rangeEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Queued",
                        "Finished",
                        "Failed"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.report.ReportStatus"
                },
                "reason": {
                    "type": "string",
                    "enum": [
                        "OnDemand",
                        "Scheduled"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.report.ReportReason"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-external-record-id": "Report"
        },
        "ReportConfiguration": {
            "type": "object",
            "properties": {
                "sharedGraphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedAssetGraph"
                    }
                },
                "pdfFormat": {
                    "type": "string",
                    "enum": [
                        "letter",
                        "legal",
                        "tabloid",
                        "ledger",
                        "a0",
                        "a1",
                        "a2",
                        "a3",
                        "a4",
                        "a5",
                        "a6"
                    ],
                    "x-optio3-enum-type": "com.optio3.client.reporter.model.PaperFormat"
                },
                "landscape": {
                    "type": "boolean"
                },
                "container": {
                    "$ref": "#/definitions/ReportLayoutBase"
                }
            }
        },
        "ReportDefinition": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "autoDelete": {
                    "type": "string",
                    "format": "date-time"
                },
                "headVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "releaseVersion": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "ReportDefinition"
        },
        "ReportDefinitionDetails": {
            "type": "object",
            "properties": {
                "reportConfiguration": {
                    "$ref": "#/definitions/ReportConfiguration"
                },
                "schedule": {
                    "$ref": "#/definitions/ReportSchedulingOptions"
                }
            }
        },
        "ReportDefinitionFilterRequest": {
            "type": "object",
            "properties": {
                "includeAutoDelete": {
                    "type": "boolean"
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "ReportDefinitionVersion": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "definition": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "details": {
                    "$ref": "#/definitions/ReportDefinitionDetails"
                },
                "predecessor": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "successors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "ReportDefinitionVersion"
        },
        "ReportFilterRequest": {
            "type": "object",
            "properties": {
                "definitionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sortBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortCriteria"
                    }
                }
            }
        },
        "ReportLayoutBase": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportLayoutBase"
                    }
                },
                "widthRatio": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "ReportLayoutColumn",
                    "subtype_model": "ReportLayoutColumn"
                },
                {
                    "subtype_name": "ReportLayoutItem",
                    "subtype_model": "ReportLayoutItem"
                },
                {
                    "subtype_name": "ReportLayoutRow",
                    "subtype_model": "ReportLayoutRow"
                }
            ]
        },
        "ReportLayoutColumn": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportLayoutBase"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "ReportLayoutColumn"
        },
        "ReportLayoutItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportLayoutBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "element": {
                            "$ref": "#/definitions/CustomReportElement"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ReportLayoutItem"
        },
        "ReportLayoutRow": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportLayoutBase"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "ReportLayoutRow"
        },
        "ReportSchedule": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "hour": {
                    "type": "integer",
                    "format": "int32"
                },
                "minute": {
                    "type": "integer",
                    "format": "int32"
                },
                "zoneDesired": {
                    "type": "string"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "ReportScheduleDaily",
                    "subtype_model": "ReportScheduleDaily"
                },
                {
                    "subtype_name": "ReportScheduleMonthly",
                    "subtype_model": "ReportScheduleMonthly"
                },
                {
                    "subtype_name": "ReportScheduleOnDemand",
                    "subtype_model": "ReportScheduleOnDemand"
                },
                {
                    "subtype_name": "ReportScheduleWeekly",
                    "subtype_model": "ReportScheduleWeekly"
                }
            ]
        },
        "ReportScheduleDaily": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportSchedule"
                },
                {
                    "type": "object",
                    "properties": {
                        "days": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "MONDAY",
                                    "TUESDAY",
                                    "WEDNESDAY",
                                    "THURSDAY",
                                    "FRIDAY",
                                    "SATURDAY",
                                    "SUNDAY"
                                ],
                                "x-optio3-enum-type": "java.time.DayOfWeek"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ReportScheduleDaily"
        },
        "ReportScheduleMonthly": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportSchedule"
                },
                {
                    "type": "object",
                    "properties": {
                        "dayOfMonth": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ReportScheduleMonthly"
        },
        "ReportScheduleOnDemand": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportSchedule"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "ReportScheduleOnDemand"
        },
        "ReportScheduleWeekly": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportSchedule"
                },
                {
                    "type": "object",
                    "properties": {
                        "dayOfWeek": {
                            "type": "string",
                            "enum": [
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY",
                                "SUNDAY"
                            ],
                            "x-optio3-enum-type": "java.time.DayOfWeek"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "ReportScheduleWeekly"
        },
        "ReportSchedulingOptions": {
            "type": "object",
            "properties": {
                "range": {
                    "type": "string",
                    "enum": [
                        "Last15Minutes",
                        "Last30Minutes",
                        "Last60Minutes",
                        "Hour",
                        "PreviousHour",
                        "Last3Hours",
                        "Last6Hours",
                        "Last12Hours",
                        "Last24Hours",
                        "Today",
                        "Yesterday",
                        "Last2Days",
                        "Last3Days",
                        "Last7Days",
                        "Week",
                        "PreviousWeek",
                        "Month",
                        "PreviousMonth",
                        "Last30Days",
                        "Quarter",
                        "PreviousQuarter",
                        "Last3Months",
                        "Year",
                        "PreviousYear",
                        "Last365Days",
                        "All"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.TimeRangeId"
                },
                "schedule": {
                    "$ref": "#/definitions/ReportSchedule"
                },
                "deliveryOptions": {
                    "$ref": "#/definitions/DeliveryOptions"
                }
            }
        },
        "RestDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "sysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RestDescriptor"
        },
        "RestPerfDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RestPerfDescriptor"
        },
        "Role": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "addAllowed": {
                    "type": "boolean"
                },
                "removeAllowed": {
                    "type": "boolean"
                }
            },
            "x-optio3-external-record-id": "Role"
        },
        "RpcMessage": {
            "type": "object",
            "discriminator": "type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "RpcMessageCall",
                    "subtype_model": "RpcMessage_Call"
                },
                {
                    "subtype_name": "RpcMessageCallReply",
                    "subtype_model": "RpcMessage_Call_Reply"
                },
                {
                    "subtype_name": "RpcMessageCallback",
                    "subtype_model": "RpcMessage_Callback"
                },
                {
                    "subtype_name": "RpcMessagePing",
                    "subtype_model": "RpcMessage_Ping"
                },
                {
                    "subtype_name": "RpcMessagePingReply",
                    "subtype_model": "RpcMessage_Ping_Reply"
                }
            ]
        },
        "RpcMessageReply": {
            "type": "object"
        },
        "RpcMessage_Call": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "instanceId": {
                            "type": "string"
                        },
                        "callId": {
                            "type": "string"
                        },
                        "descriptor": {
                            "$ref": "#/definitions/RemoteCallDescriptor"
                        },
                        "timeout": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "timeoutUnit": {
                            "type": "string",
                            "enum": [
                                "NANOSECONDS",
                                "MICROSECONDS",
                                "MILLISECONDS",
                                "SECONDS",
                                "MINUTES",
                                "HOURS",
                                "DAYS"
                            ],
                            "x-optio3-enum-type": "java.util.concurrent.TimeUnit"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RpcMessageCall"
        },
        "RpcMessage_Call_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/RemoteResult"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RpcMessageCallReply"
        },
        "RpcMessage_Callback": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "callId": {
                            "type": "string"
                        },
                        "callbackId": {
                            "type": "string"
                        },
                        "descriptor": {
                            "$ref": "#/definitions/RemoteCallDescriptor"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "RpcMessageCallback"
        },
        "RpcMessage_Ping": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "RpcMessagePing"
        },
        "RpcMessage_Ping_Reply": {
            "allOf": [
                {
                    "$ref": "#/definitions/RpcMessage"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "RpcMessagePingReply"
        },
        "ScatterPlot": {
            "type": "object",
            "properties": {
                "sourceTuples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScatterPlotSourceTuple"
                    }
                }
            }
        },
        "ScatterPlotSource": {
            "type": "object",
            "properties": {
                "deviceElementId": {
                    "type": "string"
                },
                "binding": {
                    "$ref": "#/definitions/AssetGraphBinding"
                }
            }
        },
        "ScatterPlotSourceTuple": {
            "type": "object",
            "properties": {
                "sourceX": {
                    "$ref": "#/definitions/ScatterPlotSource"
                },
                "sourceY": {
                    "$ref": "#/definitions/ScatterPlotSource"
                },
                "sourceZ": {
                    "$ref": "#/definitions/ScatterPlotSource"
                },
                "name": {
                    "type": "string"
                },
                "colorOverride": {
                    "type": "string"
                },
                "panel": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ScratchPadCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScratchPadEntry"
                    }
                }
            }
        },
        "ScratchPadEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "model": {
                    "$ref": "#/definitions/EngineBlock"
                }
            }
        },
        "SearchRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchRequestFilters"
                    }
                },
                "scopeToFilters": {
                    "type": "boolean"
                }
            }
        },
        "SearchRequestFilters": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "DeviceElementSearchRequestFilters",
                    "subtype_model": "DeviceElementSearchRequestFilters"
                },
                {
                    "subtype_name": "EquipmentSearchRequestFilters",
                    "subtype_model": "EquipmentSearchRequestFilters"
                }
            ]
        },
        "SearchResultSet": {
            "type": "object",
            "properties": {
                "totalUsers": {
                    "type": "integer",
                    "format": "int32"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalAlerts": {
                    "type": "integer",
                    "format": "int32"
                },
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalDevices": {
                    "type": "integer",
                    "format": "int32"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalLocations": {
                    "type": "integer",
                    "format": "int32"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalNetworks": {
                    "type": "integer",
                    "format": "int32"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalGateways": {
                    "type": "integer",
                    "format": "int32"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalDeviceElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviceElements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "totalLogicalGroups": {
                    "type": "integer",
                    "format": "int32"
                },
                "logicalGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "SharedAssetGraph": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "graph": {
                    "$ref": "#/definitions/AssetGraph"
                }
            }
        },
        "SharedAssetSelector": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "graphId": {
                    "type": "string"
                }
            }
        },
        "SkippedBACnetDevice": {
            "type": "object",
            "properties": {
                "networkNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "instanceNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "transportAddress": {
                    "type": "string"
                },
                "transportPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "SortCriteria": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string"
                },
                "ascending": {
                    "type": "boolean"
                }
            }
        },
        "SummaryResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "location",
                        "manufacturer",
                        "priority",
                        "relation",
                        "rule",
                        "severity",
                        "status",
                        "type"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.SummaryFlavor"
                },
                "label": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SystemPreference": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "SystemPreference"
        },
        "TagsCondition": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "TagsConditionBinaryLogic",
                    "subtype_model": "TagsConditionBinaryLogic"
                },
                {
                    "subtype_name": "TagsConditionEquipmentClass",
                    "subtype_model": "TagsConditionEquipmentClass"
                },
                {
                    "subtype_name": "TagsConditionIsAsset",
                    "subtype_model": "TagsConditionIsAsset"
                },
                {
                    "subtype_name": "TagsConditionIsClassified",
                    "subtype_model": "TagsConditionIsClassified"
                },
                {
                    "subtype_name": "TagsConditionIsEquipment",
                    "subtype_model": "TagsConditionIsEquipment"
                },
                {
                    "subtype_name": "TagsConditionLocation",
                    "subtype_model": "TagsConditionLocation"
                },
                {
                    "subtype_name": "TagsConditionMetrics",
                    "subtype_model": "TagsConditionMetrics"
                },
                {
                    "subtype_name": "TagsConditionMetricsOutput",
                    "subtype_model": "TagsConditionMetricsOutput"
                },
                {
                    "subtype_name": "TagsConditionPointClass",
                    "subtype_model": "TagsConditionPointClass"
                },
                {
                    "subtype_name": "TagsConditionTerm",
                    "subtype_model": "TagsConditionTerm"
                },
                {
                    "subtype_name": "TagsConditionTermWithValue",
                    "subtype_model": "TagsConditionTermWithValue"
                },
                {
                    "subtype_name": "TagsConditionUnaryNot",
                    "subtype_model": "TagsConditionUnaryNot"
                }
            ]
        },
        "TagsConditionBinary": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "a": {
                            "$ref": "#/definitions/TagsCondition"
                        },
                        "b": {
                            "$ref": "#/definitions/TagsCondition"
                        }
                    }
                }
            ]
        },
        "TagsConditionBinaryLogic": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsConditionBinary"
                },
                {
                    "type": "object",
                    "properties": {
                        "op": {
                            "type": "string",
                            "enum": [
                                "And",
                                "Or",
                                "Xor"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.tags.TagsConditionOperator"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionBinaryLogic"
        },
        "TagsConditionEquipmentClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipmentClass": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionEquipmentClass"
        },
        "TagsConditionIsAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "sysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionIsAsset"
        },
        "TagsConditionIsClassified": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "TagsConditionIsClassified"
        },
        "TagsConditionIsEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object"
                }
            ],
            "x-optio3-type-name": "TagsConditionIsEquipment"
        },
        "TagsConditionLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "locationSysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionLocation"
        },
        "TagsConditionMetrics": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "metricsSysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionMetrics"
        },
        "TagsConditionMetricsOutput": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "metricsOutput": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionMetricsOutput"
        },
        "TagsConditionPointClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "pointClass": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionPointClass"
        },
        "TagsConditionTerm": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "tag": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionTerm"
        },
        "TagsConditionTermWithValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "tag": {
                            "type": "string"
                        },
                        "valueToMatch": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionTermWithValue"
        },
        "TagsConditionUnary": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsCondition"
                },
                {
                    "type": "object",
                    "properties": {
                        "a": {
                            "$ref": "#/definitions/TagsCondition"
                        }
                    }
                }
            ]
        },
        "TagsConditionUnaryNot": {
            "allOf": [
                {
                    "$ref": "#/definitions/TagsConditionUnary"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "TagsConditionUnaryNot"
        },
        "TagsJoin": {
            "type": "object",
            "properties": {
                "leftSide": {
                    "type": "string"
                },
                "relation": {
                    "type": "string",
                    "enum": [
                        "structural",
                        "controls"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.AssetRelationship"
                },
                "rightSide": {
                    "type": "string"
                }
            }
        },
        "TagsJoinQuery": {
            "type": "object",
            "properties": {
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TagsJoinTerm"
                    }
                },
                "joins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TagsJoin"
                    }
                },
                "startOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxResults": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TagsJoinTerm": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "conditions": {
                    "$ref": "#/definitions/TagsCondition"
                },
                "optional": {
                    "type": "boolean"
                }
            }
        },
        "TagsSummary": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "tagFrequency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "relationFrequency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "pointClassesFrequency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "equipmentClassesFrequency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "TextWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "text": {
                            "type": "string"
                        },
                        "color": {
                            "type": "string"
                        },
                        "alignment": {
                            "type": "string",
                            "enum": [
                                "Left",
                                "Center",
                                "Right"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.enums.HorizontalAlignment"
                        },
                        "preventWrapping": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TextWidgetConfiguration"
        },
        "TimeDuration": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "NANOS",
                        "MICROS",
                        "MILLIS",
                        "SECONDS",
                        "MINUTES",
                        "HOURS",
                        "HALF_DAYS",
                        "DAYS",
                        "WEEKS",
                        "MONTHS",
                        "YEARS",
                        "DECADES",
                        "CENTURIES",
                        "MILLENNIA",
                        "ERAS",
                        "FOREVER"
                    ],
                    "x-optio3-enum-type": "java.time.temporal.ChronoUnit"
                }
            }
        },
        "TimeSeriesAnnotationConfiguration": {
            "type": "object",
            "properties": {
                "hideTooltip": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "panel": {
                    "type": "integer",
                    "format": "int32"
                },
                "sourceId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Area",
                        "AreaInverted",
                        "Point",
                        "XRange",
                        "XRangeInverted",
                        "YRange",
                        "YRangeInverted"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.TimeSeriesAnnotationType"
                },
                "minX": {
                    "type": "number",
                    "format": "double"
                },
                "maxX": {
                    "type": "number",
                    "format": "double"
                },
                "minY": {
                    "type": "number",
                    "format": "double"
                },
                "maxY": {
                    "type": "number",
                    "format": "double"
                },
                "tooltipOffsetX": {
                    "type": "number",
                    "format": "double"
                },
                "tooltipOffsetY": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "TimeSeriesAxisConfiguration": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "displayFactors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "override": {
                    "$ref": "#/definitions/ToggleableNumericRange"
                },
                "groupedFactors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesAxisGroupConfiguration"
                    }
                }
            }
        },
        "TimeSeriesAxisGroupConfiguration": {
            "type": "object",
            "properties": {
                "keyFactors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "selectedFactors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "override": {
                    "$ref": "#/definitions/ToggleableNumericRange"
                }
            }
        },
        "TimeSeriesChartConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/TimeSeriesConfigurationBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "STANDARD",
                                "HIERARCHICAL",
                                "COORDINATE",
                                "GRAPH",
                                "SCATTER",
                                "GRAPH_SCATTER"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.TimeSeriesChartType"
                        },
                        "display": {
                            "$ref": "#/definitions/TimeSeriesDisplayConfiguration"
                        },
                        "panels": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesPanelConfiguration"
                            }
                        },
                        "tooltip": {
                            "$ref": "#/definitions/TimeSeriesTooltipConfiguration"
                        },
                        "annotations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesAnnotationConfiguration"
                            }
                        },
                        "hierarchy": {
                            "$ref": "#/definitions/HierarchicalVisualization"
                        },
                        "graph": {
                            "$ref": "#/definitions/TimeSeriesGraphConfiguration"
                        },
                        "dataSources": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesSourceConfiguration"
                            }
                        },
                        "scatterPlot": {
                            "$ref": "#/definitions/ScatterPlot"
                        },
                        "palette": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TimeSeriesChartConfiguration"
        },
        "TimeSeriesConfigurationBase": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "TimeSeriesChartConfiguration",
                    "subtype_model": "TimeSeriesChartConfiguration"
                }
            ]
        },
        "TimeSeriesDisplayConfiguration": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "fillArea": {
                    "type": "boolean"
                },
                "hideDecimation": {
                    "type": "boolean"
                },
                "automaticAggregation": {
                    "type": "boolean"
                },
                "panelSpacing": {
                    "type": "integer",
                    "format": "int32"
                },
                "showAlerts": {
                    "type": "boolean"
                },
                "hideSources": {
                    "type": "boolean"
                }
            }
        },
        "TimeSeriesEnumeratedValue": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TimeSeriesGraphConfiguration": {
            "type": "object",
            "properties": {
                "sharedGraphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedAssetGraph"
                    }
                },
                "externalBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetGraphBinding"
                    }
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetGraphContext"
                    }
                }
            }
        },
        "TimeSeriesLastValueRequest": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/TimeSeriesPropertyRequest"
                }
            }
        },
        "TimeSeriesLastValueResponse": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "TimeSeriesMultiPropertyRequest": {
            "type": "object",
            "properties": {
                "maxSamples": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxGapBetweenSamples": {
                    "type": "integer",
                    "format": "int32"
                },
                "skipMissing": {
                    "type": "boolean"
                },
                "rangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "rangeEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "specs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesPropertyRequest"
                    }
                },
                "maxInterpolationGap": {
                    "type": "number",
                    "format": "double"
                },
                "deltaEncode": {
                    "type": "boolean"
                }
            }
        },
        "TimeSeriesMultiPropertyResponse": {
            "type": "object",
            "properties": {
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesPropertyResponse"
                    }
                },
                "deltaEncoded": {
                    "type": "boolean"
                }
            }
        },
        "TimeSeriesNewValueRequest": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "prop": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesNewValueRequestValue"
                    }
                }
            }
        },
        "TimeSeriesNewValueRequestValue": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "value": {
                    "type": "object"
                },
                "convertFrom": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                }
            }
        },
        "TimeSeriesNewValueResponse": {
            "type": "object",
            "properties": {
                "accepted": {
                    "type": "integer",
                    "format": "int32"
                },
                "rejected": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TimeSeriesPanelConfiguration": {
            "type": "object",
            "properties": {
                "xAxis": {
                    "$ref": "#/definitions/TimeSeriesAxisConfiguration"
                },
                "leftAxis": {
                    "$ref": "#/definitions/TimeSeriesAxisConfiguration"
                },
                "rightAxis": {
                    "$ref": "#/definitions/TimeSeriesAxisConfiguration"
                },
                "colorSettings": {
                    "$ref": "#/definitions/ColorConfiguration"
                }
            }
        },
        "TimeSeriesPropertyRequest": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "prop": {
                    "type": "string"
                },
                "convertTo": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "offsetInSeconds": {
                    "type": "integer",
                    "format": "int64"
                },
                "treatWideGapAsMissing": {
                    "type": "boolean"
                }
            }
        },
        "TimeSeriesPropertyResponse": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "enumLookup": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enumSetLookup": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "nextTimestamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TimeSeriesPropertyType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Integer",
                        "Decimal",
                        "BitSet",
                        "Enumerated",
                        "EnumeratedSet"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.persistence.asset.TimeSeries$SampleType"
                },
                "resolution": {
                    "type": "string",
                    "enum": [
                        "Max1Hz",
                        "Max100Hz",
                        "Max1000Hz"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.persistence.asset.TimeSeries$SampleResolution"
                },
                "digitsOfPrecision": {
                    "type": "integer",
                    "format": "int32"
                },
                "isBoolean": {
                    "type": "boolean"
                },
                "unitsFactors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesEnumeratedValue"
                    }
                },
                "debounceSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "noValueMarker": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "TimeSeriesRangeRequest": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/TimeSeriesPropertyRequest"
                },
                "rangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "rangeEnd": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TimeSeriesRangeResponse": {
            "type": "object",
            "properties": {
                "firstTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "numberOfSamples": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfMissingSamples": {
                    "type": "integer",
                    "format": "int32"
                },
                "minValue": {
                    "type": "number",
                    "format": "double"
                },
                "maxValue": {
                    "type": "number",
                    "format": "double"
                },
                "averageValue": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "TimeSeriesSchemaRequest": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                }
            }
        },
        "TimeSeriesSchemaResponse": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TimeSeriesPropertyType"
                    }
                }
            }
        },
        "TimeSeriesSinglePropertyRequest": {
            "type": "object",
            "properties": {
                "maxSamples": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxGapBetweenSamples": {
                    "type": "integer",
                    "format": "int32"
                },
                "skipMissing": {
                    "type": "boolean"
                },
                "rangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "rangeEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "spec": {
                    "$ref": "#/definitions/TimeSeriesPropertyRequest"
                },
                "deltaEncode": {
                    "type": "boolean"
                }
            }
        },
        "TimeSeriesSinglePropertyResponse": {
            "type": "object",
            "properties": {
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "results": {
                    "$ref": "#/definitions/TimeSeriesPropertyResponse"
                },
                "deltaEncoded": {
                    "type": "boolean"
                }
            }
        },
        "TimeSeriesSourceConfiguration": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "dimension": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "showMovingAverage": {
                    "type": "number",
                    "format": "double"
                },
                "onlyShowMovingAverage": {
                    "type": "boolean"
                },
                "showDecimation": {
                    "type": "boolean"
                },
                "axis": {
                    "type": "integer",
                    "format": "int32"
                },
                "panel": {
                    "type": "integer",
                    "format": "int32"
                },
                "range": {
                    "$ref": "#/definitions/ToggleableNumericRange"
                },
                "timeOffset": {
                    "$ref": "#/definitions/TimeDuration"
                },
                "pointBinding": {
                    "$ref": "#/definitions/AssetGraphBinding"
                },
                "decimationDisplay": {
                    "type": "string",
                    "enum": [
                        "Minimum",
                        "Average",
                        "Maximum"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.visualization.TimeSeriesDecimationDisplay"
                }
            }
        },
        "TimeSeriesTooltipConfiguration": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesTooltipEntry"
                    }
                }
            }
        },
        "TimeSeriesTooltipEntry": {
            "type": "object",
            "properties": {
                "binding": {
                    "$ref": "#/definitions/AssetGraphBinding"
                },
                "unitsFactors": {
                    "$ref": "#/definitions/EngineeringUnitsFactors"
                }
            }
        },
        "TimeSeriesWidgetConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                {
                    "type": "object",
                    "properties": {
                        "range": {
                            "$ref": "#/definitions/RangeSelection"
                        },
                        "charts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesChartConfiguration"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TimeSeriesWidgetConfiguration"
        },
        "ToggleableNumericRange": {
            "type": "object",
            "properties": {
                "min": {
                    "type": "number",
                    "format": "double"
                },
                "max": {
                    "type": "number",
                    "format": "double"
                },
                "minInvalid": {
                    "type": "boolean"
                },
                "maxInvalid": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "TransportAddress": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "EthernetTransportAddress",
                    "subtype_model": "EthernetTransportAddress"
                },
                {
                    "subtype_name": "IpTransportAddress",
                    "subtype_model": "IpTransportAddress"
                },
                {
                    "subtype_name": "UdpTransportAddress",
                    "subtype_model": "UdpTransportAddress"
                }
            ]
        },
        "TransportNetworkDescriptor": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAssetDescriptor"
                },
                {
                    "type": "object",
                    "properties": {
                        "transportAddress": {
                            "type": "string"
                        },
                        "networkNumber": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "deviceIdentifier": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "TransportNetworkDescriptor"
        },
        "UdpTransportAddress": {
            "allOf": [
                {
                    "$ref": "#/definitions/TransportAddress"
                },
                {
                    "type": "object",
                    "properties": {
                        "host": {
                            "type": "string",
                            "readOnly": true
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true
                        }
                    }
                }
            ],
            "x-optio3-type-name": "UdpTransportAddress"
        },
        "UsageFilterRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "caseInsensitive": {
                    "type": "boolean"
                },
                "maxResults": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UsageFilterResponse": {
            "type": "object",
            "properties": {
                "userPreferenceHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "userPreferenceItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "systemPreferenceHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "systemPreferenceItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "dashboardHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "dashboardItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "alertDefinitionVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "alertDefinitionVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "metricsDefinitionVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "metricsDefinitionVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "normalizationVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "normalizationVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "reportDefinitionVersionHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "reportDefinitionVersionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "workflowHits": {
                    "type": "integer",
                    "format": "int32"
                },
                "workflowItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "origin": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "User"
        },
        "UserCreationRequest": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            }
        },
        "UserGroup": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                },
                "subGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordIdentity"
                    }
                }
            },
            "x-optio3-external-record-id": "UserGroup"
        },
        "UserGroupCreationRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "UserGroupImportExport": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Role"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                }
            }
        },
        "UserMessage": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "subject": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "flagNew": {
                    "type": "boolean"
                },
                "flagRead": {
                    "type": "boolean"
                },
                "flagActive": {
                    "type": "boolean"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "UserMessageAlert",
                    "subtype_model": "UserMessageAlert"
                },
                {
                    "subtype_name": "UserMessageDevice",
                    "subtype_model": "UserMessageDevice"
                },
                {
                    "subtype_name": "UserMessageGeneric",
                    "subtype_model": "UserMessageGeneric"
                },
                {
                    "subtype_name": "UserMessageReport",
                    "subtype_model": "UserMessageReport"
                },
                {
                    "subtype_name": "UserMessageRoleManagement",
                    "subtype_model": "UserMessageRoleManagement"
                },
                {
                    "subtype_name": "UserMessageWorkflow",
                    "subtype_model": "UserMessageWorkflow"
                }
            ],
            "x-optio3-external-record-id": "UserMessage"
        },
        "UserMessageAlert": {
            "allOf": [
                {
                    "$ref": "#/definitions/UserMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "alert": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "UserMessageAlert",
            "x-optio3-external-record-id": "UserMessageAlert"
        },
        "UserMessageDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/UserMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "device": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "UserMessageDevice",
            "x-optio3-external-record-id": "UserMessageDevice"
        },
        "UserMessageFilterRequest": {
            "type": "object",
            "properties": {
                "flagNew": {
                    "type": "boolean"
                },
                "flagRead": {
                    "type": "boolean"
                },
                "flagActive": {
                    "type": "boolean"
                }
            }
        },
        "UserMessageGeneric": {
            "allOf": [
                {
                    "$ref": "#/definitions/UserMessage"
                },
                {
                    "type": "object",
                    "properties": {

                    }
                }
            ],
            "x-optio3-type-name": "UserMessageGeneric",
            "x-optio3-external-record-id": "UserMessageGeneric"
        },
        "UserMessageReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/UserMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "report": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "UserMessageReport",
            "x-optio3-external-record-id": "UserMessageReport"
        },
        "UserMessageRoleManagement": {
            "allOf": [
                {
                    "$ref": "#/definitions/UserMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "userTarget": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "UserMessageRoleManagement",
            "x-optio3-external-record-id": "UserMessageRoleManagement"
        },
        "UserMessageWorkflow": {
            "allOf": [
                {
                    "$ref": "#/definitions/UserMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "workflow": {
                            "$ref": "#/definitions/RecordIdentity"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "UserMessageWorkflow",
            "x-optio3-external-record-id": "UserMessageWorkflow"
        },
        "UserPreference": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "x-optio3-external-record-id": "UserPreference"
        },
        "ValidationEquipmentRule": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "equipmentClassId": {
                    "type": "string"
                },
                "locationNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "minNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationEquipmentRulePointClassCriteria"
                    }
                }
            }
        },
        "ValidationEquipmentRulePointClassCriteria": {
            "type": "object",
            "properties": {
                "pointClassId": {
                    "type": "string"
                },
                "minNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumber": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ValidationPointClassRule": {
            "type": "object",
            "properties": {
                "pointClassId": {
                    "type": "string"
                },
                "isBinary": {
                    "type": "boolean"
                },
                "minValue": {
                    "type": "number",
                    "format": "double"
                },
                "maxValue": {
                    "type": "number",
                    "format": "double"
                },
                "allowableObjectTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ValidationResult": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "ValidationResults": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationResult"
                    }
                }
            }
        },
        "ValidationRules": {
            "type": "object",
            "properties": {
                "equipmentRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationEquipmentRule"
                    }
                },
                "pointClassRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationPointClassRule"
                    }
                }
            }
        },
        "ViewStateItem": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object"
                },
                "saveInBookmark": {
                    "type": "boolean"
                }
            }
        },
        "ViewStateSerialized": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ViewStateItem"
                    }
                },
                "subStates": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ViewStateSerialized"
                    }
                }
            }
        },
        "VirtualAssetGraphNode": {
            "type": "object",
            "properties": {
                "nodeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Name",
                        "Identifier",
                        "Location",
                        "FullLocation",
                        "PointClass",
                        "EquipmentClass"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.asset.graph.VirtualAssetGraphNodeType"
                },
                "ascending": {
                    "type": "boolean"
                },
                "collapsed": {
                    "type": "boolean"
                }
            }
        },
        "WellKnownEquipmentClassOrCustom": {
            "type": "object",
            "properties": {
                "known": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Deployment",
                        "Tractor",
                        "Trailer",
                        "Microgrid",
                        "Substation",
                        "Machine",
                        "RTU",
                        "GPS",
                        "ChargeController",
                        "Liftgate",
                        "HVAC",
                        "OnBoardDiagnostics",
                        "NoIdle",
                        "Sensor",
                        "SensorDiagnostics",
                        "SensorAlerts",
                        "SensorEvents",
                        "LevelSensor",
                        "Accelerometer",
                        "Vibration",
                        "SensorSecondary",
                        "SensorTertiary",
                        "TireSensor",
                        "TemperatureSensor",
                        "HumiditySensor",
                        "VoltageSensor",
                        "CurrentSensor",
                        "SensorCluster",
                        "SmartLock",
                        "AssetTag"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.WellKnownEquipmentClass"
                },
                "custom": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "WellKnownPointClassOrCustom": {
            "type": "object",
            "properties": {
                "known": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Log",
                        "Ignored",
                        "LocationLongitude",
                        "LocationLatitude",
                        "LocationSpeed",
                        "LocationAltitude",
                        "LocationHeading",
                        "AccelerationX",
                        "AccelerationY",
                        "AccelerationZ",
                        "Acceleration",
                        "VelocityX",
                        "VelocityY",
                        "VelocityZ",
                        "Velocity",
                        "ArrayVoltage",
                        "ArrayCurrent",
                        "ArrayPower",
                        "BatteryVoltage",
                        "BatteryCurrent",
                        "BatteryPower",
                        "BatteryStateOfCharge",
                        "BatteryTemperature",
                        "ExternalVoltage1",
                        "ExternalVoltage2",
                        "LoadVoltage",
                        "LoadCurrent",
                        "LoadPower",
                        "LoadVoltAmpere",
                        "LoadPowerReactive",
                        "LoadPowerFactor",
                        "LoadEnergy",
                        "LoadEnergyReactive",
                        "ChargingStatus",
                        "TotalCharge",
                        "TotalDischarge",
                        "HeatsinkTemperature",
                        "FaultCode",
                        "FaultCodeCharging",
                        "FaultCodeDischarging",
                        "CounterResettable",
                        "CounterNonResettable",
                        "CommandOpen",
                        "CommandClose",
                        "CommandLift",
                        "CommandLower",
                        "CommandTiltUp",
                        "CommandTiltDown",
                        "CommandSlideIn",
                        "CommandSlideOut",
                        "DigitalOutput",
                        "DigitalInput",
                        "MotorSolenoid",
                        "HvacTemperature",
                        "HvacSetTemperature",
                        "HvacCompressorSpeed",
                        "HvacOperatingMode",
                        "HvacStateOfCharge",
                        "HvacStateOfHealth",
                        "NoIdleState",
                        "NoIdleSupplyVoltage",
                        "NoIdleOemVoltage",
                        "NoIdleParkNeutralVoltage",
                        "NoIdleParkingBrakeVoltage",
                        "NoIdleShorelineDetectionVoltage",
                        "NoIdleEmergencyLightsVoltage",
                        "NoIdleDischargeCurrent",
                        "NoIdleAlternatorCurrent",
                        "NoIdleRelays",
                        "NoIdleIgnitionSignal",
                        "NoIdleParkSignal",
                        "NoIdleParkingBrakeSignal",
                        "NoIdleHoodClosedSignal",
                        "NoIdleEmergencyLightsSignal",
                        "NoIdleTemperature",
                        "NoIdleMinTemperature",
                        "NoIdleMaxTemperature",
                        "NoIdleKeyInserted",
                        "NoIdleEngineRunning",
                        "NoIdleMaxDischargeTime",
                        "NoIdleCutoffVoltage",
                        "NoIdleEngineStartCounter",
                        "NoIdleEngineStopCounter",
                        "NoIdleEmergencyLight",
                        "NoIdleChargeEnable",
                        "NoIdleDischargeEnable",
                        "NoIdleRampDoorOpen",
                        "NoIdleACRequest",
                        "ObdiiFaultCodes",
                        "ObdiiTimeRunWithMalfunction",
                        "ObdiiDistanceTraveledWithMalfunction",
                        "ObdiiEngineRPM",
                        "ObdiiCalculatedEngineLoad",
                        "ObdiiEngineCoolantTemperature",
                        "ObdiiEngineOilTemperature",
                        "ObdiiVehicleSpeed",
                        "ObdiiVin",
                        "ObdiiSupportedPIDs",
                        "ObdiiOdometer",
                        "ObdiiEngineRuntime",
                        "ObdiiEngineRuntimeTotal",
                        "SensorTemperature",
                        "SensorPressure",
                        "SensorRSSI",
                        "SensorSignalQuality",
                        "SensorBitErrorRate",
                        "SensorEvent",
                        "SensorExtraTemperature1",
                        "SensorExtraTemperature2",
                        "SensorFlood",
                        "SensorAxisX",
                        "SensorAxisY",
                        "SensorAxisZ",
                        "SensorAxisPitch",
                        "SensorAxisYaw",
                        "SensorAxisRoll",
                        "SensorLevel",
                        "SensorNoise",
                        "SensorAcidity",
                        "SensorFrequency",
                        "SensorFlow",
                        "SensorStatus",
                        "SensorHumidity",
                        "SensorVoltage",
                        "SensorCurrent",
                        "SensorParticleMonitor",
                        "TrackerTrips",
                        "TrackerInTrip",
                        "TrackerTamperAlert",
                        "TrackerRecoveryModeActive",
                        "HolykellLevel",
                        "HolykellTemperature",
                        "SurvalentAnalog",
                        "SurvalentStatus",
                        "SurvalentText"
                    ],
                    "x-optio3-enum-type": "com.optio3.protocol.model.WellKnownPointClass"
                },
                "custom": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "WhoIsRange": {
            "type": "object",
            "properties": {
                "low": {
                    "type": "integer",
                    "format": "int32"
                },
                "high": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "WidgetComposition": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/WidgetConfiguration"
                },
                "outline": {
                    "$ref": "#/definitions/WidgetOutline"
                }
            }
        },
        "WidgetConfiguration": {
            "type": "object",
            "discriminator": "__type",
            "properties": {
                "id": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshRateInSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "manualFontScaling": {
                    "type": "boolean"
                },
                "fontMultiplier": {
                    "type": "number",
                    "format": "double"
                },
                "toolbarBehavior": {
                    "type": "string",
                    "enum": [
                        "AlwaysShow",
                        "AutoHide",
                        "Collapsible",
                        "Hide"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.dashboard.WidgetToolbarBehavior"
                }
            },
            "x-optio3-subtypes": [
                {
                    "subtype_name": "AggregationTableWidgetConfiguration",
                    "subtype_model": "AggregationTableWidgetConfiguration"
                },
                {
                    "subtype_name": "AggregationTrendWidgetConfiguration",
                    "subtype_model": "AggregationTrendWidgetConfiguration"
                },
                {
                    "subtype_name": "AggregationWidgetConfiguration",
                    "subtype_model": "AggregationWidgetConfiguration"
                },
                {
                    "subtype_name": "AlertFeedWidgetConfiguration",
                    "subtype_model": "AlertFeedWidgetConfiguration"
                },
                {
                    "subtype_name": "AlertMapWidgetConfiguration",
                    "subtype_model": "AlertMapWidgetConfiguration"
                },
                {
                    "subtype_name": "AlertSummaryWidgetConfiguration",
                    "subtype_model": "AlertSummaryWidgetConfiguration"
                },
                {
                    "subtype_name": "AlertTableWidgetConfiguration",
                    "subtype_model": "AlertTableWidgetConfiguration"
                },
                {
                    "subtype_name": "AlertTrendWidgetConfiguration",
                    "subtype_model": "AlertTrendWidgetConfiguration"
                },
                {
                    "subtype_name": "AssetGraphSelectorWidgetConfiguration",
                    "subtype_model": "AssetGraphSelectorWidgetConfiguration"
                },
                {
                    "subtype_name": "ControlPointWidgetConfiguration",
                    "subtype_model": "ControlPointWidgetConfiguration"
                },
                {
                    "subtype_name": "DeviceSummaryWidgetConfiguration",
                    "subtype_model": "DeviceSummaryWidgetConfiguration"
                },
                {
                    "subtype_name": "GroupingWidgetConfiguration",
                    "subtype_model": "GroupingWidgetConfiguration"
                },
                {
                    "subtype_name": "ImageWidgetConfiguration",
                    "subtype_model": "ImageWidgetConfiguration"
                },
                {
                    "subtype_name": "TextWidgetConfiguration",
                    "subtype_model": "TextWidgetConfiguration"
                },
                {
                    "subtype_name": "TimeSeriesWidgetConfiguration",
                    "subtype_model": "TimeSeriesWidgetConfiguration"
                }
            ]
        },
        "WidgetOutline": {
            "type": "object",
            "properties": {
                "left": {
                    "type": "integer",
                    "format": "int32"
                },
                "top": {
                    "type": "integer",
                    "format": "int32"
                },
                "width": {
                    "type": "integer",
                    "format": "int32"
                },
                "height": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Workflow": {
            "allOf": [
                {
                    "$ref": "#/definitions/Event"
                },
                {
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "assignedTo": {
                            "$ref": "#/definitions/RecordIdentity"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "Active",
                                "Resolved",
                                "Closed",
                                "Disabling",
                                "Disabled"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowStatus"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "RenameControlPoint",
                                "SamplingControlPoint",
                                "SamplingPeriod",
                                "HidingControlPoint",
                                "AssignControlPointsToEquipment",
                                "SetControlPointsClass",
                                "IgnoreDevice",
                                "RenameDevice",
                                "SetDeviceLocation",
                                "RenameEquipment",
                                "RemoveEquipment",
                                "MergeEquipments",
                                "NewEquipment",
                                "SetEquipmentClass",
                                "SetEquipmentParent",
                                "SetEquipmentLocation",
                                "SetLocationParent"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowType"
                        },
                        "priority": {
                            "type": "string",
                            "enum": [
                                "Urgent",
                                "High",
                                "Normal",
                                "Low"
                            ],
                            "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowPriority"
                        },
                        "details": {
                            "$ref": "#/definitions/WorkflowDetails"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "Workflow",
            "x-optio3-external-record-id": "Workflow"
        },
        "WorkflowAsset": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "WorkflowDetails": {
            "type": "object",
            "discriminator": "__type",
            "x-optio3-subtypes": [
                {
                    "subtype_name": "WorkflowDetailsForAssignControlPointsToEquipment",
                    "subtype_model": "WorkflowDetailsForAssignControlPointsToEquipment"
                },
                {
                    "subtype_name": "WorkflowDetailsForHidingControlPoint",
                    "subtype_model": "WorkflowDetailsForHidingControlPoint"
                },
                {
                    "subtype_name": "WorkflowDetailsForIgnoreDevice",
                    "subtype_model": "WorkflowDetailsForIgnoreDevice"
                },
                {
                    "subtype_name": "WorkflowDetailsForMergeEquipments",
                    "subtype_model": "WorkflowDetailsForMergeEquipments"
                },
                {
                    "subtype_name": "WorkflowDetailsForNewEquipment",
                    "subtype_model": "WorkflowDetailsForNewEquipment"
                },
                {
                    "subtype_name": "WorkflowDetailsForRemoveEquipment",
                    "subtype_model": "WorkflowDetailsForRemoveEquipment"
                },
                {
                    "subtype_name": "WorkflowDetailsForRenameControlPoint",
                    "subtype_model": "WorkflowDetailsForRenameControlPoint"
                },
                {
                    "subtype_name": "WorkflowDetailsForRenameDevice",
                    "subtype_model": "WorkflowDetailsForRenameDevice"
                },
                {
                    "subtype_name": "WorkflowDetailsForRenameEquipment",
                    "subtype_model": "WorkflowDetailsForRenameEquipment"
                },
                {
                    "subtype_name": "WorkflowDetailsForSamplingControlPoint",
                    "subtype_model": "WorkflowDetailsForSamplingControlPoint"
                },
                {
                    "subtype_name": "WorkflowDetailsForSamplingPeriod",
                    "subtype_model": "WorkflowDetailsForSamplingPeriod"
                },
                {
                    "subtype_name": "WorkflowDetailsForSetControlPointsClass",
                    "subtype_model": "WorkflowDetailsForSetControlPointsClass"
                },
                {
                    "subtype_name": "WorkflowDetailsForSetDeviceLocation",
                    "subtype_model": "WorkflowDetailsForSetDeviceLocation"
                },
                {
                    "subtype_name": "WorkflowDetailsForSetEquipmentClass",
                    "subtype_model": "WorkflowDetailsForSetEquipmentClass"
                },
                {
                    "subtype_name": "WorkflowDetailsForSetEquipmentLocation",
                    "subtype_model": "WorkflowDetailsForSetEquipmentLocation"
                },
                {
                    "subtype_name": "WorkflowDetailsForSetEquipmentParent",
                    "subtype_model": "WorkflowDetailsForSetEquipmentParent"
                },
                {
                    "subtype_name": "WorkflowDetailsForSetLocationParent",
                    "subtype_model": "WorkflowDetailsForSetLocationParent"
                }
            ]
        },
        "WorkflowDetailsForAssignControlPointsToEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipment": {
                            "$ref": "#/definitions/WorkflowAsset"
                        },
                        "controlPoints": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForAssignControlPointsToEquipment"
        },
        "WorkflowDetailsForHidingControlPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoints": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "hide": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForHidingControlPoint"
        },
        "WorkflowDetailsForIgnoreDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "deviceSysId": {
                            "type": "string"
                        },
                        "deviceName": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForIgnoreDevice"
        },
        "WorkflowDetailsForMergeEquipments": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipment1": {
                            "$ref": "#/definitions/WorkflowAsset"
                        },
                        "equipment2": {
                            "$ref": "#/definitions/WorkflowAsset"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForMergeEquipments"
        },
        "WorkflowDetailsForNewEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipmentKey": {
                            "type": "string"
                        },
                        "equipmentName": {
                            "type": "string"
                        },
                        "equipmentClassId": {
                            "type": "string"
                        },
                        "locationSysId": {
                            "type": "string"
                        },
                        "parentEquipment": {
                            "$ref": "#/definitions/WorkflowAsset"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForNewEquipment"
        },
        "WorkflowDetailsForRemoveEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowAsset"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForRemoveEquipment"
        },
        "WorkflowDetailsForRenameControlPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoints": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "controlPointNewName": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForRenameControlPoint"
        },
        "WorkflowDetailsForRenameDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "devices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowAsset"
                            }
                        },
                        "deviceNewName": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForRenameDevice"
        },
        "WorkflowDetailsForRenameEquipment": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowAsset"
                            }
                        },
                        "equipmentNewName": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForRenameEquipment"
        },
        "WorkflowDetailsForSamplingControlPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoints": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "enable": {
                            "type": "boolean"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSamplingControlPoint"
        },
        "WorkflowDetailsForSamplingPeriod": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "controlPoints": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "samplingPeriod": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSamplingPeriod"
        },
        "WorkflowDetailsForSetControlPointsClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "pointClassId": {
                            "type": "string"
                        },
                        "controlPoints": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSetControlPointsClass"
        },
        "WorkflowDetailsForSetDeviceLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "devices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowAsset"
                            }
                        },
                        "locationSysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSetDeviceLocation"
        },
        "WorkflowDetailsForSetEquipmentClass": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowAsset"
                            }
                        },
                        "equipmentClassId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSetEquipmentClass"
        },
        "WorkflowDetailsForSetEquipmentLocation": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "equipments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowAsset"
                            }
                        },
                        "locationSysId": {
                            "type": "string"
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSetEquipmentLocation"
        },
        "WorkflowDetailsForSetEquipmentParent": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "parentEquipment": {
                            "$ref": "#/definitions/WorkflowAsset"
                        },
                        "childEquipments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowAsset"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSetEquipmentParent"
        },
        "WorkflowDetailsForSetLocationParent": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowDetails"
                },
                {
                    "type": "object",
                    "properties": {
                        "parentLocationSysId": {
                            "type": "string"
                        },
                        "childLocationSysIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowDetailsForSetLocationParent"
        },
        "WorkflowFilterRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventFilterRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "likeFilter": {
                            "type": "string"
                        },
                        "workflowStatusIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Active",
                                    "Resolved",
                                    "Closed",
                                    "Disabling",
                                    "Disabled"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowStatus"
                            }
                        },
                        "workflowTypeIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "RenameControlPoint",
                                    "SamplingControlPoint",
                                    "SamplingPeriod",
                                    "HidingControlPoint",
                                    "AssignControlPointsToEquipment",
                                    "SetControlPointsClass",
                                    "IgnoreDevice",
                                    "RenameDevice",
                                    "SetDeviceLocation",
                                    "RenameEquipment",
                                    "RemoveEquipment",
                                    "MergeEquipments",
                                    "NewEquipment",
                                    "SetEquipmentClass",
                                    "SetEquipmentParent",
                                    "SetEquipmentLocation",
                                    "SetLocationParent"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowType"
                            }
                        },
                        "workflowPriorityIDs": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Urgent",
                                    "High",
                                    "Normal",
                                    "Low"
                                ],
                                "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowPriority"
                            }
                        },
                        "createdByIDs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "assignedToIDs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-optio3-type-name": "WorkflowFilterRequest"
        },
        "WorkflowHistory": {
            "type": "object",
            "properties": {
                "sysId": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "workflow": {
                    "$ref": "#/definitions/RecordIdentity"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "created",
                        "updatedWithNotes",
                        "reassigned",
                        "resolved",
                        "closed",
                        "reopened",
                        "disabling",
                        "disabled"
                    ],
                    "x-optio3-enum-type": "com.optio3.cloud.hub.model.workflow.WorkflowEventType"
                },
                "text": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/RecordIdentity"
                }
            },
            "x-optio3-external-record-id": "WorkflowHistory"
        },
        "WorkflowOverrides": {
            "type": "object",
            "properties": {
                "workflowIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "deviceNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "deviceLocations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "pointNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "pointClasses": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "pointParents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "pointSamplingPeriods": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "pointSampling": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "equipmentNames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "equipmentClasses": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "equipmentParents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "equipmentLocations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "equipmentMerge": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "removedEquipment": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "createdEquipment": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
