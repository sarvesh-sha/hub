/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class I2CSensorMCP3428 extends models.I2CSensor {
    constructor() {
        super();
        this.setDiscriminator("I2CSensor_MCP3428");
    }

    getFixupPrototypeFunction() { return I2CSensorMCP3428.fixupPrototype; }

    static newInstance(model: Partial<I2CSensorMCP3428>): I2CSensorMCP3428 {
        let obj = Object.assign(new I2CSensorMCP3428(), model);
        I2CSensorMCP3428.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<I2CSensorMCP3428>): I2CSensorMCP3428 {
        if (!model) return null;
        return I2CSensorMCP3428.newInstance(<I2CSensorMCP3428> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: I2CSensorMCP3428) {
        models.I2CSensor.fixupPrototype(obj);
    }

    fixupFields() {
        super.fixupFields();
        if (this.channel === undefined) {
            this.channel = 0;
        }
        if (this.gain === undefined) {
            this.gain = 0;
        }
        if (this.conversionScale === undefined) {
            this.conversionScale = 0;
        }
        if (this.conversionOffsetPre === undefined) {
            this.conversionOffsetPre = 0;
        }
        if (this.conversionOffsetPost === undefined) {
            this.conversionOffsetPost = 0;
        }
        if (this.pointClass) {
            models.WellKnownPointClassOrCustom.fixupPrototype(this.pointClass);
        }
    }

    channel: number;

    gain: number;

    conversionScale: number;

    conversionOffsetPre: number;

    conversionOffsetPost: number;

    pointClass: models.WellKnownPointClassOrCustom;

}
