/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class ViewStateSerialized {
    getFixupPrototypeFunction() { return ViewStateSerialized.fixupPrototype; }

    static newInstance(model: Partial<ViewStateSerialized>): ViewStateSerialized {
        let obj = Object.assign(new ViewStateSerialized(), model);
        ViewStateSerialized.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<ViewStateSerialized>): ViewStateSerialized {
        if (!model) return null;
        return ViewStateSerialized.newInstance(<ViewStateSerialized> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: ViewStateSerialized) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.ViewStateSerialized.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.state) {
            for (let key in this.state) {
                let val = this.state[key];
                if (val) {
                    models.ViewStateItem.fixupPrototype(val);
                }
            }
        }
        if (this.subStates) {
            for (let key in this.subStates) {
                let val = this.subStates[key];
                if (val) {
                    models.ViewStateSerialized.fixupPrototype(val);
                }
            }
        }
    }

    state: { [key: string]: models.ViewStateItem; };

    subStates: { [key: string]: models.ViewStateSerialized; };

}
