/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class ProberOperation {
    __type: string;

    protected setDiscriminator(type: string) {
        this.__type = type;
    }

    getFixupPrototypeFunction() { return ProberOperation.fixupPrototype; }

    static newInstance(model: Partial<ProberOperation>): ProberOperation {
        let obj = Object.assign(new ProberOperation(), model);
        ProberOperation.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<ProberOperation>): ProberOperation {
        if (!model) return null;
        return ProberOperation.newInstance(<ProberOperation> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: ProberOperation) {
        if (!obj) return;

        switch (obj.__type)
        {
            case "ProberOperationForBACnetToAutoDiscovery":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToAutoDiscovery.prototype);
                break;
            case "ProberOperationForBACnetToDiscoverBBMDs":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToDiscoverBBMDs.prototype);
                break;
            case "ProberOperationForBACnetToDiscoverDevices":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToDiscoverDevices.prototype);
                break;
            case "ProberOperationForBACnetToDiscoverRouters":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToDiscoverRouters.prototype);
                break;
            case "ProberOperationForBACnetToReadBBMDs":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToReadBBMDs.prototype);
                break;
            case "ProberOperationForBACnetToReadDevices":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToReadDevices.prototype);
                break;
            case "ProberOperationForBACnetToReadObjectNames":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToReadObjectNames.prototype);
                break;
            case "ProberOperationForBACnetToReadObjects":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToReadObjects.prototype);
                break;
            case "ProberOperationForBACnetToScanMstpTrunkForDevices":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToScanMstpTrunkForDevices.prototype);
                break;
            case "ProberOperationForBACnetToScanSubnetForDevices":
                Object.setPrototypeOf(obj, models.ProberOperationForBACnetToScanSubnetForDevices.prototype);
                break;
            case "ProberOperationForCANbusToDecodedRead":
                Object.setPrototypeOf(obj, models.ProberOperationForCANbusToDecodedRead.prototype);
                break;
            case "ProberOperationForCANbusToRawRead":
                Object.setPrototypeOf(obj, models.ProberOperationForCANbusToRawRead.prototype);
                break;
            case "ProberOperationForIpnToDecodedRead":
                Object.setPrototypeOf(obj, models.ProberOperationForIpnToDecodedRead.prototype);
                break;
            case "ProberOperationForIpnToObdiiRead":
                Object.setPrototypeOf(obj, models.ProberOperationForIpnToObdiiRead.prototype);
                break;
        }

        obj.fixupFields();
    }

    fixupFields() {
    }

}
