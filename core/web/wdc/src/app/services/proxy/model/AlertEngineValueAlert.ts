/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class AlertEngineValueAlert extends models.EngineValue {
    constructor() {
        super();
        this.setDiscriminator("AlertEngineValueAlert");
    }

    getFixupPrototypeFunction() { return AlertEngineValueAlert.fixupPrototype; }

    static newInstance(model: Partial<AlertEngineValueAlert>): AlertEngineValueAlert {
        let obj = Object.assign(new AlertEngineValueAlert(), model);
        AlertEngineValueAlert.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<AlertEngineValueAlert>): AlertEngineValueAlert {
        if (!model) return null;
        return AlertEngineValueAlert.newInstance(<AlertEngineValueAlert> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: AlertEngineValueAlert) {
        models.EngineValue.fixupPrototype(obj);
    }

    fixupFields() {
        super.fixupFields();
        if (typeof this.timestamp === "string") {
            this.timestamp = new Date(<string><any>this.timestamp);
        }
        if (this.controlPoint) {
            models.RecordIdentity.fixupPrototype(this.controlPoint);
        }
        if (this.record) {
            models.RecordIdentity.fixupPrototype(this.record);
        }
    }

    controlPoint: models.RecordIdentity;

    record: models.RecordIdentity;

    timestamp: Date;

    level: models.AlertEventLevel;

    type: models.AlertType;

    severity: models.AlertSeverity;

    status: models.AlertStatus;

    statusText: string;

    title: string;

    description: string;

    shouldNotify: boolean;

}
