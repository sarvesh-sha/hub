/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class SearchResultSet {
    getFixupPrototypeFunction() { return SearchResultSet.fixupPrototype; }

    static newInstance(model: Partial<SearchResultSet>): SearchResultSet {
        let obj = Object.assign(new SearchResultSet(), model);
        SearchResultSet.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<SearchResultSet>): SearchResultSet {
        if (!model) return null;
        return SearchResultSet.newInstance(<SearchResultSet> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: SearchResultSet) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.SearchResultSet.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.totalUsers === undefined) {
            this.totalUsers = 0;
        }
        if (this.totalAlerts === undefined) {
            this.totalAlerts = 0;
        }
        if (this.totalDevices === undefined) {
            this.totalDevices = 0;
        }
        if (this.totalLocations === undefined) {
            this.totalLocations = 0;
        }
        if (this.totalNetworks === undefined) {
            this.totalNetworks = 0;
        }
        if (this.totalGateways === undefined) {
            this.totalGateways = 0;
        }
        if (this.totalDeviceElements === undefined) {
            this.totalDeviceElements = 0;
        }
        if (this.totalLogicalGroups === undefined) {
            this.totalLogicalGroups = 0;
        }
        if (this.users) {
            for (let val of this.users) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.alerts) {
            for (let val of this.alerts) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.devices) {
            for (let val of this.devices) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.locations) {
            for (let val of this.locations) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.networks) {
            for (let val of this.networks) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.gateways) {
            for (let val of this.gateways) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.deviceElements) {
            for (let val of this.deviceElements) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.logicalGroups) {
            for (let val of this.logicalGroups) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
    }

    totalUsers: number;

    users: Array<models.RecordIdentity>;

    totalAlerts: number;

    alerts: Array<models.RecordIdentity>;

    totalDevices: number;

    devices: Array<models.RecordIdentity>;

    totalLocations: number;

    locations: Array<models.RecordIdentity>;

    totalNetworks: number;

    networks: Array<models.RecordIdentity>;

    totalGateways: number;

    gateways: Array<models.RecordIdentity>;

    totalDeviceElements: number;

    deviceElements: Array<models.RecordIdentity>;

    totalLogicalGroups: number;

    logicalGroups: Array<models.RecordIdentity>;

}
