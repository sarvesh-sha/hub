/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class DashboardConfiguration {
    getFixupPrototypeFunction() { return DashboardConfiguration.fixupPrototype; }

    static newInstance(model: Partial<DashboardConfiguration>): DashboardConfiguration {
        let obj = Object.assign(new DashboardConfiguration(), model);
        DashboardConfiguration.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<DashboardConfiguration>): DashboardConfiguration {
        if (!model) return null;
        return DashboardConfiguration.newInstance(<DashboardConfiguration> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: DashboardConfiguration) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.DashboardConfiguration.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.sharedGraphs) {
            for (let val of this.sharedGraphs) {
                models.SharedAssetGraph.fixupPrototype(val);
            }
        }
        if (this.bannerSegments) {
            for (let val of this.bannerSegments) {
                models.DashboardBannerSegment.fixupPrototype(val);
            }
        }
        if (this.sharedSelectors) {
            for (let val of this.sharedSelectors) {
                models.SharedAssetSelector.fixupPrototype(val);
            }
        }
        if (this.widgets) {
            for (let val of this.widgets) {
                models.WidgetComposition.fixupPrototype(val);
            }
        }
    }

    title: string;

    showTitle: boolean;

    widgetPrimaryColor: string;

    widgetSecondaryColor: string;

    sharedGraphs: Array<models.SharedAssetGraph>;

    bannerSegments: Array<models.DashboardBannerSegment>;

    sharedSelectors: Array<models.SharedAssetSelector>;

    widgets: Array<models.WidgetComposition>;

}
