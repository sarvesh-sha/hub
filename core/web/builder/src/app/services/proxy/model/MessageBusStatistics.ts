/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class MessageBusStatistics {
    getFixupPrototypeFunction() { return MessageBusStatistics.fixupPrototype; }

    static newInstance(model: Partial<MessageBusStatistics>): MessageBusStatistics {
        let obj = Object.assign(new MessageBusStatistics(), model);
        MessageBusStatistics.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<MessageBusStatistics>): MessageBusStatistics {
        if (!model) return null;
        return MessageBusStatistics.newInstance(<MessageBusStatistics> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: MessageBusStatistics) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.MessageBusStatistics.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.sessions === undefined) {
            this.sessions = 0;
        }
        if (this.packetTx === undefined) {
            this.packetTx = 0;
        }
        if (this.packetTxBytes === undefined) {
            this.packetTxBytes = 0;
        }
        if (this.packetTxBytesResent === undefined) {
            this.packetTxBytesResent = 0;
        }
        if (this.messageTx === undefined) {
            this.messageTx = 0;
        }
        if (this.packetRx === undefined) {
            this.packetRx = 0;
        }
        if (this.packetRxBytes === undefined) {
            this.packetRxBytes = 0;
        }
        if (this.packetRxBytesResent === undefined) {
            this.packetRxBytesResent = 0;
        }
        if (this.messageRx === undefined) {
            this.messageRx = 0;
        }
    }

    sessions: number;

    packetTx: number;

    packetTxBytes: number;

    packetTxBytesResent: number;

    messageTx: number;

    packetRx: number;

    packetRxBytes: number;

    packetRxBytesResent: number;

    messageRx: number;

}
