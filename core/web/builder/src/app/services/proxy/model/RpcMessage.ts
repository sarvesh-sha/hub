/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class RpcMessage {
    type: string;

    protected setDiscriminator(type: string) {
        this.type = type;
    }

    getFixupPrototypeFunction() { return RpcMessage.fixupPrototype; }

    static newInstance(model: Partial<RpcMessage>): RpcMessage {
        let obj = Object.assign(new RpcMessage(), model);
        RpcMessage.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<RpcMessage>): RpcMessage {
        if (!model) return null;
        return RpcMessage.newInstance(<RpcMessage> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: RpcMessage) {
        if (!obj) return;

        switch (obj.type)
        {
            case "RpcMessageCall":
                Object.setPrototypeOf(obj, models.RpcMessageCall.prototype);
                break;
            case "RpcMessageCallReply":
                Object.setPrototypeOf(obj, models.RpcMessageCallReply.prototype);
                break;
            case "RpcMessageCallback":
                Object.setPrototypeOf(obj, models.RpcMessageCallback.prototype);
                break;
            case "RpcMessagePing":
                Object.setPrototypeOf(obj, models.RpcMessagePing.prototype);
                break;
            case "RpcMessagePingReply":
                Object.setPrototypeOf(obj, models.RpcMessagePingReply.prototype);
                break;
        }

        obj.fixupFields();
    }

    fixupFields() {
    }

}
