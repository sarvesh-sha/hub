/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class DelayedOperation {
    __type: string;

    protected setDiscriminator(type: string) {
        this.__type = type;
    }

    getFixupPrototypeFunction() { return DelayedOperation.fixupPrototype; }

    static newInstance(model: Partial<DelayedOperation>): DelayedOperation {
        let obj = Object.assign(new DelayedOperation(), model);
        DelayedOperation.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<DelayedOperation>): DelayedOperation {
        if (!model) return null;
        return DelayedOperation.newInstance(<DelayedOperation> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: DelayedOperation) {
        if (!obj) return;

        switch (obj.__type)
        {
            case "DelayedAgentBatteryConfiguration":
                Object.setPrototypeOf(obj, models.DelayedAgentBatteryConfiguration.prototype);
                break;
            case "DelayedAgentCreation":
                Object.setPrototypeOf(obj, models.DelayedAgentCreation.prototype);
                break;
            case "DelayedAgentTermination":
                Object.setPrototypeOf(obj, models.DelayedAgentTermination.prototype);
                break;
            case "DelayedBootOptionsPull":
                Object.setPrototypeOf(obj, models.DelayedBootOptionsPull.prototype);
                break;
            case "DelayedBootOptionsPush":
                Object.setPrototypeOf(obj, models.DelayedBootOptionsPush.prototype);
                break;
            case "DelayedFileTransfer":
                Object.setPrototypeOf(obj, models.DelayedFileTransfer.prototype);
                break;
            case "DelayedImagePruning":
                Object.setPrototypeOf(obj, models.DelayedImagePruning.prototype);
                break;
            case "DelayedImagePull":
                Object.setPrototypeOf(obj, models.DelayedImagePull.prototype);
                break;
            case "DelayedTaskCreation":
                Object.setPrototypeOf(obj, models.DelayedTaskCreation.prototype);
                break;
            case "DelayedTaskRestartSingle":
                Object.setPrototypeOf(obj, models.DelayedTaskRestartSingle.prototype);
                break;
            case "DelayedTaskTermination":
                Object.setPrototypeOf(obj, models.DelayedTaskTermination.prototype);
                break;
            case "DelayedWaypointUpdate":
                Object.setPrototypeOf(obj, models.DelayedWaypointUpdate.prototype);
                break;
        }

        obj.fixupFields();
    }

    fixupFields() {
        if (this.priority === undefined) {
            this.priority = 0;
        }
        if (this.retries === undefined) {
            this.retries = 0;
        }
        if (typeof this.createdOn === "string") {
            this.createdOn = new Date(<string><any>this.createdOn);
        }
        if (typeof this.lastActivation === "string") {
            this.lastActivation = new Date(<string><any>this.lastActivation);
        }
        if (this.loc_activity) {
            models.RecordLocator.fixupPrototype(this.loc_activity);
        }
    }

    description: string;

    priority: number;

    loc_activity: models.RecordLocator;

    createdOn: Date;

    lastActivation: Date;

    retries: number;

}
