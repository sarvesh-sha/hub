/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class HubHeapAndThreads {
    getFixupPrototypeFunction() { return HubHeapAndThreads.fixupPrototype; }

    static newInstance(model: Partial<HubHeapAndThreads>): HubHeapAndThreads {
        let obj = Object.assign(new HubHeapAndThreads(), model);
        HubHeapAndThreads.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<HubHeapAndThreads>): HubHeapAndThreads {
        if (!model) return null;
        return HubHeapAndThreads.newInstance(<HubHeapAndThreads> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: HubHeapAndThreads) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.HubHeapAndThreads.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.memoryMax === undefined) {
            this.memoryMax = 0;
        }
        if (this.memoryTotal === undefined) {
            this.memoryTotal = 0;
        }
        if (this.memoryUsed === undefined) {
            this.memoryUsed = 0;
        }
        if (this.memoryFree === undefined) {
            this.memoryFree = 0;
        }
        if (typeof this.timestamp === "string") {
            this.timestamp = new Date(<string><any>this.timestamp);
        }
        if (this.uniqueStackTraces) {
            for (let val of this.uniqueStackTraces) {
                models.HubUniqueStackTrace.fixupPrototype(val);
            }
        }
    }

    timestamp: Date;

    memoryMax: number;

    memoryTotal: number;

    memoryUsed: number;

    memoryFree: number;

    heapWarning: boolean;

    uniqueStackTraces: Array<models.HubUniqueStackTrace>;

}
