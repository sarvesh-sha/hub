/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class DeploymentHost {
    static readonly RECORD_IDENTITY: string = "DeploymentHost";

    getFixupPrototypeFunction() { return DeploymentHost.fixupPrototype; }

    static newInstance(model: Partial<DeploymentHost>): DeploymentHost {
        let obj = Object.assign(new DeploymentHost(), model);
        DeploymentHost.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<DeploymentHost>): DeploymentHost {
        if (!model) return null;
        return DeploymentHost.newInstance(<DeploymentHost> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: DeploymentHost) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.DeploymentHost.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.warningThreshold === undefined) {
            this.warningThreshold = 0;
        }
        if (this.lastOffset === undefined) {
            this.lastOffset = 0;
        }
        if (typeof this.createdOn === "string") {
            this.createdOn = new Date(<string><any>this.createdOn);
        }
        if (typeof this.updatedOn === "string") {
            this.updatedOn = new Date(<string><any>this.updatedOn);
        }
        if (typeof this.lastHeartbeat === "string") {
            this.lastHeartbeat = new Date(<string><any>this.lastHeartbeat);
        }
        if (typeof this.lastOutput === "string") {
            this.lastOutput = new Date(<string><any>this.lastOutput);
        }
        if (this.customerService) {
            models.RecordIdentity.fixupPrototype(this.customerService);
        }
        if (this.onlineSessions) {
            models.DeploymentHostOnlineSessions.fixupPrototype(this.onlineSessions);
        }
        if (this.details) {
            models.DeploymentHostDetails.fixupPrototype(this.details);
        }
    }

    sysId: string;

    createdOn: Date;

    updatedOn: Date;

    customerService: models.RecordIdentity;

    roles: Array<models.DeploymentRole>;

    hostId: string;

    hostName: string;

    displayName: string;

    remoteName: string;

    dnsName: string;

    warningThreshold: number;

    status: models.DeploymentStatus;

    operationalResponsiveness: models.DeploymentOperationalResponsiveness;

    operationalStatus: models.DeploymentOperationalStatus;

    architecture: models.DockerImageArchitecture;

    instanceType: models.DeploymentInstance;

    instanceRegion: string;

    lastHeartbeat: Date;

    onlineSessions: models.DeploymentHostOnlineSessions;

    details: models.DeploymentHostDetails;

    delayedOperations: boolean;

    lastOutput: Date;

    lastOffset: number;

}
