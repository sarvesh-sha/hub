/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class DeploymentAgentDetails {
    getFixupPrototypeFunction() { return DeploymentAgentDetails.fixupPrototype; }

    static newInstance(model: Partial<DeploymentAgentDetails>): DeploymentAgentDetails {
        let obj = Object.assign(new DeploymentAgentDetails(), model);
        DeploymentAgentDetails.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<DeploymentAgentDetails>): DeploymentAgentDetails {
        if (!model) return null;
        return DeploymentAgentDetails.newInstance(<DeploymentAgentDetails> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: DeploymentAgentDetails) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.DeploymentAgentDetails.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.availableProcessors === undefined) {
            this.availableProcessors = 0;
        }
        if (this.freeMemory === undefined) {
            this.freeMemory = 0;
        }
        if (this.totalMemory === undefined) {
            this.totalMemory = 0;
        }
        if (this.maxMemory === undefined) {
            this.maxMemory = 0;
        }
        if (this.diskTotal === undefined) {
            this.diskTotal = 0;
        }
        if (this.diskFree === undefined) {
            this.diskFree = 0;
        }
        if (this.cpuUsageUser === undefined) {
            this.cpuUsageUser = 0;
        }
        if (this.cpuUsageSystem === undefined) {
            this.cpuUsageSystem = 0;
        }
        if (this.batteryVoltage === undefined) {
            this.batteryVoltage = 0;
        }
        if (this.cpuTemperature === undefined) {
            this.cpuTemperature = 0;
        }
        if (this.shutdownConfiguration) {
            models.DeployerShutdownConfiguration.fixupPrototype(this.shutdownConfiguration);
        }
    }

    supportedFeatures: Array<string>;

    architecture: models.DockerImageArchitecture;

    availableProcessors: number;

    freeMemory: number;

    totalMemory: number;

    maxMemory: number;

    diskTotal: number;

    diskFree: number;

    cpuUsageUser: number;

    cpuUsageSystem: number;

    batteryVoltage: number;

    cpuTemperature: number;

    shutdownConfiguration: models.DeployerShutdownConfiguration;

    networkInterfaces: { [key: string]: string; };

}
