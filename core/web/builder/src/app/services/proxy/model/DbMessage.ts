/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class DbMessage {
    type: string;

    protected setDiscriminator(type: string) {
        this.type = type;
    }

    getFixupPrototypeFunction() { return DbMessage.fixupPrototype; }

    static newInstance(model: Partial<DbMessage>): DbMessage {
        let obj = Object.assign(new DbMessage(), model);
        DbMessage.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<DbMessage>): DbMessage {
        if (!model) return null;
        return DbMessage.newInstance(<DbMessage> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: DbMessage) {
        if (!obj) return;

        switch (obj.type)
        {
            case "DbMessageConfig":
                Object.setPrototypeOf(obj, models.DbMessageConfig.prototype);
                break;
            case "DbMessageConfigReply":
                Object.setPrototypeOf(obj, models.DbMessageConfigReply.prototype);
                break;
            case "DbMessageEvent":
                Object.setPrototypeOf(obj, models.DbMessageEvent.prototype);
                break;
        }

        obj.fixupFields();
    }

    fixupFields() {
    }

}
