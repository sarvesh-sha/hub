/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Builder APIs
 * APIs and Definitions for the Optio3 Builder product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class DelayedTaskCreation extends models.DelayedOperation {
    constructor() {
        super();
        this.setDiscriminator("DelayedTaskCreation");
    }

    getFixupPrototypeFunction() { return DelayedTaskCreation.fixupPrototype; }

    static newInstance(model: Partial<DelayedTaskCreation>): DelayedTaskCreation {
        let obj = Object.assign(new DelayedTaskCreation(), model);
        DelayedTaskCreation.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<DelayedTaskCreation>): DelayedTaskCreation {
        if (!model) return null;
        return DelayedTaskCreation.newInstance(<DelayedTaskCreation> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: DelayedTaskCreation) {
        models.DelayedOperation.fixupPrototype(obj);
    }

    fixupFields() {
        super.fixupFields();
        if (this.loc_image) {
            models.RecordLocator.fixupPrototype(this.loc_image);
        }
        if (this.loc_context) {
            models.RecordLocator.fixupPrototype(this.loc_context);
        }
        if (this.loc_tasksToStop) {
            for (let val of this.loc_tasksToStop) {
                models.RecordLocator.fixupPrototype(val);
            }
        }
    }

    role: models.DeploymentRole;

    loc_image: models.RecordLocator;

    loc_context: models.RecordLocator;

    loc_tasksToStop: Array<models.RecordLocator>;

    ignoreOfflineDelay: boolean;

}
