/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class UsageFilterResponse {
    getFixupPrototypeFunction() { return UsageFilterResponse.fixupPrototype; }

    static newInstance(model: Partial<UsageFilterResponse>): UsageFilterResponse {
        let obj = Object.assign(new UsageFilterResponse(), model);
        UsageFilterResponse.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<UsageFilterResponse>): UsageFilterResponse {
        if (!model) return null;
        return UsageFilterResponse.newInstance(<UsageFilterResponse> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: UsageFilterResponse) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.UsageFilterResponse.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.userPreferenceHits === undefined) {
            this.userPreferenceHits = 0;
        }
        if (this.systemPreferenceHits === undefined) {
            this.systemPreferenceHits = 0;
        }
        if (this.dashboardHits === undefined) {
            this.dashboardHits = 0;
        }
        if (this.alertDefinitionVersionHits === undefined) {
            this.alertDefinitionVersionHits = 0;
        }
        if (this.metricsDefinitionVersionHits === undefined) {
            this.metricsDefinitionVersionHits = 0;
        }
        if (this.normalizationVersionHits === undefined) {
            this.normalizationVersionHits = 0;
        }
        if (this.reportDefinitionVersionHits === undefined) {
            this.reportDefinitionVersionHits = 0;
        }
        if (this.workflowHits === undefined) {
            this.workflowHits = 0;
        }
        if (this.userPreferenceItems) {
            for (let val of this.userPreferenceItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.systemPreferenceItems) {
            for (let val of this.systemPreferenceItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.dashboardItems) {
            for (let val of this.dashboardItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.alertDefinitionVersionItems) {
            for (let val of this.alertDefinitionVersionItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.metricsDefinitionVersionItems) {
            for (let val of this.metricsDefinitionVersionItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.normalizationVersionItems) {
            for (let val of this.normalizationVersionItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.reportDefinitionVersionItems) {
            for (let val of this.reportDefinitionVersionItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
        if (this.workflowItems) {
            for (let val of this.workflowItems) {
                models.RecordIdentity.fixupPrototype(val);
            }
        }
    }

    userPreferenceHits: number;

    userPreferenceItems: Array<models.RecordIdentity>;

    systemPreferenceHits: number;

    systemPreferenceItems: Array<models.RecordIdentity>;

    dashboardHits: number;

    dashboardItems: Array<models.RecordIdentity>;

    alertDefinitionVersionHits: number;

    alertDefinitionVersionItems: Array<models.RecordIdentity>;

    metricsDefinitionVersionHits: number;

    metricsDefinitionVersionItems: Array<models.RecordIdentity>;

    normalizationVersionHits: number;

    normalizationVersionItems: Array<models.RecordIdentity>;

    reportDefinitionVersionHits: number;

    reportDefinitionVersionItems: Array<models.RecordIdentity>;

    workflowHits: number;

    workflowItems: Array<models.RecordIdentity>;

}
