/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class ClassificationPointInputDetails {
    getFixupPrototypeFunction() { return ClassificationPointInputDetails.fixupPrototype; }

    static newInstance(model: Partial<ClassificationPointInputDetails>): ClassificationPointInputDetails {
        let obj = Object.assign(new ClassificationPointInputDetails(), model);
        ClassificationPointInputDetails.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<ClassificationPointInputDetails>): ClassificationPointInputDetails {
        if (!model) return null;
        return ClassificationPointInputDetails.newInstance(<ClassificationPointInputDetails> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: ClassificationPointInputDetails) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.ClassificationPointInputDetails.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.controllerTransportAddress) {
            models.TransportAddress.fixupPrototype(this.controllerTransportAddress);
        }
    }

    objectName: string;

    objectBackupName: string;

    objectBackupEquipmentName: string;

    objectWorkflowOverrideName: string;

    objectDescription: string;

    objectIdentifier: string;

    objectType: string;

    objectUnits: string;

    objectLocation: string;

    objectBackupStructure: Array<string>;

    controllerName: string;

    controllerBackupName: string;

    controllerDescription: string;

    controllerIdentifier: string;

    controllerLocation: string;

    controllerModelName: string;

    controllerVendorName: string;

    controllerTransportAddress: models.TransportAddress;

}
