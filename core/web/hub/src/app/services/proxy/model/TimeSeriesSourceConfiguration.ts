/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class TimeSeriesSourceConfiguration {
    getFixupPrototypeFunction() { return TimeSeriesSourceConfiguration.fixupPrototype; }

    static newInstance(model: Partial<TimeSeriesSourceConfiguration>): TimeSeriesSourceConfiguration {
        let obj = Object.assign(new TimeSeriesSourceConfiguration(), model);
        TimeSeriesSourceConfiguration.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<TimeSeriesSourceConfiguration>): TimeSeriesSourceConfiguration {
        if (!model) return null;
        return TimeSeriesSourceConfiguration.newInstance(<TimeSeriesSourceConfiguration> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: TimeSeriesSourceConfiguration) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.TimeSeriesSourceConfiguration.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.showMovingAverage === undefined) {
            this.showMovingAverage = 0;
        }
        if (this.axis === undefined) {
            this.axis = 0;
        }
        if (this.panel === undefined) {
            this.panel = 0;
        }
        if (this.range) {
            models.ToggleableNumericRange.fixupPrototype(this.range);
        }
        if (this.timeOffset) {
            models.TimeDuration.fixupPrototype(this.timeOffset);
        }
        if (this.pointBinding) {
            models.AssetGraphBinding.fixupPrototype(this.pointBinding);
        }
    }

    uuid: string;

    id: string;

    dimension: string;

    color: string;

    showMovingAverage: number;

    onlyShowMovingAverage: boolean;

    showDecimation: boolean;

    axis: number;

    panel: number;

    range: models.ToggleableNumericRange;

    timeOffset: models.TimeDuration;

    pointBinding: models.AssetGraphBinding;

    decimationDisplay: models.TimeSeriesDecimationDisplay;

}
