/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class EngineValue {
    __type: string;

    protected setDiscriminator(type: string) {
        this.__type = type;
    }

    getFixupPrototypeFunction() { return EngineValue.fixupPrototype; }

    static newInstance(model: Partial<EngineValue>): EngineValue {
        let obj = Object.assign(new EngineValue(), model);
        EngineValue.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<EngineValue>): EngineValue {
        if (!model) return null;
        return EngineValue.newInstance(<EngineValue> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: EngineValue) {
        if (!obj) return;

        switch (obj.__type)
        {
            case "AlertEngineValueAlert":
                Object.setPrototypeOf(obj, models.AlertEngineValueAlert.prototype);
                break;
            case "AlertEngineValueAlertSeverity":
                Object.setPrototypeOf(obj, models.AlertEngineValueAlertSeverity.prototype);
                break;
            case "AlertEngineValueAlertStatus":
                Object.setPrototypeOf(obj, models.AlertEngineValueAlertStatus.prototype);
                break;
            case "AlertEngineValueAsset":
                Object.setPrototypeOf(obj, models.AlertEngineValueAsset.prototype);
                break;
            case "AlertEngineValueAssetQueryCondition":
                Object.setPrototypeOf(obj, models.AlertEngineValueAssetQueryCondition.prototype);
                break;
            case "AlertEngineValueAssets":
                Object.setPrototypeOf(obj, models.AlertEngineValueAssets.prototype);
                break;
            case "AlertEngineValueControlPoint":
                Object.setPrototypeOf(obj, models.AlertEngineValueControlPoint.prototype);
                break;
            case "AlertEngineValueControlPointCoordinates":
                Object.setPrototypeOf(obj, models.AlertEngineValueControlPointCoordinates.prototype);
                break;
            case "AlertEngineValueControlPoints":
                Object.setPrototypeOf(obj, models.AlertEngineValueControlPoints.prototype);
                break;
            case "AlertEngineValueDeliveryOptions":
                Object.setPrototypeOf(obj, models.AlertEngineValueDeliveryOptions.prototype);
                break;
            case "AlertEngineValueDevice":
                Object.setPrototypeOf(obj, models.AlertEngineValueDevice.prototype);
                break;
            case "AlertEngineValueEmail":
                Object.setPrototypeOf(obj, models.AlertEngineValueEmail.prototype);
                break;
            case "AlertEngineValueLocation":
                Object.setPrototypeOf(obj, models.AlertEngineValueLocation.prototype);
                break;
            case "AlertEngineValueLogicalAsset":
                Object.setPrototypeOf(obj, models.AlertEngineValueLogicalAsset.prototype);
                break;
            case "AlertEngineValueSample":
                Object.setPrototypeOf(obj, models.AlertEngineValueSample.prototype);
                break;
            case "AlertEngineValueSamples":
                Object.setPrototypeOf(obj, models.AlertEngineValueSamples.prototype);
                break;
            case "AlertEngineValueSms":
                Object.setPrototypeOf(obj, models.AlertEngineValueSms.prototype);
                break;
            case "AlertEngineValueTicket":
                Object.setPrototypeOf(obj, models.AlertEngineValueTicket.prototype);
                break;
            case "AlertEngineValueTravelEntry":
                Object.setPrototypeOf(obj, models.AlertEngineValueTravelEntry.prototype);
                break;
            case "AlertEngineValueTravelLog":
                Object.setPrototypeOf(obj, models.AlertEngineValueTravelLog.prototype);
                break;
            case "EngineValueDateTime":
                Object.setPrototypeOf(obj, models.EngineValueDateTime.prototype);
                break;
            case "EngineValueDateTimeList":
                Object.setPrototypeOf(obj, models.EngineValueDateTimeList.prototype);
                break;
            case "EngineValueDateTimeRange":
                Object.setPrototypeOf(obj, models.EngineValueDateTimeRange.prototype);
                break;
            case "EngineValueDuration":
                Object.setPrototypeOf(obj, models.EngineValueDuration.prototype);
                break;
            case "EngineValueEngineeringUnits":
                Object.setPrototypeOf(obj, models.EngineValueEngineeringUnits.prototype);
                break;
            case "EngineValueList":
                Object.setPrototypeOf(obj, models.EngineValueList.prototype);
                break;
            case "EngineValueListConcrete":
                Object.setPrototypeOf(obj, models.EngineValueListConcrete.prototype);
                break;
            case "EngineValueLookupTable":
                Object.setPrototypeOf(obj, models.EngineValueLookupTable.prototype);
                break;
            case "EngineValuePrimitiveBoolean":
                Object.setPrototypeOf(obj, models.EngineValuePrimitiveBoolean.prototype);
                break;
            case "EngineValuePrimitiveNumber":
                Object.setPrototypeOf(obj, models.EngineValuePrimitiveNumber.prototype);
                break;
            case "EngineValuePrimitiveString":
                Object.setPrototypeOf(obj, models.EngineValuePrimitiveString.prototype);
                break;
            case "EngineValueRegexMatch":
                Object.setPrototypeOf(obj, models.EngineValueRegexMatch.prototype);
                break;
            case "EngineValueRegexReplaceTable":
                Object.setPrototypeOf(obj, models.EngineValueRegexReplaceTable.prototype);
                break;
            case "EngineValueTimeZone":
                Object.setPrototypeOf(obj, models.EngineValueTimeZone.prototype);
                break;
            case "EngineValueWeeklySchedule":
                Object.setPrototypeOf(obj, models.EngineValueWeeklySchedule.prototype);
                break;
            case "MetricsEngineSelectValue":
                Object.setPrototypeOf(obj, models.MetricsEngineSelectValue.prototype);
                break;
            case "MetricsEngineValueScalar":
                Object.setPrototypeOf(obj, models.MetricsEngineValueScalar.prototype);
                break;
            case "MetricsEngineValueSeries":
                Object.setPrototypeOf(obj, models.MetricsEngineValueSeries.prototype);
                break;
            case "MetricsEngineValueSetOfSeries":
                Object.setPrototypeOf(obj, models.MetricsEngineValueSetOfSeries.prototype);
                break;
            case "NormalizationEngineValueController":
                Object.setPrototypeOf(obj, models.NormalizationEngineValueController.prototype);
                break;
            case "NormalizationEngineValueDocument":
                Object.setPrototypeOf(obj, models.NormalizationEngineValueDocument.prototype);
                break;
            case "NormalizationEngineValueEquipment":
                Object.setPrototypeOf(obj, models.NormalizationEngineValueEquipment.prototype);
                break;
            case "NormalizationEngineValueLocation":
                Object.setPrototypeOf(obj, models.NormalizationEngineValueLocation.prototype);
                break;
            case "NormalizationEngineValuePoint":
                Object.setPrototypeOf(obj, models.NormalizationEngineValuePoint.prototype);
                break;
        }

        obj.fixupFields();
    }

    fixupFields() {
    }

}
