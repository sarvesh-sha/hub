/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class I2CSensor {
    __type: string;

    protected setDiscriminator(type: string) {
        this.__type = type;
    }

    getFixupPrototypeFunction() { return I2CSensor.fixupPrototype; }

    static newInstance(model: Partial<I2CSensor>): I2CSensor {
        let obj = Object.assign(new I2CSensor(), model);
        I2CSensor.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<I2CSensor>): I2CSensor {
        if (!model) return null;
        return I2CSensor.newInstance(<I2CSensor> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: I2CSensor) {
        if (!obj) return;

        switch (obj.__type)
        {
            case "I2CSensor_MCP3428":
                Object.setPrototypeOf(obj, models.I2CSensorMCP3428.prototype);
                break;
            case "I2CSensor_SHT3x":
                Object.setPrototypeOf(obj, models.I2CSensorSHT3x.prototype);
                break;
        }

        obj.fixupFields();
    }

    fixupFields() {
        if (this.bus === undefined) {
            this.bus = 0;
        }
        if (this.samplingPeriod === undefined) {
            this.samplingPeriod = 0;
        }
        if (this.averagingSamples === undefined) {
            this.averagingSamples = 0;
        }
        if (this.equipmentClass) {
            models.WellKnownEquipmentClassOrCustom.fixupPrototype(this.equipmentClass);
        }
    }

    bus: number;

    samplingPeriod: number;

    averagingSamples: number;

    equipmentClass: models.WellKnownEquipmentClassOrCustom;

    instanceSelector: string;

}
