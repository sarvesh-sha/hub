/**
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Optio3 Hub APIs
 * APIs and Definitions for the Optio3 Hub product.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export class TimeSeriesAnnotationConfiguration {
    getFixupPrototypeFunction() { return TimeSeriesAnnotationConfiguration.fixupPrototype; }

    static newInstance(model: Partial<TimeSeriesAnnotationConfiguration>): TimeSeriesAnnotationConfiguration {
        let obj = Object.assign(new TimeSeriesAnnotationConfiguration(), model);
        TimeSeriesAnnotationConfiguration.fixupPrototype(obj);
        return obj;
    }

    static deepClone(model: Partial<TimeSeriesAnnotationConfiguration>): TimeSeriesAnnotationConfiguration {
        if (!model) return null;
        return TimeSeriesAnnotationConfiguration.newInstance(<TimeSeriesAnnotationConfiguration> JSON.parse(JSON.stringify(model)));
    }

    static fixupPrototype(obj: TimeSeriesAnnotationConfiguration) {
        if (!obj) return;

        Object.setPrototypeOf(obj, models.TimeSeriesAnnotationConfiguration.prototype);

        obj.fixupFields();
    }

    fixupFields() {
        if (this.panel === undefined) {
            this.panel = 0;
        }
        if (this.minX === undefined) {
            this.minX = 0;
        }
        if (this.maxX === undefined) {
            this.maxX = 0;
        }
        if (this.minY === undefined) {
            this.minY = 0;
        }
        if (this.maxY === undefined) {
            this.maxY = 0;
        }
        if (this.tooltipOffsetX === undefined) {
            this.tooltipOffsetX = 0;
        }
        if (this.tooltipOffsetY === undefined) {
            this.tooltipOffsetY = 0;
        }
    }

    hideTooltip: boolean;

    title: string;

    description: string;

    panel: number;

    sourceId: string;

    type: models.TimeSeriesAnnotationType;

    minX: number;

    maxX: number;

    minY: number;

    maxY: number;

    tooltipOffsetX: number;

    tooltipOffsetY: number;

}
