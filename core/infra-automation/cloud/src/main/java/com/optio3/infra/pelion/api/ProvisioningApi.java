/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Provisioning
 * <p>Activate a subscriber and assign a tariff.<p><strong>Note&#58;</strong> If you want to perform bulk activations, you must use the Connectivity Management platform user interface.</p></p><p>You can use these endpoints to&#58;</p> <ul> <li>View a list of tariffs that you can assign to a stock subscriber</li> <li>Activate a stock subscriber and assign a tariff</li> </ul> <p><em>Stock</em> refers to subscribers (physical devices or virtual profiles) that are available ('in stock') and not yet activated. The Provisioning endpoints apply only to subscribers with a status of 'stock'. For any other subscriber state, such as 'active' or 'terminated', the endpoints return an error.</p> <p>You must provide the subscriber's <em>physicalId</em> as a parameter in the request. This value varies depending on the subscriber type&#58;</p><ul><li><em>Cellular</em> - use the ICCID</li><li><em>Non-IP</em> - use the Device EUI</li><li><em>Satellite</em> - use the IMEI</li></ul> <p><strong>Note&#58;</strong> You should allow between 24 and 48 hours for the network operator to process activation requests.</p>
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.pelion.api;

import java.util.List;
import java.util.Map;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;

import com.optio3.infra.pelion.model.ActivationRequestBody;
import com.optio3.infra.pelion.model.ActivationResponse;
import com.optio3.infra.pelion.model.ApiResults;
import com.optio3.infra.pelion.model.TariffObject;

@Path("/")
public interface ProvisioningApi
{
    @POST
    @Path("/provisioning/{physicalId}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    public ApiResults<ActivationResponse> activateSubscriber(@PathParam("physicalId") String physicalId,
                                                             ActivationRequestBody body);

    @GET
    @Path("/provisioning/{physicalId}")
    @Produces({ "application/json" })
    public ApiResults<Map<String, List<TariffObject>>> getAvailableTariffs(@PathParam("physicalId") String physicalId);
}
