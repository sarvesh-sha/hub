/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * api.godaddy.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.4.9
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.godaddy.model;

public class DomainTransferIn
{

    /**
     * Authorization code from registrar for transferring a domain
     */
    public String  authCode  = null;
    /**
     * Required agreements can be retrieved via the GET ./domains/agreements endpoint
     */
    public Consent consent   = null;
    /**
     * Can be more than 1 but no more than 10 years total including current registration length
     * minimum: 1
     * maximum: 10
     */
    public Integer period    = null;
    /**
     * Whether or not privacy has been requested
     */
    public Boolean privacy   = false;
    /**
     * Whether or not the domain should be configured to automatically renew
     */
    public Boolean renewAuto = true;

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class DomainTransferIn {\n");

        sb.append("    authCode: ")
          .append(toIndentedString(authCode))
          .append("\n");
        sb.append("    consent: ")
          .append(toIndentedString(consent))
          .append("\n");
        sb.append("    period: ")
          .append(toIndentedString(period))
          .append("\n");
        sb.append("    privacy: ")
          .append(toIndentedString(privacy))
          .append("\n");
        sb.append("    renewAuto: ")
          .append(toIndentedString(renewAuto))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
