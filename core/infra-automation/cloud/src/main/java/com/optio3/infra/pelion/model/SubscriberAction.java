/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Subscriber Actions
 * <p>Perform troubleshooting actions for your subscribers.</p><p>You can use these endpoints to&#58;</p><ul> <li>View a list of available actions</li> <li>Refresh the subscriber services that are currently running (SIM refresh) </li> <li>Disconnect/reconnect a subscriber (forces a new connection)</li> <li>Perform a SIM swap between two subscribers to transfer products, services and tariff details from one SIM to another</li></ul><p>The subscriber actions you can perform depend on the subscriber type and network.</p><p><strong>Note -</strong> Some endpoints require you to pass the subscriber <em>physicalId</em> parameter in the request. This value varies depending on the subscriber type&#58;</p><ul><li><em>Cellular</em> - use the ICCID</li><li><em>Non-IP</em> - use the Device EUI</li><li><em>Satellite</em> - use the IMEI</li></ul>
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.pelion.model;

public class SubscriberAction
{

    /**
     * A description of the action.
     */
    public String description = null;
    /**
     * The action name.
     */
    public String name        = null;

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SubscriberAction {\n");

        sb.append("    description: ")
          .append(toIndentedString(description))
          .append("\n");
        sb.append("    name: ")
          .append(toIndentedString(name))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
