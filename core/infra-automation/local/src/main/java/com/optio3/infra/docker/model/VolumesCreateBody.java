/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

import java.util.HashMap;
import java.util.Map;

public class VolumesCreateBody
{

    /**
     * The new volume's name. If not specified, Docker generates a name.
     */
    public String              name       = null;
    /**
     * Name of the volume driver to use.
     */
    public String              driver     = "local";
    /**
     * A mapping of driver options and values. These options are passed directly to the driver and are driver specific.
     */
    public Map<String, String> driverOpts = new HashMap<String, String>();
    /**
     * User-defined key/value metadata.
     */
    public Map<String, String> labels     = new HashMap<String, String>();

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class VolumesCreateBody {\n");

        sb.append("    name: ")
          .append(toIndentedString(name))
          .append("\n");
        sb.append("    driver: ")
          .append(toIndentedString(driver))
          .append("\n");
        sb.append("    driverOpts: ")
          .append(toIndentedString(driverOpts))
          .append("\n");
        sb.append("    labels: ")
          .append(toIndentedString(labels))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
