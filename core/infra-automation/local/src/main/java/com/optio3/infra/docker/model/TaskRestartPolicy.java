/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

public class TaskRestartPolicy
{

    /**
     * Condition for restart.
     */
    public TaskRestartPolicyMode condition   = null;
    /**
     * Delay between restart attempts.
     */
    public Long                  delay       = null;
    /**
     * Maximum attempts to restart a given container before giving up (default value is 0, which is ignored).
     */
    public Long                  maxAttempts = 0l;
    /**
     * Windows is the time window used to evaluate the restart policy (default value is 0, which is unbounded).
     */
    public Long                  window      = 0l;

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TaskRestartPolicy {\n");

        sb.append("    condition: ")
          .append(toIndentedString(condition))
          .append("\n");
        sb.append("    delay: ")
          .append(toIndentedString(delay))
          .append("\n");
        sb.append("    maxAttempts: ")
          .append(toIndentedString(maxAttempts))
          .append("\n");
        sb.append("    window: ")
          .append(toIndentedString(window))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
