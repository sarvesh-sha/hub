/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Registry API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.registry.api;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

import com.optio3.infra.registry.model.Catalog;
import com.optio3.infra.registry.model.ManifestV1;
import com.optio3.infra.registry.model.ManifestV2;
import com.optio3.infra.registry.model.Tags;

@Path("/")
public interface RegistryApi
{
    @DELETE
    @Path("/{name}/manifests/{referenceV1}")
    public void deleteManifest(@PathParam("name") String name,
                               @PathParam("referenceV1") String referenceV1);

    @GET
    @Path("/_catalog")
    @Produces({ "application/json" })
    public Catalog getCatalog(@QueryParam("n") Integer n,
                              @QueryParam("last") Integer last);

    @GET
    @Path("/{name}/manifests/{referenceRaw}")
    @Produces({ "application/vnd.docker.distribution.manifest.v2+json" })
    public Response getManifestRaw(@PathParam("name") String name,
                                   @PathParam("referenceRaw") String referenceRaw);

    @GET
    @Path("/{name}/manifests/{referenceV1}")
    @Produces({ "application/vnd.docker.distribution.manifest.v1+json" })
    public ManifestV1 getManifestV1(@PathParam("name") String name,
                                    @PathParam("referenceV1") String referenceV1);

    @GET
    @Path("/{name}/manifests/{referenceV2}")
    @Produces({ "application/vnd.docker.distribution.manifest.v2+json" })
    public ManifestV2 getManifestV2(@PathParam("name") String name,
                                    @PathParam("referenceV2") String referenceV2);

    @GET
    @Path("/{name}/tags/list")
    @Consumes({ "application/json" })
    public Tags getTags(@PathParam("name") String name,
                        @QueryParam("n") Integer n,
                        @QueryParam("last") Integer last);
}
