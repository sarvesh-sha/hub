/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

import java.util.ArrayList;
import java.util.List;

public class HealthConfig
{

    /**
     * The test to perform. Possible values are:  - `[]` inherit healthcheck from image or parent image - `[\"NONE\"]` disable healthcheck - `[\"CMD\", args...]` exec arguments directly - `[\"CMD-SHELL\", command]` run command with system's default shell
     */
    public List<String> test     = new ArrayList<String>();
    /**
     * The time to wait between checks in nanoseconds. It should be 0 or not less than 1000000000(1s). 0 means inherit.
     */
    public Integer      interval = null;
    /**
     * The time to wait before considering the check to have hung. It should be 0 or not less than 1000000000(1s). 0 means inherit.
     */
    public Integer      timeout  = null;
    /**
     * The number of consecutive failures needed to consider a container as unhealthy. 0 means inherit.
     */
    public Integer      retries  = null;

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class HealthConfig {\n");

        sb.append("    test: ")
          .append(toIndentedString(test))
          .append("\n");
        sb.append("    interval: ")
          .append(toIndentedString(interval))
          .append("\n");
        sb.append("    timeout: ")
          .append(toIndentedString(timeout))
          .append("\n");
        sb.append("    retries: ")
          .append(toIndentedString(retries))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
