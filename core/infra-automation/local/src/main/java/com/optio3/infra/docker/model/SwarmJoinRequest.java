/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

public class SwarmJoinRequest
{

    /**
     * Listen address used for inter-manager communication if the node gets promoted to manager, as well as determining the networking interface used for the VXLAN Tunnel Endpoint (VTEP).
     */
    public String listenAddr    = null;
    /**
     * Externally reachable address advertised to other nodes. This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the port number from the listen address is used. If `AdvertiseAddr` is not specified, it will be automatically detected when possible.
     */
    public String advertiseAddr = null;
    /**
     * Addresses of manager nodes already participating in the swarm.
     */
    public String remoteAddrs   = null;
    /**
     * Secret token for joining this swarm.
     */
    public String joinToken     = null;

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SwarmJoinRequest {\n");

        sb.append("    listenAddr: ")
          .append(toIndentedString(listenAddr))
          .append("\n");
        sb.append("    advertiseAddr: ")
          .append(toIndentedString(advertiseAddr))
          .append("\n");
        sb.append("    remoteAddrs: ")
          .append(toIndentedString(remoteAddrs))
          .append("\n");
        sb.append("    joinToken: ")
          .append(toIndentedString(joinToken))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
