/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

public class Mount
{

    /**
     * Container path.
     */
    public String        target        = null;
    /**
     * Mount source (e.g. a volume name, a host path).
     */
    public String        source        = null;
    /**
     * The mount type. Available types:  - `bind` Mounts a file or directory from the host into the container. Must exist prior to creating the container. - `volume` Creates a volume with the given name and options (or uses a pre-existing volume with the same name and options). These are **not** removed when the container is removed. - `tmpfs` Create a tmpfs with the given options. The mount source cannot be specified for tmpfs.
     */
    public MountType     type          = null;
    /**
     * Whether the mount should be read-only.
     */
    public Boolean       readOnly      = null;
    public BindOptions   bindOptions   = null;
    public VolumeOptions volumeOptions = null;
    public TmpfsOptions  tmpfsOptions  = null;

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class Mount {\n");

        sb.append("    target: ")
          .append(toIndentedString(target))
          .append("\n");
        sb.append("    source: ")
          .append(toIndentedString(source))
          .append("\n");
        sb.append("    type: ")
          .append(toIndentedString(type))
          .append("\n");
        sb.append("    readOnly: ")
          .append(toIndentedString(readOnly))
          .append("\n");
        sb.append("    bindOptions: ")
          .append(toIndentedString(bindOptions))
          .append("\n");
        sb.append("    volumeOptions: ")
          .append(toIndentedString(volumeOptions))
          .append("\n");
        sb.append("    tmpfsOptions: ")
          .append(toIndentedString(tmpfsOptions))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
