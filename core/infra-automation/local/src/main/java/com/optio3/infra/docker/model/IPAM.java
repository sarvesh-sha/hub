/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IPAM
{

    /**
     * Name of the IPAM driver to use.
     */
    public String                    driver  = "default";
    /**
     * List of IPAM configuration options, specified as a map: `{\"Subnet\": <CIDR>, \"IPRange\": <CIDR>, \"Gateway\": <IP address>, \"AuxAddress\": <device_name:IP address>}`
     */
    public List<Map<String, String>> config  = new ArrayList<Map<String, String>>();
    /**
     * Driver-specific options, specified as a map.
     */
    public Map<String, String>       options = new HashMap<String, String>();

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class IPAM {\n");

        sb.append("    driver: ")
          .append(toIndentedString(driver))
          .append("\n");
        sb.append("    config: ")
          .append(toIndentedString(config))
          .append("\n");
        sb.append("    options: ")
          .append(toIndentedString(options))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
