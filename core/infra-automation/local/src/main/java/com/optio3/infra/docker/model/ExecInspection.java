/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

public class ExecInspection
{

    public String        ID            = null;
    public Boolean       running       = null;
    public Integer       exitCode      = null;
    public ProcessConfig processConfig = null;
    public Boolean       openStdin     = null;
    public Boolean       openStderr    = null;
    public Boolean       openStdout    = null;
    public String        containerID   = null;
    /**
     * The system process ID for the exec process.
     */
    public Integer       pid           = null;

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExecInspection {\n");

        sb.append("    ID: ")
          .append(toIndentedString(ID))
          .append("\n");
        sb.append("    running: ")
          .append(toIndentedString(running))
          .append("\n");
        sb.append("    exitCode: ")
          .append(toIndentedString(exitCode))
          .append("\n");
        sb.append("    processConfig: ")
          .append(toIndentedString(processConfig))
          .append("\n");
        sb.append("    openStdin: ")
          .append(toIndentedString(openStdin))
          .append("\n");
        sb.append("    openStderr: ")
          .append(toIndentedString(openStderr))
          .append("\n");
        sb.append("    openStdout: ")
          .append(toIndentedString(openStdout))
          .append("\n");
        sb.append("    containerID: ")
          .append(toIndentedString(containerID))
          .append("\n");
        sb.append("    pid: ")
          .append(toIndentedString(pid))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
