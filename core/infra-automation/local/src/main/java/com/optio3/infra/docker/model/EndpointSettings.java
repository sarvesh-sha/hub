/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.
 *
 * OpenAPI spec version: 1.28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.docker.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EndpointSettings
{

    public EndpointIPAMConfig  ipAMConfig          = null;
    public List<String>        links               = new ArrayList<String>();
    public List<String>        aliases             = new ArrayList<String>();
    public String              networkID           = null;
    public String              endpointID          = null;
    public String              gateway             = null;
    public String              ipAddress           = null;
    public Integer             ipPrefixLen         = null;
    public String              ipv6Gateway         = null;
    public String              globalIPv6Address   = null;
    public Long                globalIPv6PrefixLen = null;
    public String              macAddress          = null;
    public Map<String, String> driverOpts          = new HashMap<String, String>();

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EndpointSettings {\n");

        sb.append("    ipAMConfig: ")
          .append(toIndentedString(ipAMConfig))
          .append("\n");
        sb.append("    links: ")
          .append(toIndentedString(links))
          .append("\n");
        sb.append("    aliases: ")
          .append(toIndentedString(aliases))
          .append("\n");
        sb.append("    networkID: ")
          .append(toIndentedString(networkID))
          .append("\n");
        sb.append("    endpointID: ")
          .append(toIndentedString(endpointID))
          .append("\n");
        sb.append("    gateway: ")
          .append(toIndentedString(gateway))
          .append("\n");
        sb.append("    ipAddress: ")
          .append(toIndentedString(ipAddress))
          .append("\n");
        sb.append("    ipPrefixLen: ")
          .append(toIndentedString(ipPrefixLen))
          .append("\n");
        sb.append("    ipv6Gateway: ")
          .append(toIndentedString(ipv6Gateway))
          .append("\n");
        sb.append("    globalIPv6Address: ")
          .append(toIndentedString(globalIPv6Address))
          .append("\n");
        sb.append("    globalIPv6PrefixLen: ")
          .append(toIndentedString(globalIPv6PrefixLen))
          .append("\n");
        sb.append("    macAddress: ")
          .append(toIndentedString(macAddress))
          .append("\n");
        sb.append("    driverOpts: ")
          .append(toIndentedString(driverOpts))
          .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString()
                .replace("\n", "\n    ");
    }
}
