/*
 * Copyright (C) 2017-, Optio3, Inc. All Rights Reserved.
 *
 * Proprietary & Confidential Information.
 *
 * Subscriber Actions
 * <p>Perform troubleshooting actions for your subscribers.</p><p>You can use these endpoints to&#58;</p><ul> <li>View a list of available actions</li> <li>Refresh the subscriber services that are currently running (SIM refresh) </li> <li>Disconnect/reconnect a subscriber (forces a new connection)</li> <li>Perform a SIM swap between two subscribers to transfer products, services and tariff details from one SIM to another</li></ul><p>The subscriber actions you can perform depend on the subscriber type and network.</p><p><strong>Note -</strong> Some endpoints require you to pass the subscriber <em>physicalId</em> parameter in the request. This value varies depending on the subscriber type&#58;</p><ul><li><em>Cellular</em> - use the ICCID</li><li><em>Non-IP</em> - use the Device EUI</li><li><em>Satellite</em> - use the IMEI</li></ul>
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.optio3.infra.integrations.infiniteimpulse.api;

import java.time.ZonedDateTime;
import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;

import com.optio3.infra.integrations.infiniteimpulse.model.LoginRequest;
import com.optio3.infra.integrations.infiniteimpulse.model.LoginResponse;
import com.optio3.infra.integrations.infiniteimpulse.model.MonitorsRequest;
import com.optio3.infra.integrations.infiniteimpulse.model.MonitorsResponse;
import com.optio3.infra.integrations.infiniteimpulse.model.TrendHistory;

@Path("/")
public interface InfiniteImpulseApi
{
    @POST
    @Path("/login")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    LoginResponse login(LoginRequest req);

    @GET
    @Path("/api/2.0/md/trend-history")
    @Produces({ "application/json" })
    TrendHistory trendHistory(@QueryParam("from") ZonedDateTime from,
                              @QueryParam("to") ZonedDateTime to,
                              @QueryParam("intervalUnit") String intervalUnit,
                              @QueryParam("intervalValue") int intervalValue,
                              @QueryParam("monitorId") int monitorId);

    @POST
    @Path("/api/2.0/admin/getMonitorsByPlantId")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    List<MonitorsResponse> getMonitorsByPlantId(MonitorsRequest req);
}
